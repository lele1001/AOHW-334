
// File generated by noodle version R-2021.03#6beb14dd34#220609, Fri Jun 28 08:35:55 2024
// Copyright 2014-2021 Synopsys, Inc. All rights reserved.
// noodle -v -I/home/xilinx/software/Vitis/2022.2/aietools/data/versal_prod/lib -I/home/xilinx/software/Vitis/2022.2/aietools/data/versal_prod/lib/isg -I/home/xilinx/software/Vitis/2022.2/aietools/include -I../common -I/home/users/eleonora.cabai/Documents/K-Means-AIE/aie/. -I/home/users/eleonora.cabai/Documents/K-Means-AIE/aie/./src -I/home/users/eleonora.cabai/Documents/K-Means-AIE/aie/../common -I/home/users/eleonora.cabai/Documents/K-Means-AIE/aie/src -Isrc -I/home/xilinx/software/Vitis/2022.2/aietools/data/versal_prod/lib/runtime_cxx/libcxx-lite/include -I/home/xilinx/software/Vitis/2022.2/aietools/data/versal_prod/lib/runtime_cxx/libs/libcxx-9.0.0/include-lite -I/home/xilinx/software/Vitis/2022.2/aietools/data/versal_prod/lib/runtime/include -D__AIENGINE__ -D__AIEARCH__=10 -DDEPLOYMENT_ELF=1 -DAIE_OPTION_SCALAR_FLOAT_ON_VECTOR -D__tct_tgt__=220608 +Oitm -iaie_core.h +Sinl +Olbb=200 +Opmsa +Olzyinl +w../Release/chesswork ../Release/chesswork/24_0.sfg +Q1=+Sinl,+Olbb=200,+Opmsa,+Olzyinl +Q2=+Sinl,+Olbb=200,+Opmsa,+Olzyinl +Q3=+Sinl,+Olbb=1000,+Opmsa,+Olzyinl +Qfast=+Sinl,+Olbb=1000,+Opmsa,+Olzyinl,+Opfp +Qs=+Sinl,+Olbb=200,+Opmsa,+Olzyinl +Qz=+Sinl,+Olbb=200,+Opmsa,+Olzyinl me


/***
// unsigned assignment_function(v32int8, unsigned, unsigned, unsigned, void *, unsigned)
F_Z19assignment_functionN3aie6detail6vectorIiLj8EEE5PointP7Clusteri : user_defined, called {
    fnm : "_Z19assignment_functionN3aie6detail6vectorIiLj8EEE5PointP7Clusteri" 'unsigned _Z19assignment_functionN3aie6detail6vectorIiLj8EEE5PointP7Clusteri(v32int8, unsigned, unsigned, unsigned, void *, unsigned)'; 
    arg : ( addr:i w32:r v16w16:i w32:i w32:i w32:i addr:i w32:i );
    loc : ( LR[0] R[0] W[0] R[6] R[7] R[8] P[0] R[9] );
    flc : ( P[6] P[7] R[4] R[10] R[11] );
    frm : ( );
}
****
***/

[
    0 : _Z19assignment_functionN3aie6detail6vectorIiLj8EEE5PointP7Clusteri typ=iword bnd=e stl=PM
    3 : __arg1 typ=w32 bnd=p
    4 : __arg2 typ=w32 bnd=p
    5 : __arg3 typ=w32 bnd=p
    6 : __arg4 typ=addr bnd=p
   11 : distances typ=v16w16 bnd=p tref2=l1v0
   12 : _cst val=0f bnd=D tref2=l4v1
   13 : i typ=w32 bnd=p tref2=l0v0_l4v0
   14 : __tmp typ=bool bnd=m
   15 : __tmp typ=w32 bnd=m
   16 : __tmp typ=v16w16 bnd=m
   17 : _cst val=2147483647f bnd=D tref2=l8v1
   21 : _cst typ=amod val=1f bnd=m
   23 : _cst typ=amod val=8f bnd=m
   24 : _cst val=8f bnd=D tref2=l12v1
   25 : _cst val=0f bnd=D tref2=l17v1
   26 : _cst val=512f bnd=D tref2=l18v1
   27 : _cst typ=amod val=0f bnd=m
   29 : __tmp typ=v32w16 bnd=m
   31 : _cst typ=w32 val=1985229328f bnd=m
   34 : _cst val=0f bnd=D tref2=l47v1
   36 : _cst typ=amod val=-1f bnd=m
   41 : __la typ=addr bnd=p
   42 : __rt typ=w32 bnd=p
  105 : __R_LC typ=w32 bnd=d stl=LC
  106 : __R_LE typ=addr bnd=d stl=LE
  107 : __R_LS typ=addr bnd=d stl=LS
  123 : __R_SP typ=addr bnd=d stl=SP
  124 : __sp typ=addr bnd=b stl=SP
  125 : __rd___sp typ=addr bnd=m
  126 : __wr___sp typ=addr bnd=m
  127 : __rd___sp typ=addr bnd=m
  129 : __wr___sp typ=addr bnd=m
  132 : __ct_7 typ=amod val=7f bnd=m
  133 : __ct_2147483647 typ=w32 val=2147483647f bnd=m
  136 : __ct_4 typ=amod val=4f bnd=m
  137 : __ct_2 typ=amod val=2f bnd=m
  143 : __linex typ=w32 bnd=m
  144 : __shv___tmp typ=w32 bnd=m
  145 : __shv___tmp typ=w32 bnd=m
  154 : __rt typ=v16w16 bnd=m tref=v8int32__
  159 : __tmp typ=w32 bnd=m
  161 : __tmp typ=bool bnd=m
  163 : __tmp typ=v8w16 bnd=m
  164 : __ct_1 typ=t01u val=1f bnd=m
  165 : __ct_3 typ=amod val=3f bnd=m
  166 : __tmp typ=w32 bnd=m
  167 : __tmp typ=t03u bnd=m
  168 : __tmp typ=v8w16 bnd=m
  170 : __tmp typ=v8w16 bnd=m
  171 : __tmp typ=v8w16 bnd=m
  175 : __apl_c typ=v8w16 bnd=m tref=v4int32__
  197 : __apl_c typ=v8w16 bnd=m tref=v4int32__
  199 : __tmp typ=w32 bnd=m
  201 : __tmp typ=bool bnd=m
  208 : __tmp typ=w32 bnd=m
  209 : __tmp typ=t03u bnd=m
  216 : __ct_0 typ=t03u val=0f bnd=m
  217 : __ct_0s0 typ=amod val=0s0 bnd=m
  218 : __ct_0S0 typ=amod val=0S0 bnd=m
  239 : __apl_cfg typ=macfg bnd=m tref=mac_config__
  241 : __ct_0 typ=t01u val=0f bnd=m
  242 : __ct_1 typ=t02u val=1f bnd=m
  243 : __ct_0 typ=t04u val=0f bnd=m
  244 : __ct_34717696 typ=w32 val=34717696f bnd=m
  245 : __ct_65536 typ=amod val=65536f bnd=m
  250 : __ct_1k typ=w32 val=1k bnd=m
  251 : __nofold typ=bool bnd=m
  252 : __ct_0K typ=w32 val=0K bnd=m
  273 : __either typ=bool bnd=m
  274 : __trgt typ=addr val=0J bnd=m
  275 : __trgt typ=addr val=0J bnd=m
  276 : __trgt typ=addr val=0J bnd=m
  277 : __trgt typ=addr val=0J bnd=m
  278 : __trgt typ=addr val=0J bnd=m
  279 : __trgt typ=addr val=0J bnd=m
  280 : __trgt typ=addr val=0J bnd=m
  281 : __trgt typ=addr val=0J bnd=m
  282 : __trgt typ=addr val=0J bnd=m
  283 : __trgt typ=addr val=0J bnd=m
  284 : __trgt typ=addr val=0J bnd=m
  285 : __trgt typ=addr val=0J bnd=m
  286 : __trgt typ=addr val=0J bnd=m
  287 : __trgt typ=addr val=0J bnd=m
  288 : __trgt typ=addr val=0J bnd=m
  289 : __trgt typ=addr val=0J bnd=m
  290 : __trgt typ=addr val=0J bnd=m
  291 : __vcnt typ=w32 bnd=m
  292 : __trgt typ=addr val=0J bnd=m
  293 : __trgt typ=addr val=0J bnd=m
]
F_Z19assignment_functionN3aie6detail6vectorIiLj8EEE5PointP7Clusteri {
    #182 off=0
    (_cst.23 var=21) const ()  <23>;
    (_cst.36 var=27) const ()  <36>;
    (__la.91 var=41 stl=LR off=0) inp ()  <100>;
    (__la.92 var=41) deassign (__la.91)  <101>;
    (distances.94 var=11 stl=W off=0) inp ()  <105>;
    (distances.95 var=11) deassign (distances.94)  <106>;
    (__arg1.96 var=3 stl=R off=6) inp ()  <107>;
    (__arg2.98 var=4 stl=R off=7) inp ()  <109>;
    (__arg3.100 var=5 stl=R off=8) inp ()  <111>;
    (__arg4.102 var=6 stl=P off=0) inp ()  <113>;
    (i.104 var=13 stl=R off=9) inp ()  <115>;
    (i.105 var=13) deassign (i.104)  <116>;
    (__R_SP.394 var=123) st_def ()  <411>;
    (__sp.395 var=124) source ()  <412>;
    (__rd___sp.396 var=125) rd_res_reg (__R_SP.394 __sp.395)  <413>;
    (__R_SP.398 var=123 __sp.399 var=124) wr_res_reg (__wr___sp.503 __sp.395)  <415>;
    (__rd___sp.400 var=127) rd_res_reg (__R_SP.394 __sp.399)  <416>;
    (__ct_7.407 var=132) const ()  <440>;
    (__ct_4.411 var=136) const ()  <448>;
    (__tmp.425 var=14) bool__lt___sint___sint (__ct_7.407 i.105)  <502>;
    (__ct_1.437 var=164) const ()  <520>;
    (__ct_3.438 var=165) const ()  <521>;
    (__wr___sp.503 var=126) __Pvoid_add___Pvoid_amod (__rd___sp.396 __ct_0s0.511)  <602>;
    (__ct_0s0.511 var=217) const ()  <639>;
    (__tmp.677 var=14) bool_nez_w32 (__tmp.425)  <982>;
    (__trgt.693 var=280) const ()  <1004>;
    () void_ba_bool_addr (__tmp.677 __trgt.693)  <1005>;
    (__either.694 var=273) undefined ()  <1006>;
    if {
        {
            () if_expr (__either.694)  <12>;
        } #4
        {
        } #5 off=15
        {
            #7 off=1
            (_cst.25 var=23) const ()  <25>;
            (__ct_2147483647.408 var=133) const ()  <442>;
            (__linex.416 var=143) __uint__mi___uint___uint (_cst.25 i.105)  <477>;
            (__ct_1k.583 var=250) const ()  <766>;
            (__nofold.584 var=251) bool__lt___uint___uint (__linex.416 __ct_1k.583)  <768>;
            (__nofold.676 var=251) bool_nez_w32 (__nofold.584)  <981>;
            (__trgt.690 var=278) const ()  <999>;
            () void_ba_bool_addr (__nofold.676 __trgt.690)  <1000>;
            (__ct_1k.691 var=250) undefined ()  <1001>;
            if {
                {
                    () if_expr (__ct_1k.691)  <769>;
                } #480
                {
                    #660 off=8
                    (__trgt.684 var=274) const ()  <989>;
                    (__trgt.686 var=275) const ()  <992>;
                    (__R_LC.707 var=105) wr_res_reg (__linex.416)  <1028>;
                    (__trgt.708 var=289) const ()  <1029>;
                    (__R_LS.709 var=107) wr_res_reg (__trgt.708)  <1030>;
                    (__trgt.710 var=290) const ()  <1031>;
                    (__R_LE.711 var=106) wr_res_reg (__trgt.710)  <1032>;
                    (__vcnt.712 var=291) undefined ()  <1034>;
                    for {
                        {
                            (__tmp.29 var=16) entry (__tmp.113 distances.95)  <29>;
                            (__tmp.30 var=15) entry (__tmp.115 i.105)  <30>;
                        } #9
                        {
                            #599 off=9
                            (__tmp.433 var=159) __uint__ad___uint___uint (__tmp.30 __ct_4.411)  <516>;
                            (__tmp.439 var=166) __uint__ad___uint___uint (__tmp.30 __ct_3.438)  <522>;
                            (__tmp.440 var=167) uint3_t_uint3_t___uint (__tmp.439)  <523>;
                            (__tmp.515 var=161) bool_nez___uint (__tmp.433)  <646>;
                            () void_ba_bool_addr (__tmp.515 __trgt.684)  <990>;
                            (__either.685 var=273) undefined ()  <991>;
                            if {
                                {
                                    () if_expr (__either.685)  <525>;
                                } #199
                                {
                                    (__tmp.442 var=163) v4int32_ext_v_v8int32___sint (__tmp.29 _cst.23)  <526>;
                                    (__tmp.443 var=168) v4int32_upd_elem_v4int32___sint_uint1_t_uint3_t (__tmp.442 __ct_2147483647.408 __ct_1.437 __tmp.440)  <527>;
                                    (__rt.444 var=154) v8int32_upd_v_v8int32___sint_v4int32 (__tmp.29 _cst.23 __tmp.443)  <528>;
                                } #200 off=11
                                {
                                    (__tmp.445 var=170) v4int32_ext_v_v8int32___sint (__tmp.29 _cst.36)  <529>;
                                    (__tmp.446 var=171) v4int32_upd_elem_v4int32___sint_uint1_t_uint3_t (__tmp.445 __ct_2147483647.408 __ct_1.437 __tmp.440)  <530>;
                                    (__rt.447 var=154) v8int32_upd_v_v8int32___sint_v4int32 (__tmp.29 _cst.36 __tmp.446)  <531>;
                                    () void_ja_addr (__trgt.686)  <993>;
                                } #201 off=10
                                {
                                    (__rt.448 var=154) merge (__rt.444 __rt.447)  <532>;
                                } #202
                            } #198
                            #194 off=12
                            (__shv___tmp.419 var=144) __uint__pl___uint___uint (__tmp.30 _cst.23)  <480>;
                        } #54
                        {
                            () for_count (__vcnt.712)  <31>;
                            (__tmp.113 var=16 __tmp.114 var=16) exit (__rt.448)  <124>;
                            (__tmp.115 var=15 __tmp.116 var=15) exit (__shv___tmp.419)  <125>;
                            () zloop_sink_absolute (__R_LC.707 __R_LS.709 __R_LE.711)  <1033>;
                        } #18
                    } #8 rng=[-1,2147483647]
                } #659
                {
                    #496 off=2
                    (__ct_0K.604 var=252) const ()  <789>;
                    (__linex.605 var=143) __uint__pl___uint___uint (__linex.416 __ct_0K.604)  <791>;
                    (__R_LC.713 var=105) wr_res_reg (__linex.605)  <1035>;
                    (__trgt.714 var=292) const ()  <1036>;
                    (__R_LS.715 var=107) wr_res_reg (__trgt.714)  <1037>;
                    (__trgt.716 var=293) const ()  <1038>;
                    (__R_LE.717 var=106) wr_res_reg (__trgt.716)  <1039>;
                    (__ct_0K.718 var=252) undefined ()  <1041>;
                    for {
                        {
                            (__tmp.585 var=16) entry (__tmp.600 distances.95)  <770>;
                            (__tmp.586 var=15) entry (__tmp.602 i.105)  <771>;
                        } #486
                        {
                            #614 off=3
                            (__tmp.587 var=159) __uint__ad___uint___uint (__tmp.586 __ct_4.411)  <772>;
                            (__tmp.588 var=166) __uint__ad___uint___uint (__tmp.586 __ct_3.438)  <773>;
                            (__tmp.589 var=167) uint3_t_uint3_t___uint (__tmp.588)  <774>;
                            (__tmp.590 var=161) bool_nez___uint (__tmp.587)  <775>;
                            (__trgt.687 var=276) const ()  <994>;
                            () void_ba_bool_addr (__tmp.590 __trgt.687)  <995>;
                            (__either.688 var=273) undefined ()  <996>;
                            if {
                                {
                                    () if_expr (__either.688)  <776>;
                                } #490
                                {
                                    (__tmp.591 var=163) v4int32_ext_v_v8int32___sint (__tmp.585 _cst.23)  <777>;
                                    (__tmp.592 var=168) v4int32_upd_elem_v4int32___sint_uint1_t_uint3_t (__tmp.591 __ct_2147483647.408 __ct_1.437 __tmp.589)  <778>;
                                    (__rt.593 var=154) v8int32_upd_v_v8int32___sint_v4int32 (__tmp.585 _cst.23 __tmp.592)  <779>;
                                } #491 off=5
                                {
                                    (__tmp.594 var=170) v4int32_ext_v_v8int32___sint (__tmp.585 _cst.36)  <780>;
                                    (__tmp.595 var=171) v4int32_upd_elem_v4int32___sint_uint1_t_uint3_t (__tmp.594 __ct_2147483647.408 __ct_1.437 __tmp.589)  <781>;
                                    (__rt.596 var=154) v8int32_upd_v_v8int32___sint_v4int32 (__tmp.585 _cst.36 __tmp.595)  <782>;
                                    (__trgt.689 var=277) const ()  <997>;
                                    () void_ja_addr (__trgt.689)  <998>;
                                } #492 off=4
                                {
                                    (__rt.597 var=154) merge (__rt.593 __rt.596)  <783>;
                                } #493
                            } #489
                            #494 off=6
                            (__shv___tmp.598 var=144) __uint__pl___uint___uint (__tmp.586 _cst.23)  <784>;
                        } #487
                        {
                            () for_count (__ct_0K.718)  <786>;
                            (__tmp.600 var=16 __tmp.601 var=16) exit (__rt.597)  <787>;
                            (__tmp.602 var=15 __tmp.603 var=15) exit (__shv___tmp.598)  <788>;
                            () zloop_sink_absolute (__R_LC.713 __R_LS.715 __R_LE.717)  <1040>;
                        } #495
                    } #485 rng=[-1,2147483647]
                    #661 off=7
                    (__trgt.692 var=279) const ()  <1002>;
                    () void_ja_addr (__trgt.692)  <1003>;
                } #482
                {
                    (__tmp.606 var=16) merge (__tmp.114 __tmp.601)  <792>;
                } #483
            } #479
            #662 off=14
            (__trgt.695 var=281) const ()  <1007>;
            () void_ja_addr (__trgt.695)  <1008>;
        } #6
        {
            (__tmp.34 var=16) merge (distances.95 __tmp.606)  <34>;
        } #20
    } #3
    #454 off=16
    (_cst.42 var=31) const ()  <42>;
    (_cst.63 var=36) const ()  <63>;
    (__tmp.107 var=29) v16int32_xset_w___sint_v8int32 (_cst.36 __tmp.34)  <118>;
    (__ct_2.412 var=137) const ()  <450>;
    (__tmp.428 var=14) bool__ge___sint___sint (_cst.36 i.105)  <508>;
    (__apl_c.466 var=175) v4int32_ext_v_v16int32___sint (__tmp.570 _cst.36)  <554>;
    (__tmp.479 var=15) __sint_ext_elem_v4int32_uint1_t_uint3_t (__apl_c.466 __ct_1.437 __ct_0.510)  <570>;
    (__ct_0.510 var=216) const ()  <637>;
    (__ct_0.534 var=241) const ()  <676>;
    (__ct_1.535 var=242) const ()  <677>;
    (__ct_0.536 var=243) const ()  <678>;
    (__ct_34717696.537 var=244) const ()  <679>;
    (__ct_65536.538 var=245) const ()  <680>;
    (__apl_cfg.539 var=239) mac_config_ctl_mac_uint1_t_uint1_t_uint1_t_uint2_t_uint2_t_uint1_t___sint___sint_uint4_t___uint___uint___uint___uint___uint___uint (__ct_1.437 __ct_0.534 __ct_0.534 __ct_1.535 __ct_1.535 __ct_0.534 _cst.36 __ct_4.411 __ct_0.536 _cst.42 _cst.36 _cst.42 _cst.36 __ct_34717696.537 __ct_65536.538)  <681>;
    (__tmp.540 var=29) v16int32_praop_sw_v16int32_mac_config (__tmp.107 __apl_cfg.539)  <682>;
    (__apl_cfg.554 var=239) mac_config_ctl_mac_uint1_t_uint1_t_uint1_t_uint2_t_uint2_t_uint1_t___sint___sint_uint4_t___uint___uint___uint___uint___uint___uint (__ct_1.437 __ct_0.534 __ct_0.534 __ct_1.535 __ct_1.535 __ct_0.534 _cst.36 __ct_2.412 __ct_0.536 _cst.42 _cst.36 _cst.42 _cst.36 __ct_34717696.537 __ct_65536.538)  <699>;
    (__tmp.555 var=29) v16int32_praop_sw_v16int32_mac_config (__tmp.540 __apl_cfg.554)  <700>;
    (__apl_cfg.569 var=239) mac_config_ctl_mac_uint1_t_uint1_t_uint1_t_uint2_t_uint2_t_uint1_t___sint___sint_uint4_t___uint___uint___uint___uint___uint___uint (__ct_1.437 __ct_0.534 __ct_0.534 __ct_1.535 __ct_1.535 __ct_0.534 _cst.36 _cst.23 __ct_0.536 _cst.42 _cst.36 _cst.42 _cst.36 __ct_34717696.537 __ct_65536.538)  <717>;
    (__tmp.570 var=29) v16int32_praop_sw_v16int32_mac_config (__tmp.555 __apl_cfg.569)  <718>;
    (__tmp.681 var=14) bool_nez_w32 (__tmp.428)  <986>;
    (__trgt.703 var=286) const ()  <1021>;
    () void_ba_bool_addr (__tmp.681 __trgt.703)  <1022>;
    (__either.704 var=273) undefined ()  <1023>;
    if {
        {
            () if_expr (__either.704)  <64>;
        } #24
        {
        } #25 off=26
        {
            #424 off=17
            (__trgt.696 var=282) const ()  <1009>;
            (__trgt.698 var=283) const ()  <1012>;
            (__trgt.699 var=284) const ()  <1014>;
            (__trgt.701 var=285) const ()  <1018>;
            (__trgt.706 var=288) const ()  <1026>;
            do {
                {
                    (__tmp.83 var=15) entry (__tmp.117 _cst.36)  <83>;
                } #29
                {
                    #237 off=18
                    (__tmp.484 var=199) __uint__ad___uint___uint (__tmp.83 __ct_7.407)  <578>;
                    (__tmp.486 var=201) bool__lt___uint___uint (__tmp.484 __ct_4.411)  <580>;
                    (__tmp.678 var=201) bool_nez_w32 (__tmp.486)  <983>;
                    () void_ba_bool_addr (__tmp.678 __trgt.696)  <1010>;
                    (__either.697 var=273) undefined ()  <1011>;
                    if {
                        {
                            () if_expr (__either.697)  <586>;
                        } #239
                        {
                            (__apl_c.682 var=197) v4int32_ext_v_v8int32___sint (__tmp.34 _cst.36)  <987>;
                        } #652 off=20
                        {
                            (__apl_c.683 var=197) v4int32_ext_v_v8int32___sint (__tmp.34 _cst.23)  <988>;
                            () void_ja_addr (__trgt.698)  <1013>;
                        } #649 off=19
                        {
                            (__apl_c.496 var=197) merge (__apl_c.682 __apl_c.683)  <592>;
                        } #248
                    } #238
                    #234 off=21
                    (__tmp.72 var=14) bool__eq___uint___uint (__tmp.499 __tmp.479)  <72>;
                    (__tmp.497 var=208) __uint__ad___uint___uint (__tmp.83 __ct_3.438)  <593>;
                    (__tmp.498 var=209) uint3_t_uint3_t___uint (__tmp.497)  <594>;
                    (__tmp.499 var=15) __sint_ext_elem_v4int32_uint1_t_uint3_t (__apl_c.496 __ct_1.437 __tmp.498)  <595>;
                    (__tmp.679 var=14) bool_nez_w32 (__tmp.72)  <984>;
                    () void_ba_bool_addr (__tmp.679 __trgt.699)  <1015>;
                    (__either.700 var=273) undefined ()  <1016>;
                    if {
                        {
                            () if_expr (__either.700)  <74>;
                            () chess_frequent_else ()  <75>;
                            () chess_rear_then ()  <1017>;
                        } #34
                        {
                            () sync_sink (__tmp.83) sid=5  <76>;
                            () sink (__sp.399)  <422>;
                            () void_ja_addr (__trgt.706)  <1027>;
                        } #72 off=23 nxt=-3 tgt=48
                        {
                        } #37 off=22
                        {
                        } #38
                    } #33
                    #40 off=24
                    (__tmp.79 var=14) bool__ne___uint___uint (__shv___tmp.420 i.105)  <79>;
                    (__shv___tmp.420 var=145) __uint__pl___uint___uint (__tmp.83 _cst.23)  <481>;
                    (__tmp.680 var=14) bool_nez_w32 (__tmp.79)  <985>;
                    () void_ba_bool_addr (__tmp.680 __trgt.701)  <1019>;
                    (__either.702 var=273) undefined ()  <1020>;
                } #30
                {
                    () while_expr (__either.702)  <84>;
                    (__tmp.117 var=15 __tmp.118 var=15) exit (__shv___tmp.420)  <126>;
                } #46
            } #28
            #663 off=25
            (__trgt.705 var=287) const ()  <1024>;
            () void_ja_addr (__trgt.705)  <1025>;
        } #423
        {
        } #47
    } #23
    sync {
        (__tmp.87 var=15) sync_link (_cst.63) sid=5  <87>;
    } #48 off=28
    #70 off=29 nxt=-2
    (__rt.93 var=42 stl=R off=0) assign (__tmp.87)  <102>;
    () out (__rt.93)  <103>;
    () void_ret_addr (__la.92)  <104>;
    (__R_SP.403 var=123 __sp.404 var=124) wr_res_reg (__wr___sp.507 __sp.399)  <420>;
    () sink (__sp.404)  <421>;
    (__wr___sp.507 var=129) __Pvoid_add___Pvoid_amod (__rd___sp.400 __ct_0S0.512)  <609>;
    (__ct_0S0.512 var=218) const ()  <641>;
} #1
0 : '/home/users/eleonora.cabai/Documents/K-Means-AIE/aie/src/kmeans_kernel.cpp';
1 : '/home/xilinx/software/Vitis/2022.2/aietools/include/aie_api/detail/aie1/../vector.hpp';
2 : '/home/xilinx/software/Vitis/2022.2/aietools/include/aie_api/detail/aie1/max_min_reduce.hpp';
3 : '/home/xilinx/software/Vitis/2022.2/aietools/include/aie_api/detail/aie1/vector.hpp';
4 : 'assignment_function';
----------
0 : (4,0:0,0);
1 : (0,142:0,2);
7 : (0,145:4,1);
40 : (0,153:35,7);
54 : (3,691:23,3);
70 : (0,0:0,10);
72 : (0,0:0,10);
182 : (0,142:0,2);
194 : (0,145:46,0,5);
198 : (3,691:23,3,4);
199 : (3,691:23,3,4);
200 : (3,691:23,3,4);
201 : (3,691:23,3,4);
202 : (3,691:23,3,4);
234 : (1,247:33,8,13);
237 : (3,744:23,6,12);
238 : (3,744:23,6,12);
239 : (3,744:23,6,12);
248 : (3,744:23,6,12);
454 : (0,153:18,7,11);
487 : (3,691:23,3);
489 : (3,691:23,3,4);
490 : (3,691:23,3,4);
491 : (3,691:23,3,4);
492 : (3,691:23,3,4);
493 : (3,691:23,3,4);
494 : (0,145:46,0,5);
599 : (3,691:23,3,4);
614 : (3,691:23,3,4);
----------
12 : (0,145:4,1,3);
23 : (3,691:23,0,4);
25 : (0,145:46,0,5);
31 : (0,145:4,1,5);
36 : (3,567:27,0,6);
42 : (2,144:48,0,7);
63 : (0,153:18,0,11);
64 : (0,153:4,7,11);
72 : (1,247:33,8,13);
74 : (0,155:12,9,14);
75 : (0,155:12,9,14);
79 : (0,153:18,7,14);
84 : (0,153:4,7,14);
87 : (0,153:4,7,14);
103 : (0,163:0,11,14);
104 : (0,163:0,11,14);
118 : (3,567:27,4,6);
415 : (0,142:0,0);
420 : (0,163:0,11,14);
440 : (0,142:0,0,2);
442 : (3,691:23,0,4);
448 : (2,144:48,0,7);
450 : (2,144:48,0,8);
480 : (0,145:46,0,5);
481 : (0,153:35,0,14);
502 : (0,145:29,1,3);
508 : (0,153:18,7,11);
516 : (3,691:23,3,4);
520 : (3,691:23,0,4);
521 : (3,691:23,0,4);
522 : (3,691:23,3,4);
523 : (3,691:23,3,4);
525 : (3,691:23,3,4);
526 : (3,691:23,3,4);
527 : (3,691:23,3,4);
528 : (3,691:23,3,4);
529 : (3,691:23,3,4);
530 : (3,691:23,3,4);
531 : (3,691:23,3,4);
532 : (3,691:23,3,4);
554 : (3,744:23,6,10);
570 : (3,744:23,6,10);
578 : (3,744:23,6,12);
580 : (3,744:23,6,12);
586 : (3,744:23,6,12);
592 : (3,744:23,6,12);
593 : (3,744:23,6,12);
594 : (3,744:23,6,12);
595 : (3,744:23,6,12);
602 : (0,142:0,0);
609 : (0,163:0,0,14);
637 : (3,744:23,0,10);
639 : (0,142:0,0);
641 : (0,163:0,0,14);
646 : (3,691:23,3,4);
676 : (2,144:48,0,7);
677 : (2,144:48,0,7);
678 : (2,144:48,0,7);
679 : (2,144:48,0,7);
680 : (2,144:48,0,7);
681 : (2,144:48,5,7);
682 : (2,144:48,5,7);
699 : (2,144:48,5,8);
700 : (2,144:48,5,8);
717 : (2,144:48,5,9);
718 : (2,144:48,5,9);
772 : (3,691:23,3,4);
773 : (3,691:23,3,4);
774 : (3,691:23,3,4);
775 : (3,691:23,3,4);
776 : (3,691:23,3,4);
777 : (3,691:23,3,4);
778 : (3,691:23,3,4);
779 : (3,691:23,3,4);
780 : (3,691:23,3,4);
781 : (3,691:23,3,4);
782 : (3,691:23,3,4);
783 : (3,691:23,3,4);
784 : (0,145:46,0,5);
786 : (0,145:4,1,5);
982 : (0,145:4,1,3);
983 : (3,744:23,6,12);
984 : (0,155:12,9,14);
985 : (0,153:4,7,14);
986 : (0,153:4,7,11);
987 : (3,744:23,6,12);
988 : (3,744:23,6,12);
990 : (3,691:23,3,4);
995 : (3,691:23,3,4);
1005 : (0,145:4,1,3);
1010 : (3,744:23,6,12);
1015 : (0,155:12,9,14);
1019 : (0,153:4,7,14);
1022 : (0,153:4,7,11);
1028 : (0,145:4,1,5);
1030 : (0,145:4,1,5);
1032 : (0,145:4,1,5);
1035 : (0,145:4,1,5);
1037 : (0,145:4,1,5);
1039 : (0,145:4,1,5);
==========ranges_locs
0: ' ';
1: ' l53v0 l52v0 l51v0 l50v0 l49v0 l48v0 l47v0 l46v0 l45v0 l44v0 l43v0 l42v0 l41v0 l40v0 l39v0 l38v0 l37v0 l36v0 l35v0 l34v0 l33v0 l32v0 l31v0 l30v0 l29v0 l28v0 l27v0 l26v0 l25v0 l24v0 l23v0 l22v0 l21v0 l20v0 l19v0 l18v0 l17v0 l16v0 l15v0 l14v0 l13v0 l12v0 l11v0 l10v0 l9v0 l8v0 l7v0 l6v0 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 ';
2: ' l0v0 ';
3: ' l4v0 l3v0 l2v0 l1v0 l0v0 ';
4: ' l9v0 l8v1 l7v0 l6v0 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 r0 r1 ';
5: ' l9v0 l8v1 l7v0 l6v0 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 ';
6: ' l19v0 l18v1 l17v1 l16v0 l15v0 l14v0 l13v0 l12v1 l11v0 l10v0 l9v0 l8v1 l7v0 l6v0 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 r2 r3 r4 r5 ';
7: ' l27v0 l26v0 l25v0 l24v0 l23v0 l22v0 l21v0 l20v0 l19v0 l18v1 l17v1 l16v0 l15v0 l14v0 l13v0 l12v1 l11v0 l10v0 l9v0 l8v1 l7v0 l6v0 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 r2 r3 r4 r6 ';
8: ' l35v0 l34v0 l33v0 l32v0 l31v0 l30v0 l29v0 l28v0 l27v0 l26v0 l25v0 l24v0 l23v0 l22v0 l21v0 l20v0 l19v0 l18v1 l17v1 l16v0 l15v0 l14v0 l13v0 l12v1 l11v0 l10v0 l9v0 l8v1 l7v0 l6v0 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 r2 r3 r4 r7 ';
9: ' l43v0 l42v0 l41v0 l40v0 l39v0 l38v0 l37v0 l36v0 l35v0 l34v0 l33v0 l32v0 l31v0 l30v0 l29v0 l28v0 l27v0 l26v0 l25v0 l24v0 l23v0 l22v0 l21v0 l20v0 l19v0 l18v1 l17v1 l16v0 l15v0 l14v0 l13v0 l12v1 l11v0 l10v0 l9v0 l8v1 l7v0 l6v0 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 r2 r3 r4 r8 ';
10: ' l47v1 l46v0 l45v0 l44v0 l43v0 l42v0 l41v0 l40v0 l39v0 l38v0 l37v0 l36v0 l35v0 l34v0 l33v0 l32v0 l31v0 l30v0 l29v0 l28v0 l27v0 l26v0 l25v0 l24v0 l23v0 l22v0 l21v0 l20v0 l19v0 l18v1 l17v1 l16v0 l15v0 l14v0 l13v0 l12v1 l11v0 l10v0 l9v0 l8v1 l7v0 l6v0 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 r2 r3 r4 r9 r10 r11 ';
11: ' l47v1 l46v0 l45v0 l44v0 l43v0 l42v0 l41v0 l40v0 l39v0 l38v0 l37v0 l36v0 l35v0 l34v0 l33v0 l32v0 l31v0 l30v0 l29v0 l28v0 l27v0 l26v0 l25v0 l24v0 l23v0 l22v0 l21v0 l20v0 l19v0 l18v1 l17v1 l16v0 l15v0 l14v0 l13v0 l12v1 l11v0 l10v0 l9v0 l8v1 l7v0 l6v0 l5v0 l4v1 l3v0 l2v0 l1v0 l0v0 ';
12: ' l53v0 l52v0 l51v0 l50v0 l49v0 l48v0 l47v1 l46v0 l45v0 l44v0 l43v0 l42v0 l41v0 l40v0 l39v0 l38v0 l37v0 l36v0 l35v0 l34v0 l33v0 l32v0 l31v0 l30v0 l29v0 l28v0 l27v0 l26v0 l25v0 l24v0 l23v0 l22v0 l21v0 l20v0 l19v0 l18v1 l17v1 l16v0 l15v0 l14v0 l13v0 l12v1 l11v0 l10v0 l9v0 l8v1 l7v0 l6v0 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 r12 r13 r14 r15 ';
13: ' l53v0 l52v0 l51v0 l50v0 l49v0 l48v0 l47v1 l46v0 l45v0 l44v0 l43v0 l42v0 l41v0 l40v0 l39v0 l38v0 l37v0 l36v0 l35v0 l34v0 l33v0 l32v0 l31v0 l30v0 l29v0 l28v0 l27v0 l26v0 l25v0 l24v0 l23v0 l22v0 l21v0 l20v0 l19v0 l18v1 l17v1 l16v0 l15v0 l14v0 l13v0 l12v1 l11v0 l10v0 l9v0 l8v1 l7v0 l6v0 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 r12 ';
14: ' l53v0 l52v0 l51v0 l50v0 l49v0 l48v0 l47v1 l46v0 l45v0 l44v0 l43v0 l42v0 l41v0 l40v0 l39v0 l38v0 l37v0 l36v0 l35v0 l34v0 l33v0 l32v0 l31v0 l30v0 l29v0 l28v0 l27v0 l26v0 l25v0 l24v0 l23v0 l22v0 l21v0 l20v0 l19v0 l18v1 l17v1 l16v0 l15v0 l14v0 l13v0 l12v1 l11v0 l10v0 l9v0 l8v1 l7v0 l6v0 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 ';

