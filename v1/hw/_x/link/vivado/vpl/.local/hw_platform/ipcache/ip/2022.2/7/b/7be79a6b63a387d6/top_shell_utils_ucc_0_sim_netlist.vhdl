-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- --------------------------------------------------------------------------------
-- Tool Version: Vivado v.2022.2 (lin64) Build 3671981 Fri Oct 14 04:59:54 MDT 2022
-- Date        : Mon Dec  5 00:21:24 2022
-- Host        : xsjdcslab02.xilinx.com running 64-bit CentOS Linux release 8.1.1911 (Core)
-- Command     : write_vhdl -force -mode funcsim -rename_top decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix -prefix
--               decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ top_shell_utils_ucc_0_sim_netlist.vhdl
-- Design      : top_shell_utils_ucc_0
-- Purpose     : This VHDL netlist is a functional simulation representation of the design and should not be modified or
--               synthesized. This netlist cannot be used for SDF annotated simulation.
-- Device      : xcvc1902-vsvd1760-2MP-e-S
-- --------------------------------------------------------------------------------
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_shell_utils_ucc_v1_0_0_throttling_avg is
  port (
    D : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \syncstages_ff_reg[2][16]\ : out STD_LOGIC;
    \syncstages_ff_reg[1][81]\ : out STD_LOGIC;
    \syncstages_ff_reg[2][18]\ : out STD_LOGIC;
    \syncstages_ff_reg[1][83]\ : out STD_LOGIC;
    \syncstages_ff_reg[2][20]\ : out STD_LOGIC;
    \syncstages_ff_reg[2][23]\ : out STD_LOGIC;
    \syncstages_ff_reg[2][24]\ : out STD_LOGIC;
    \syncstages_ff_reg[2][25]\ : out STD_LOGIC;
    \syncstages_ff_reg[2][26]\ : out STD_LOGIC;
    \syncstages_ff_reg[2][27]\ : out STD_LOGIC;
    \syncstages_ff_reg[2][28]\ : out STD_LOGIC;
    \syncstages_ff_reg[2][29]\ : out STD_LOGIC;
    SS : out STD_LOGIC_VECTOR ( 0 to 0 );
    aclk_ctrl : in STD_LOGIC;
    Rate_Upd_Tog_d1_reg_0 : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[21]\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[21]_0\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[21]_1\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[21]_2\ : in STD_LOGIC;
    dest_out : in STD_LOGIC_VECTOR ( 4 downto 0 );
    \s_axi_ctrl_mgmt_rdata_i_reg[22]\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[22]_0\ : in STD_LOGIC_VECTOR ( 8 downto 0 );
    \s_axi_ctrl_mgmt_rdata_i_reg[22]_1\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[16]\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[16]_0\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[17]\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[29]\ : in STD_LOGIC_VECTOR ( 13 downto 0 );
    \s_axi_ctrl_mgmt_rdata_i_reg[17]_0\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[17]_1\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[17]_2\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[18]\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[18]_0\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[18]_1\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[19]\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[19]_0\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[19]_1\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[20]\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[20]_0\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[20]_1\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[20]_2\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[22]_2\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[22]_3\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[23]\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[23]_0\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[23]_1\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[23]_2\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[24]\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[24]_0\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[25]\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[25]_0\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[25]_1\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[25]_2\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[26]\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[26]_0\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[26]_1\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[26]_2\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[27]\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[27]_0\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[27]_1\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[27]_2\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[28]\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[28]_0\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[28]_1\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[28]_2\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[29]_0\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[29]_1\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[29]_2\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[29]_3\ : in STD_LOGIC;
    s_axi_ctrl_mgmt_araddr : in STD_LOGIC_VECTOR ( 5 downto 0 );
    \s_axi_ctrl_mgmt_rdata_i_reg[20]_3\ : in STD_LOGIC;
    p_6_in : in STD_LOGIC_VECTOR ( 9 downto 0 );
    \s_axi_ctrl_mgmt_rdata_i[21]_i_5_0\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \s_axi_ctrl_mgmt_rdata_i_reg[16]_1\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[18]_2\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i[22]_i_5_0\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[17]_3\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[17]_4\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[17]_5\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i[16]_i_3_0\ : in STD_LOGIC;
    aresetn_ctrl : in STD_LOGIC
  );
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_shell_utils_ucc_v1_0_0_throttling_avg;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_shell_utils_ucc_v1_0_0_throttling_avg is
  signal \Avg_reg[0]_i_1_n_0\ : STD_LOGIC;
  signal \Avg_reg[0]_i_1_n_2\ : STD_LOGIC;
  signal \Avg_reg[0]_i_1_n_3\ : STD_LOGIC;
  signal \Avg_reg[10]_i_1_n_0\ : STD_LOGIC;
  signal \Avg_reg[10]_i_1_n_2\ : STD_LOGIC;
  signal \Avg_reg[10]_i_1_n_3\ : STD_LOGIC;
  signal \Avg_reg[11]_i_1_n_0\ : STD_LOGIC;
  signal \Avg_reg[11]_i_1_n_2\ : STD_LOGIC;
  signal \Avg_reg[11]_i_1_n_3\ : STD_LOGIC;
  signal \Avg_reg[12]_i_1_n_0\ : STD_LOGIC;
  signal \Avg_reg[12]_i_1_n_2\ : STD_LOGIC;
  signal \Avg_reg[12]_i_1_n_3\ : STD_LOGIC;
  signal \Avg_reg[12]_i_2_n_0\ : STD_LOGIC;
  signal \Avg_reg[12]_i_2_n_1\ : STD_LOGIC;
  signal \Avg_reg[12]_i_2_n_2\ : STD_LOGIC;
  signal \Avg_reg[13]_i_1_n_0\ : STD_LOGIC;
  signal \Avg_reg[13]_i_1_n_2\ : STD_LOGIC;
  signal \Avg_reg[13]_i_1_n_3\ : STD_LOGIC;
  signal \Avg_reg[1]_i_1_n_0\ : STD_LOGIC;
  signal \Avg_reg[1]_i_1_n_2\ : STD_LOGIC;
  signal \Avg_reg[1]_i_1_n_3\ : STD_LOGIC;
  signal \Avg_reg[2]_i_1_n_0\ : STD_LOGIC;
  signal \Avg_reg[2]_i_1_n_2\ : STD_LOGIC;
  signal \Avg_reg[2]_i_1_n_3\ : STD_LOGIC;
  signal \Avg_reg[3]_i_1_n_0\ : STD_LOGIC;
  signal \Avg_reg[3]_i_1_n_2\ : STD_LOGIC;
  signal \Avg_reg[3]_i_1_n_3\ : STD_LOGIC;
  signal \Avg_reg[4]_i_1_n_0\ : STD_LOGIC;
  signal \Avg_reg[4]_i_1_n_2\ : STD_LOGIC;
  signal \Avg_reg[4]_i_1_n_3\ : STD_LOGIC;
  signal \Avg_reg[5]_i_1_n_0\ : STD_LOGIC;
  signal \Avg_reg[5]_i_1_n_2\ : STD_LOGIC;
  signal \Avg_reg[5]_i_1_n_3\ : STD_LOGIC;
  signal \Avg_reg[6]_i_1_n_0\ : STD_LOGIC;
  signal \Avg_reg[6]_i_1_n_2\ : STD_LOGIC;
  signal \Avg_reg[6]_i_1_n_3\ : STD_LOGIC;
  signal \Avg_reg[7]_i_1_n_0\ : STD_LOGIC;
  signal \Avg_reg[7]_i_1_n_2\ : STD_LOGIC;
  signal \Avg_reg[7]_i_1_n_3\ : STD_LOGIC;
  signal \Avg_reg[8]_i_1_n_0\ : STD_LOGIC;
  signal \Avg_reg[8]_i_1_n_2\ : STD_LOGIC;
  signal \Avg_reg[8]_i_1_n_3\ : STD_LOGIC;
  signal \Avg_reg[8]_i_2_n_0\ : STD_LOGIC;
  signal \Avg_reg[8]_i_2_n_1\ : STD_LOGIC;
  signal \Avg_reg[8]_i_2_n_2\ : STD_LOGIC;
  signal \Avg_reg[8]_i_2_n_3\ : STD_LOGIC;
  signal \Avg_reg[9]_i_1_n_0\ : STD_LOGIC;
  signal \Avg_reg[9]_i_1_n_2\ : STD_LOGIC;
  signal \Avg_reg[9]_i_1_n_3\ : STD_LOGIC;
  signal \Pipe[0][Valid]_i_1_n_0\ : STD_LOGIC;
  signal \Pipe[1][New_Sample][1]_i_1_n_0\ : STD_LOGIC;
  signal \Pipe[1][New_Sample][2]_i_1_n_0\ : STD_LOGIC;
  signal \Pipe[1][New_Sample][3]_i_1_n_0\ : STD_LOGIC;
  signal \Pipe[1][New_Sample][4]_i_1_n_0\ : STD_LOGIC;
  signal \Pipe[1][New_Sample][5]_i_1_n_0\ : STD_LOGIC;
  signal \Pipe[1][New_Sample][6]_i_1_n_0\ : STD_LOGIC;
  signal \Pipe[1][New_Sample][7]_i_1_n_0\ : STD_LOGIC;
  signal \Pipe[1][New_Sample][7]_i_2_n_0\ : STD_LOGIC;
  signal \Pipe_reg[0][Flush]__0\ : STD_LOGIC;
  signal \Pipe_reg[0][New_Sample]\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \Pipe_reg[0][Valid]__0\ : STD_LOGIC;
  signal \Pipe_reg[1][Flush_n_0_]\ : STD_LOGIC;
  signal \Pipe_reg[1][New_Sample]\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \Pipe_reg[1][Valid_n_0_]\ : STD_LOGIC;
  signal \Pipe_reg[2][Avg_Calc]\ : STD_LOGIC_VECTOR ( 13 downto 0 );
  signal \Pipe_reg[2][Exprd_Sample]\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \Pipe_reg[2][Flush]__0\ : STD_LOGIC;
  signal \Pipe_reg[2][New_Sample]\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \Pipe_reg[2][Valid]__0\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc]\ : STD_LOGIC_VECTOR ( 13 downto 0 );
  signal \Pipe_reg[3][Avg_Calc][0]_i_1_n_0\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][0]_i_1_n_1\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][0]_i_1_n_2\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][0]_i_1_n_3\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][10]_i_1_n_0\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][10]_i_1_n_1\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][10]_i_1_n_2\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][10]_i_1_n_3\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][11]_i_1_n_0\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][11]_i_1_n_1\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][11]_i_1_n_2\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][11]_i_1_n_3\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][12]_i_1_n_0\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][12]_i_1_n_1\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][12]_i_1_n_2\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][12]_i_1_n_3\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][12]_i_2_n_0\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][12]_i_2_n_1\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][12]_i_2_n_2\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][13]_i_1_n_0\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][13]_i_1_n_1\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][13]_i_1_n_2\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][13]_i_1_n_3\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][1]_i_1_n_0\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][1]_i_1_n_1\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][1]_i_1_n_2\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][1]_i_1_n_3\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][2]_i_1_n_0\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][2]_i_1_n_1\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][2]_i_1_n_2\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][2]_i_1_n_3\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][3]_i_1_n_0\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][3]_i_1_n_1\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][3]_i_1_n_2\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][3]_i_1_n_3\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][4]_i_1_n_0\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][4]_i_1_n_1\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][4]_i_1_n_2\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][4]_i_1_n_3\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][5]_i_1_n_0\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][5]_i_1_n_1\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][5]_i_1_n_2\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][5]_i_1_n_3\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][6]_i_1_n_0\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][6]_i_1_n_1\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][6]_i_1_n_2\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][6]_i_1_n_3\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][7]_i_1_n_0\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][7]_i_1_n_1\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][7]_i_1_n_2\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][7]_i_1_n_3\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][8]_i_1_n_0\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][8]_i_1_n_1\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][8]_i_1_n_2\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][8]_i_1_n_3\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][8]_i_2_n_0\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][8]_i_2_n_1\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][8]_i_2_n_2\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][8]_i_2_n_3\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][9]_i_1_n_0\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][9]_i_1_n_1\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][9]_i_1_n_2\ : STD_LOGIC;
  signal \Pipe_reg[3][Avg_Calc][9]_i_1_n_3\ : STD_LOGIC;
  signal \Pipe_reg[3][Flush]__0\ : STD_LOGIC;
  signal \Pipe_reg[3][New_Sample]\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \Pipe_reg[3][Valid]__0\ : STD_LOGIC;
  signal Rate_Upd_Tog_d1 : STD_LOGIC;
  signal \Rst_Count_reg_n_0_[0]\ : STD_LOGIC;
  signal \Rst_Count_reg_n_0_[1]\ : STD_LOGIC;
  signal \Rst_Count_reg_n_0_[2]\ : STD_LOGIC;
  signal \Rst_Count_reg_n_0_[3]\ : STD_LOGIC;
  signal \Rst_Count_reg_n_0_[4]\ : STD_LOGIC;
  signal \Rst_Count_reg_n_0_[5]\ : STD_LOGIC;
  signal \^ss\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \Sample_Pipe_reg[31][0]_srl32_n_1\ : STD_LOGIC;
  signal \Sample_Pipe_reg[31][1]_srl32_n_1\ : STD_LOGIC;
  signal \Sample_Pipe_reg[31][2]_srl32_n_1\ : STD_LOGIC;
  signal \Sample_Pipe_reg[31][3]_srl32_n_1\ : STD_LOGIC;
  signal \Sample_Pipe_reg[31][4]_srl32_n_1\ : STD_LOGIC;
  signal \Sample_Pipe_reg[31][5]_srl32_n_1\ : STD_LOGIC;
  signal \Sample_Pipe_reg[31][6]_srl32_n_1\ : STD_LOGIC;
  signal \Sample_Pipe_reg[31][7]_srl32_i_1_n_0\ : STD_LOGIC;
  signal \Sample_Pipe_reg[31][7]_srl32_n_1\ : STD_LOGIC;
  signal \Sample_Pipe_reg[49]\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal data2 : STD_LOGIC_VECTOR ( 29 downto 16 );
  signal minusOp : STD_LOGIC_VECTOR ( 6 downto 0 );
  signal p_0_in : STD_LOGIC;
  signal plusOp : STD_LOGIC_VECTOR ( 13 downto 0 );
  signal \s_axi_ctrl_mgmt_rdata_i[16]_i_3_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[16]_i_6_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[17]_i_2_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[18]_i_3_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[19]_i_2_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[20]_i_3_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[21]_i_5_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[21]_i_6_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[22]_i_10_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[22]_i_5_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[22]_i_8_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[23]_i_4_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[24]_i_4_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[25]_i_4_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[26]_i_4_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[27]_i_4_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[28]_i_4_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[29]_i_4_n_0\ : STD_LOGIC;
  signal \NLW_Avg_reg[12]_i_2_COUTH_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_Avg_reg[12]_i_2_CYG_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_Avg_reg[12]_i_2_CYH_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_Avg_reg[12]_i_2_GEG_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_Avg_reg[12]_i_2_GEH_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_Avg_reg[12]_i_2_PROPG_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_Avg_reg[12]_i_2_PROPH_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_Pipe_reg[3][Avg_Calc][12]_i_2_COUTH_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_Pipe_reg[3][Avg_Calc][12]_i_2_CYG_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_Pipe_reg[3][Avg_Calc][12]_i_2_CYH_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_Pipe_reg[3][Avg_Calc][12]_i_2_GEG_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_Pipe_reg[3][Avg_Calc][12]_i_2_GEH_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_Pipe_reg[3][Avg_Calc][12]_i_2_PROPG_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_Pipe_reg[3][Avg_Calc][12]_i_2_PROPH_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_Sample_Pipe_reg[31][0]_srl32_Q_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_Sample_Pipe_reg[31][1]_srl32_Q_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_Sample_Pipe_reg[31][2]_srl32_Q_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_Sample_Pipe_reg[31][3]_srl32_Q_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_Sample_Pipe_reg[31][4]_srl32_Q_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_Sample_Pipe_reg[31][5]_srl32_Q_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_Sample_Pipe_reg[31][6]_srl32_Q_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_Sample_Pipe_reg[31][7]_srl32_Q_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_Sample_Pipe_reg[49][0]_srl18_Q31_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_Sample_Pipe_reg[49][1]_srl18_Q31_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_Sample_Pipe_reg[49][2]_srl18_Q31_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_Sample_Pipe_reg[49][3]_srl18_Q31_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_Sample_Pipe_reg[49][4]_srl18_Q31_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_Sample_Pipe_reg[49][5]_srl18_Q31_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_Sample_Pipe_reg[49][6]_srl18_Q31_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_Sample_Pipe_reg[49][7]_srl18_Q31_UNCONNECTED\ : STD_LOGIC;
  attribute KEEP : string;
  attribute KEEP of \Avg_reg[12]_i_2\ : label is "yes";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Pipe[1][New_Sample][1]_i_1\ : label is "soft_lutpair6";
  attribute SOFT_HLUTNM of \Pipe[1][New_Sample][2]_i_1\ : label is "soft_lutpair6";
  attribute SOFT_HLUTNM of \Pipe[1][New_Sample][3]_i_1\ : label is "soft_lutpair3";
  attribute SOFT_HLUTNM of \Pipe[1][New_Sample][4]_i_1\ : label is "soft_lutpair3";
  attribute SOFT_HLUTNM of \Pipe[1][New_Sample][6]_i_1\ : label is "soft_lutpair5";
  attribute SOFT_HLUTNM of \Pipe[1][New_Sample][7]_i_1\ : label is "soft_lutpair5";
  attribute KEEP of \Pipe_reg[3][Avg_Calc][12]_i_2\ : label is "yes";
  attribute SOFT_HLUTNM of \Rst_Count[1]_i_1\ : label is "soft_lutpair7";
  attribute SOFT_HLUTNM of \Rst_Count[2]_i_1\ : label is "soft_lutpair7";
  attribute SOFT_HLUTNM of \Rst_Count[3]_i_1\ : label is "soft_lutpair4";
  attribute SOFT_HLUTNM of \Rst_Count[4]_i_1\ : label is "soft_lutpair4";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Sample_Pipe_reg[31][0]_srl32\ : label is "inst/\clock_throttling_avg/Sample_Pipe_reg[31] ";
  attribute srl_name : string;
  attribute srl_name of \Sample_Pipe_reg[31][0]_srl32\ : label is "inst/\clock_throttling_avg/Sample_Pipe_reg[31][0]_srl32 ";
  attribute srl_bus_name of \Sample_Pipe_reg[31][1]_srl32\ : label is "inst/\clock_throttling_avg/Sample_Pipe_reg[31] ";
  attribute srl_name of \Sample_Pipe_reg[31][1]_srl32\ : label is "inst/\clock_throttling_avg/Sample_Pipe_reg[31][1]_srl32 ";
  attribute srl_bus_name of \Sample_Pipe_reg[31][2]_srl32\ : label is "inst/\clock_throttling_avg/Sample_Pipe_reg[31] ";
  attribute srl_name of \Sample_Pipe_reg[31][2]_srl32\ : label is "inst/\clock_throttling_avg/Sample_Pipe_reg[31][2]_srl32 ";
  attribute srl_bus_name of \Sample_Pipe_reg[31][3]_srl32\ : label is "inst/\clock_throttling_avg/Sample_Pipe_reg[31] ";
  attribute srl_name of \Sample_Pipe_reg[31][3]_srl32\ : label is "inst/\clock_throttling_avg/Sample_Pipe_reg[31][3]_srl32 ";
  attribute srl_bus_name of \Sample_Pipe_reg[31][4]_srl32\ : label is "inst/\clock_throttling_avg/Sample_Pipe_reg[31] ";
  attribute srl_name of \Sample_Pipe_reg[31][4]_srl32\ : label is "inst/\clock_throttling_avg/Sample_Pipe_reg[31][4]_srl32 ";
  attribute srl_bus_name of \Sample_Pipe_reg[31][5]_srl32\ : label is "inst/\clock_throttling_avg/Sample_Pipe_reg[31] ";
  attribute srl_name of \Sample_Pipe_reg[31][5]_srl32\ : label is "inst/\clock_throttling_avg/Sample_Pipe_reg[31][5]_srl32 ";
  attribute srl_bus_name of \Sample_Pipe_reg[31][6]_srl32\ : label is "inst/\clock_throttling_avg/Sample_Pipe_reg[31] ";
  attribute srl_name of \Sample_Pipe_reg[31][6]_srl32\ : label is "inst/\clock_throttling_avg/Sample_Pipe_reg[31][6]_srl32 ";
  attribute srl_bus_name of \Sample_Pipe_reg[31][7]_srl32\ : label is "inst/\clock_throttling_avg/Sample_Pipe_reg[31] ";
  attribute srl_name of \Sample_Pipe_reg[31][7]_srl32\ : label is "inst/\clock_throttling_avg/Sample_Pipe_reg[31][7]_srl32 ";
  attribute srl_bus_name of \Sample_Pipe_reg[49][0]_srl18\ : label is "inst/\clock_throttling_avg/Sample_Pipe_reg[49] ";
  attribute srl_name of \Sample_Pipe_reg[49][0]_srl18\ : label is "inst/\clock_throttling_avg/Sample_Pipe_reg[49][0]_srl18 ";
  attribute srl_bus_name of \Sample_Pipe_reg[49][1]_srl18\ : label is "inst/\clock_throttling_avg/Sample_Pipe_reg[49] ";
  attribute srl_name of \Sample_Pipe_reg[49][1]_srl18\ : label is "inst/\clock_throttling_avg/Sample_Pipe_reg[49][1]_srl18 ";
  attribute srl_bus_name of \Sample_Pipe_reg[49][2]_srl18\ : label is "inst/\clock_throttling_avg/Sample_Pipe_reg[49] ";
  attribute srl_name of \Sample_Pipe_reg[49][2]_srl18\ : label is "inst/\clock_throttling_avg/Sample_Pipe_reg[49][2]_srl18 ";
  attribute srl_bus_name of \Sample_Pipe_reg[49][3]_srl18\ : label is "inst/\clock_throttling_avg/Sample_Pipe_reg[49] ";
  attribute srl_name of \Sample_Pipe_reg[49][3]_srl18\ : label is "inst/\clock_throttling_avg/Sample_Pipe_reg[49][3]_srl18 ";
  attribute srl_bus_name of \Sample_Pipe_reg[49][4]_srl18\ : label is "inst/\clock_throttling_avg/Sample_Pipe_reg[49] ";
  attribute srl_name of \Sample_Pipe_reg[49][4]_srl18\ : label is "inst/\clock_throttling_avg/Sample_Pipe_reg[49][4]_srl18 ";
  attribute srl_bus_name of \Sample_Pipe_reg[49][5]_srl18\ : label is "inst/\clock_throttling_avg/Sample_Pipe_reg[49] ";
  attribute srl_name of \Sample_Pipe_reg[49][5]_srl18\ : label is "inst/\clock_throttling_avg/Sample_Pipe_reg[49][5]_srl18 ";
  attribute srl_bus_name of \Sample_Pipe_reg[49][6]_srl18\ : label is "inst/\clock_throttling_avg/Sample_Pipe_reg[49] ";
  attribute srl_name of \Sample_Pipe_reg[49][6]_srl18\ : label is "inst/\clock_throttling_avg/Sample_Pipe_reg[49][6]_srl18 ";
  attribute srl_bus_name of \Sample_Pipe_reg[49][7]_srl18\ : label is "inst/\clock_throttling_avg/Sample_Pipe_reg[49] ";
  attribute srl_name of \Sample_Pipe_reg[49][7]_srl18\ : label is "inst/\clock_throttling_avg/Sample_Pipe_reg[49][7]_srl18 ";
begin
  SS(0) <= \^ss\(0);
\Avg_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \Pipe_reg[3][Valid]__0\,
      D => plusOp(0),
      Q => data2(16),
      R => \Pipe_reg[3][Flush]__0\
    );
\Avg_reg[0]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FFF0F000F00F0FF0"
    )
        port map (
      GE => \Avg_reg[0]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => \Pipe_reg[3][Avg_Calc]\(0),
      I3 => \Pipe_reg[3][New_Sample]\(0),
      I4 => '0',
      O51 => plusOp(0),
      O52 => \Avg_reg[0]_i_1_n_2\,
      PROP => \Avg_reg[0]_i_1_n_3\
    );
\Avg_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \Pipe_reg[3][Valid]__0\,
      D => plusOp(10),
      Q => data2(26),
      R => \Pipe_reg[3][Flush]__0\
    );
\Avg_reg[10]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \Avg_reg[10]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \Pipe_reg[3][Avg_Calc]\(10),
      I4 => \Avg_reg[12]_i_2_n_0\,
      O51 => plusOp(10),
      O52 => \Avg_reg[10]_i_1_n_2\,
      PROP => \Avg_reg[10]_i_1_n_3\
    );
\Avg_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \Pipe_reg[3][Valid]__0\,
      D => plusOp(11),
      Q => data2(27),
      R => \Pipe_reg[3][Flush]__0\
    );
\Avg_reg[11]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \Avg_reg[11]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \Pipe_reg[3][Avg_Calc]\(11),
      I4 => \Avg_reg[10]_i_1_n_2\,
      O51 => plusOp(11),
      O52 => \Avg_reg[11]_i_1_n_2\,
      PROP => \Avg_reg[11]_i_1_n_3\
    );
\Avg_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \Pipe_reg[3][Valid]__0\,
      D => plusOp(12),
      Q => data2(28),
      R => \Pipe_reg[3][Flush]__0\
    );
\Avg_reg[12]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \Avg_reg[12]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \Pipe_reg[3][Avg_Calc]\(12),
      I4 => \Avg_reg[12]_i_2_n_1\,
      O51 => plusOp(12),
      O52 => \Avg_reg[12]_i_1_n_2\,
      PROP => \Avg_reg[12]_i_1_n_3\
    );
\Avg_reg[12]_i_2\: unisim.vcomponents.LOOKAHEAD8
    generic map(
      LOOKB => "TRUE",
      LOOKD => "TRUE",
      LOOKF => "TRUE",
      LOOKH => "FALSE"
    )
        port map (
      CIN => \Avg_reg[8]_i_2_n_3\,
      COUTB => \Avg_reg[12]_i_2_n_0\,
      COUTD => \Avg_reg[12]_i_2_n_1\,
      COUTF => \Avg_reg[12]_i_2_n_2\,
      COUTH => \NLW_Avg_reg[12]_i_2_COUTH_UNCONNECTED\,
      CYA => \Avg_reg[8]_i_1_n_2\,
      CYB => \Avg_reg[9]_i_1_n_2\,
      CYC => \Avg_reg[10]_i_1_n_2\,
      CYD => \Avg_reg[11]_i_1_n_2\,
      CYE => \Avg_reg[12]_i_1_n_2\,
      CYF => \Avg_reg[13]_i_1_n_2\,
      CYG => \NLW_Avg_reg[12]_i_2_CYG_UNCONNECTED\,
      CYH => \NLW_Avg_reg[12]_i_2_CYH_UNCONNECTED\,
      GEA => \Avg_reg[8]_i_1_n_0\,
      GEB => \Avg_reg[9]_i_1_n_0\,
      GEC => \Avg_reg[10]_i_1_n_0\,
      GED => \Avg_reg[11]_i_1_n_0\,
      GEE => \Avg_reg[12]_i_1_n_0\,
      GEF => \Avg_reg[13]_i_1_n_0\,
      GEG => \NLW_Avg_reg[12]_i_2_GEG_UNCONNECTED\,
      GEH => \NLW_Avg_reg[12]_i_2_GEH_UNCONNECTED\,
      PROPA => \Avg_reg[8]_i_1_n_3\,
      PROPB => \Avg_reg[9]_i_1_n_3\,
      PROPC => \Avg_reg[10]_i_1_n_3\,
      PROPD => \Avg_reg[11]_i_1_n_3\,
      PROPE => \Avg_reg[12]_i_1_n_3\,
      PROPF => \Avg_reg[13]_i_1_n_3\,
      PROPG => \NLW_Avg_reg[12]_i_2_PROPG_UNCONNECTED\,
      PROPH => \NLW_Avg_reg[12]_i_2_PROPH_UNCONNECTED\
    );
\Avg_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \Pipe_reg[3][Valid]__0\,
      D => plusOp(13),
      Q => data2(29),
      R => \Pipe_reg[3][Flush]__0\
    );
\Avg_reg[13]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00FF0000FFFF00"
    )
        port map (
      GE => \Avg_reg[13]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \Pipe_reg[3][Avg_Calc]\(13),
      I4 => \Avg_reg[12]_i_1_n_2\,
      O51 => plusOp(13),
      O52 => \Avg_reg[13]_i_1_n_2\,
      PROP => \Avg_reg[13]_i_1_n_3\
    );
\Avg_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \Pipe_reg[3][Valid]__0\,
      D => plusOp(1),
      Q => data2(17),
      R => \Pipe_reg[3][Flush]__0\
    );
\Avg_reg[1]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FFF0F000F00F0FF0"
    )
        port map (
      GE => \Avg_reg[1]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => \Pipe_reg[3][Avg_Calc]\(1),
      I3 => \Pipe_reg[3][New_Sample]\(1),
      I4 => \Avg_reg[0]_i_1_n_2\,
      O51 => plusOp(1),
      O52 => \Avg_reg[1]_i_1_n_2\,
      PROP => \Avg_reg[1]_i_1_n_3\
    );
\Avg_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \Pipe_reg[3][Valid]__0\,
      D => plusOp(2),
      Q => data2(18),
      R => \Pipe_reg[3][Flush]__0\
    );
\Avg_reg[2]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FFF0F000F00F0FF0"
    )
        port map (
      GE => \Avg_reg[2]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => \Pipe_reg[3][Avg_Calc]\(2),
      I3 => \Pipe_reg[3][New_Sample]\(2),
      I4 => \Avg_reg[8]_i_2_n_0\,
      O51 => plusOp(2),
      O52 => \Avg_reg[2]_i_1_n_2\,
      PROP => \Avg_reg[2]_i_1_n_3\
    );
\Avg_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \Pipe_reg[3][Valid]__0\,
      D => plusOp(3),
      Q => data2(19),
      R => \Pipe_reg[3][Flush]__0\
    );
\Avg_reg[3]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FFF0F000F00F0FF0"
    )
        port map (
      GE => \Avg_reg[3]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => \Pipe_reg[3][Avg_Calc]\(3),
      I3 => \Pipe_reg[3][New_Sample]\(3),
      I4 => \Avg_reg[2]_i_1_n_2\,
      O51 => plusOp(3),
      O52 => \Avg_reg[3]_i_1_n_2\,
      PROP => \Avg_reg[3]_i_1_n_3\
    );
\Avg_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \Pipe_reg[3][Valid]__0\,
      D => plusOp(4),
      Q => data2(20),
      R => \Pipe_reg[3][Flush]__0\
    );
\Avg_reg[4]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FFF0F000F00F0FF0"
    )
        port map (
      GE => \Avg_reg[4]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => \Pipe_reg[3][Avg_Calc]\(4),
      I3 => \Pipe_reg[3][New_Sample]\(4),
      I4 => \Avg_reg[8]_i_2_n_1\,
      O51 => plusOp(4),
      O52 => \Avg_reg[4]_i_1_n_2\,
      PROP => \Avg_reg[4]_i_1_n_3\
    );
\Avg_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \Pipe_reg[3][Valid]__0\,
      D => plusOp(5),
      Q => data2(21),
      R => \Pipe_reg[3][Flush]__0\
    );
\Avg_reg[5]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FFF0F000F00F0FF0"
    )
        port map (
      GE => \Avg_reg[5]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => \Pipe_reg[3][Avg_Calc]\(5),
      I3 => \Pipe_reg[3][New_Sample]\(5),
      I4 => \Avg_reg[4]_i_1_n_2\,
      O51 => plusOp(5),
      O52 => \Avg_reg[5]_i_1_n_2\,
      PROP => \Avg_reg[5]_i_1_n_3\
    );
\Avg_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \Pipe_reg[3][Valid]__0\,
      D => plusOp(6),
      Q => data2(22),
      R => \Pipe_reg[3][Flush]__0\
    );
\Avg_reg[6]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FFF0F000F00F0FF0"
    )
        port map (
      GE => \Avg_reg[6]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => \Pipe_reg[3][Avg_Calc]\(6),
      I3 => \Pipe_reg[3][New_Sample]\(6),
      I4 => \Avg_reg[8]_i_2_n_2\,
      O51 => plusOp(6),
      O52 => \Avg_reg[6]_i_1_n_2\,
      PROP => \Avg_reg[6]_i_1_n_3\
    );
\Avg_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \Pipe_reg[3][Valid]__0\,
      D => plusOp(7),
      Q => data2(23),
      R => \Pipe_reg[3][Flush]__0\
    );
\Avg_reg[7]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FFF0F000F00F0FF0"
    )
        port map (
      GE => \Avg_reg[7]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => \Pipe_reg[3][Avg_Calc]\(7),
      I3 => \Pipe_reg[3][New_Sample]\(7),
      I4 => \Avg_reg[6]_i_1_n_2\,
      O51 => plusOp(7),
      O52 => \Avg_reg[7]_i_1_n_2\,
      PROP => \Avg_reg[7]_i_1_n_3\
    );
\Avg_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \Pipe_reg[3][Valid]__0\,
      D => plusOp(8),
      Q => data2(24),
      R => \Pipe_reg[3][Flush]__0\
    );
\Avg_reg[8]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \Avg_reg[8]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \Pipe_reg[3][Avg_Calc]\(8),
      I4 => \Avg_reg[8]_i_2_n_3\,
      O51 => plusOp(8),
      O52 => \Avg_reg[8]_i_1_n_2\,
      PROP => \Avg_reg[8]_i_1_n_3\
    );
\Avg_reg[8]_i_2\: unisim.vcomponents.LOOKAHEAD8
    generic map(
      LOOKB => "FALSE",
      LOOKD => "TRUE",
      LOOKF => "TRUE",
      LOOKH => "TRUE"
    )
        port map (
      CIN => '0',
      COUTB => \Avg_reg[8]_i_2_n_0\,
      COUTD => \Avg_reg[8]_i_2_n_1\,
      COUTF => \Avg_reg[8]_i_2_n_2\,
      COUTH => \Avg_reg[8]_i_2_n_3\,
      CYA => \Avg_reg[0]_i_1_n_2\,
      CYB => \Avg_reg[1]_i_1_n_2\,
      CYC => \Avg_reg[2]_i_1_n_2\,
      CYD => \Avg_reg[3]_i_1_n_2\,
      CYE => \Avg_reg[4]_i_1_n_2\,
      CYF => \Avg_reg[5]_i_1_n_2\,
      CYG => \Avg_reg[6]_i_1_n_2\,
      CYH => \Avg_reg[7]_i_1_n_2\,
      GEA => \Avg_reg[0]_i_1_n_0\,
      GEB => \Avg_reg[1]_i_1_n_0\,
      GEC => \Avg_reg[2]_i_1_n_0\,
      GED => \Avg_reg[3]_i_1_n_0\,
      GEE => \Avg_reg[4]_i_1_n_0\,
      GEF => \Avg_reg[5]_i_1_n_0\,
      GEG => \Avg_reg[6]_i_1_n_0\,
      GEH => \Avg_reg[7]_i_1_n_0\,
      PROPA => \Avg_reg[0]_i_1_n_3\,
      PROPB => \Avg_reg[1]_i_1_n_3\,
      PROPC => \Avg_reg[2]_i_1_n_3\,
      PROPD => \Avg_reg[3]_i_1_n_3\,
      PROPE => \Avg_reg[4]_i_1_n_3\,
      PROPF => \Avg_reg[5]_i_1_n_3\,
      PROPG => \Avg_reg[6]_i_1_n_3\,
      PROPH => \Avg_reg[7]_i_1_n_3\
    );
\Avg_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \Pipe_reg[3][Valid]__0\,
      D => plusOp(9),
      Q => data2(25),
      R => \Pipe_reg[3][Flush]__0\
    );
\Avg_reg[9]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \Avg_reg[9]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \Pipe_reg[3][Avg_Calc]\(9),
      I4 => \Avg_reg[8]_i_1_n_2\,
      O51 => plusOp(9),
      O52 => \Avg_reg[9]_i_1_n_2\,
      PROP => \Avg_reg[9]_i_1_n_3\
    );
\Pipe[0][Valid]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"06"
    )
        port map (
      I0 => Rate_Upd_Tog_d1,
      I1 => Rate_Upd_Tog_d1_reg_0,
      I2 => p_0_in,
      O => \Pipe[0][Valid]_i_1_n_0\
    );
\Pipe[1][New_Sample][1]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => \Pipe_reg[0][New_Sample]\(0),
      I1 => \Pipe_reg[0][New_Sample]\(1),
      O => \Pipe[1][New_Sample][1]_i_1_n_0\
    );
\Pipe[1][New_Sample][2]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"1E"
    )
        port map (
      I0 => \Pipe_reg[0][New_Sample]\(0),
      I1 => \Pipe_reg[0][New_Sample]\(1),
      I2 => \Pipe_reg[0][New_Sample]\(2),
      O => \Pipe[1][New_Sample][2]_i_1_n_0\
    );
\Pipe[1][New_Sample][3]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"01FE"
    )
        port map (
      I0 => \Pipe_reg[0][New_Sample]\(2),
      I1 => \Pipe_reg[0][New_Sample]\(1),
      I2 => \Pipe_reg[0][New_Sample]\(0),
      I3 => \Pipe_reg[0][New_Sample]\(3),
      O => \Pipe[1][New_Sample][3]_i_1_n_0\
    );
\Pipe[1][New_Sample][4]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0001FFFE"
    )
        port map (
      I0 => \Pipe_reg[0][New_Sample]\(3),
      I1 => \Pipe_reg[0][New_Sample]\(0),
      I2 => \Pipe_reg[0][New_Sample]\(1),
      I3 => \Pipe_reg[0][New_Sample]\(2),
      I4 => \Pipe_reg[0][New_Sample]\(4),
      O => \Pipe[1][New_Sample][4]_i_1_n_0\
    );
\Pipe[1][New_Sample][5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000001FFFFFFFE"
    )
        port map (
      I0 => \Pipe_reg[0][New_Sample]\(4),
      I1 => \Pipe_reg[0][New_Sample]\(2),
      I2 => \Pipe_reg[0][New_Sample]\(1),
      I3 => \Pipe_reg[0][New_Sample]\(0),
      I4 => \Pipe_reg[0][New_Sample]\(3),
      I5 => \Pipe_reg[0][New_Sample]\(5),
      O => \Pipe[1][New_Sample][5]_i_1_n_0\
    );
\Pipe[1][New_Sample][6]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \Pipe[1][New_Sample][7]_i_2_n_0\,
      I1 => \Pipe_reg[0][New_Sample]\(6),
      O => \Pipe[1][New_Sample][6]_i_1_n_0\
    );
\Pipe[1][New_Sample][7]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B4"
    )
        port map (
      I0 => \Pipe_reg[0][New_Sample]\(6),
      I1 => \Pipe[1][New_Sample][7]_i_2_n_0\,
      I2 => \Pipe_reg[0][New_Sample]\(7),
      O => \Pipe[1][New_Sample][7]_i_1_n_0\
    );
\Pipe[1][New_Sample][7]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000001"
    )
        port map (
      I0 => \Pipe_reg[0][New_Sample]\(4),
      I1 => \Pipe_reg[0][New_Sample]\(2),
      I2 => \Pipe_reg[0][New_Sample]\(1),
      I3 => \Pipe_reg[0][New_Sample]\(0),
      I4 => \Pipe_reg[0][New_Sample]\(3),
      I5 => \Pipe_reg[0][New_Sample]\(5),
      O => \Pipe[1][New_Sample][7]_i_2_n_0\
    );
\Pipe_reg[0][Flush]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => p_0_in,
      Q => \Pipe_reg[0][Flush]__0\,
      R => '0'
    );
\Pipe_reg[0][New_Sample][0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => p_6_in(0),
      Q => \Pipe_reg[0][New_Sample]\(0),
      R => p_6_in(7)
    );
\Pipe_reg[0][New_Sample][1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => p_6_in(1),
      Q => \Pipe_reg[0][New_Sample]\(1),
      R => p_6_in(7)
    );
\Pipe_reg[0][New_Sample][2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => p_6_in(2),
      Q => \Pipe_reg[0][New_Sample]\(2),
      R => p_6_in(7)
    );
\Pipe_reg[0][New_Sample][3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => p_6_in(3),
      Q => \Pipe_reg[0][New_Sample]\(3),
      R => p_6_in(7)
    );
\Pipe_reg[0][New_Sample][4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => p_6_in(4),
      Q => \Pipe_reg[0][New_Sample]\(4),
      R => p_6_in(7)
    );
\Pipe_reg[0][New_Sample][5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => p_6_in(5),
      Q => \Pipe_reg[0][New_Sample]\(5),
      R => p_6_in(7)
    );
\Pipe_reg[0][New_Sample][6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => p_6_in(6),
      Q => \Pipe_reg[0][New_Sample]\(6),
      R => p_6_in(7)
    );
\Pipe_reg[0][New_Sample][7]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => p_6_in(7),
      Q => \Pipe_reg[0][New_Sample]\(7),
      S => p_6_in(7)
    );
\Pipe_reg[0][Valid]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => \Pipe[0][Valid]_i_1_n_0\,
      Q => \Pipe_reg[0][Valid]__0\,
      R => '0'
    );
\Pipe_reg[1][Flush]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => \Pipe_reg[0][Flush]__0\,
      Q => \Pipe_reg[1][Flush_n_0_]\,
      R => '0'
    );
\Pipe_reg[1][New_Sample][0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \Pipe_reg[0][Valid]__0\,
      D => \Pipe_reg[0][New_Sample]\(0),
      Q => \Pipe_reg[1][New_Sample]\(0),
      R => \Pipe_reg[0][Flush]__0\
    );
\Pipe_reg[1][New_Sample][1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \Pipe_reg[0][Valid]__0\,
      D => \Pipe[1][New_Sample][1]_i_1_n_0\,
      Q => \Pipe_reg[1][New_Sample]\(1),
      R => \Pipe_reg[0][Flush]__0\
    );
\Pipe_reg[1][New_Sample][2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \Pipe_reg[0][Valid]__0\,
      D => \Pipe[1][New_Sample][2]_i_1_n_0\,
      Q => \Pipe_reg[1][New_Sample]\(2),
      R => \Pipe_reg[0][Flush]__0\
    );
\Pipe_reg[1][New_Sample][3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \Pipe_reg[0][Valid]__0\,
      D => \Pipe[1][New_Sample][3]_i_1_n_0\,
      Q => \Pipe_reg[1][New_Sample]\(3),
      R => \Pipe_reg[0][Flush]__0\
    );
\Pipe_reg[1][New_Sample][4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \Pipe_reg[0][Valid]__0\,
      D => \Pipe[1][New_Sample][4]_i_1_n_0\,
      Q => \Pipe_reg[1][New_Sample]\(4),
      R => \Pipe_reg[0][Flush]__0\
    );
\Pipe_reg[1][New_Sample][5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \Pipe_reg[0][Valid]__0\,
      D => \Pipe[1][New_Sample][5]_i_1_n_0\,
      Q => \Pipe_reg[1][New_Sample]\(5),
      R => \Pipe_reg[0][Flush]__0\
    );
\Pipe_reg[1][New_Sample][6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \Pipe_reg[0][Valid]__0\,
      D => \Pipe[1][New_Sample][6]_i_1_n_0\,
      Q => \Pipe_reg[1][New_Sample]\(6),
      R => \Pipe_reg[0][Flush]__0\
    );
\Pipe_reg[1][New_Sample][7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \Pipe_reg[0][Valid]__0\,
      D => \Pipe[1][New_Sample][7]_i_1_n_0\,
      Q => \Pipe_reg[1][New_Sample]\(7),
      R => \Pipe_reg[0][Flush]__0\
    );
\Pipe_reg[1][Valid]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => \Pipe_reg[0][Valid]__0\,
      Q => \Pipe_reg[1][Valid_n_0_]\,
      R => '0'
    );
\Pipe_reg[2][Avg_Calc][0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \Pipe_reg[1][Valid_n_0_]\,
      D => data2(16),
      Q => \Pipe_reg[2][Avg_Calc]\(0),
      R => \Pipe_reg[1][Flush_n_0_]\
    );
\Pipe_reg[2][Avg_Calc][10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \Pipe_reg[1][Valid_n_0_]\,
      D => data2(26),
      Q => \Pipe_reg[2][Avg_Calc]\(10),
      R => \Pipe_reg[1][Flush_n_0_]\
    );
\Pipe_reg[2][Avg_Calc][11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \Pipe_reg[1][Valid_n_0_]\,
      D => data2(27),
      Q => \Pipe_reg[2][Avg_Calc]\(11),
      R => \Pipe_reg[1][Flush_n_0_]\
    );
\Pipe_reg[2][Avg_Calc][12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \Pipe_reg[1][Valid_n_0_]\,
      D => data2(28),
      Q => \Pipe_reg[2][Avg_Calc]\(12),
      R => \Pipe_reg[1][Flush_n_0_]\
    );
\Pipe_reg[2][Avg_Calc][13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \Pipe_reg[1][Valid_n_0_]\,
      D => data2(29),
      Q => \Pipe_reg[2][Avg_Calc]\(13),
      R => \Pipe_reg[1][Flush_n_0_]\
    );
\Pipe_reg[2][Avg_Calc][1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \Pipe_reg[1][Valid_n_0_]\,
      D => data2(17),
      Q => \Pipe_reg[2][Avg_Calc]\(1),
      R => \Pipe_reg[1][Flush_n_0_]\
    );
\Pipe_reg[2][Avg_Calc][2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \Pipe_reg[1][Valid_n_0_]\,
      D => data2(18),
      Q => \Pipe_reg[2][Avg_Calc]\(2),
      R => \Pipe_reg[1][Flush_n_0_]\
    );
\Pipe_reg[2][Avg_Calc][3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \Pipe_reg[1][Valid_n_0_]\,
      D => data2(19),
      Q => \Pipe_reg[2][Avg_Calc]\(3),
      R => \Pipe_reg[1][Flush_n_0_]\
    );
\Pipe_reg[2][Avg_Calc][4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \Pipe_reg[1][Valid_n_0_]\,
      D => data2(20),
      Q => \Pipe_reg[2][Avg_Calc]\(4),
      R => \Pipe_reg[1][Flush_n_0_]\
    );
\Pipe_reg[2][Avg_Calc][5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \Pipe_reg[1][Valid_n_0_]\,
      D => data2(21),
      Q => \Pipe_reg[2][Avg_Calc]\(5),
      R => \Pipe_reg[1][Flush_n_0_]\
    );
\Pipe_reg[2][Avg_Calc][6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \Pipe_reg[1][Valid_n_0_]\,
      D => data2(22),
      Q => \Pipe_reg[2][Avg_Calc]\(6),
      R => \Pipe_reg[1][Flush_n_0_]\
    );
\Pipe_reg[2][Avg_Calc][7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \Pipe_reg[1][Valid_n_0_]\,
      D => data2(23),
      Q => \Pipe_reg[2][Avg_Calc]\(7),
      R => \Pipe_reg[1][Flush_n_0_]\
    );
\Pipe_reg[2][Avg_Calc][8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \Pipe_reg[1][Valid_n_0_]\,
      D => data2(24),
      Q => \Pipe_reg[2][Avg_Calc]\(8),
      R => \Pipe_reg[1][Flush_n_0_]\
    );
\Pipe_reg[2][Avg_Calc][9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \Pipe_reg[1][Valid_n_0_]\,
      D => data2(25),
      Q => \Pipe_reg[2][Avg_Calc]\(9),
      R => \Pipe_reg[1][Flush_n_0_]\
    );
\Pipe_reg[2][Exprd_Sample][0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \Pipe_reg[1][Valid_n_0_]\,
      D => \Sample_Pipe_reg[49]\(0),
      Q => \Pipe_reg[2][Exprd_Sample]\(0),
      R => \Pipe_reg[1][Flush_n_0_]\
    );
\Pipe_reg[2][Exprd_Sample][1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \Pipe_reg[1][Valid_n_0_]\,
      D => \Sample_Pipe_reg[49]\(1),
      Q => \Pipe_reg[2][Exprd_Sample]\(1),
      R => \Pipe_reg[1][Flush_n_0_]\
    );
\Pipe_reg[2][Exprd_Sample][2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \Pipe_reg[1][Valid_n_0_]\,
      D => \Sample_Pipe_reg[49]\(2),
      Q => \Pipe_reg[2][Exprd_Sample]\(2),
      R => \Pipe_reg[1][Flush_n_0_]\
    );
\Pipe_reg[2][Exprd_Sample][3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \Pipe_reg[1][Valid_n_0_]\,
      D => \Sample_Pipe_reg[49]\(3),
      Q => \Pipe_reg[2][Exprd_Sample]\(3),
      R => \Pipe_reg[1][Flush_n_0_]\
    );
\Pipe_reg[2][Exprd_Sample][4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \Pipe_reg[1][Valid_n_0_]\,
      D => \Sample_Pipe_reg[49]\(4),
      Q => \Pipe_reg[2][Exprd_Sample]\(4),
      R => \Pipe_reg[1][Flush_n_0_]\
    );
\Pipe_reg[2][Exprd_Sample][5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \Pipe_reg[1][Valid_n_0_]\,
      D => \Sample_Pipe_reg[49]\(5),
      Q => \Pipe_reg[2][Exprd_Sample]\(5),
      R => \Pipe_reg[1][Flush_n_0_]\
    );
\Pipe_reg[2][Exprd_Sample][6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \Pipe_reg[1][Valid_n_0_]\,
      D => \Sample_Pipe_reg[49]\(6),
      Q => \Pipe_reg[2][Exprd_Sample]\(6),
      R => \Pipe_reg[1][Flush_n_0_]\
    );
\Pipe_reg[2][Exprd_Sample][7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \Pipe_reg[1][Valid_n_0_]\,
      D => \Sample_Pipe_reg[49]\(7),
      Q => \Pipe_reg[2][Exprd_Sample]\(7),
      R => \Pipe_reg[1][Flush_n_0_]\
    );
\Pipe_reg[2][Flush]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => \Pipe_reg[1][Flush_n_0_]\,
      Q => \Pipe_reg[2][Flush]__0\,
      R => '0'
    );
\Pipe_reg[2][New_Sample][0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => \Pipe_reg[1][New_Sample]\(0),
      Q => \Pipe_reg[2][New_Sample]\(0),
      R => '0'
    );
\Pipe_reg[2][New_Sample][1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => \Pipe_reg[1][New_Sample]\(1),
      Q => \Pipe_reg[2][New_Sample]\(1),
      R => '0'
    );
\Pipe_reg[2][New_Sample][2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => \Pipe_reg[1][New_Sample]\(2),
      Q => \Pipe_reg[2][New_Sample]\(2),
      R => '0'
    );
\Pipe_reg[2][New_Sample][3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => \Pipe_reg[1][New_Sample]\(3),
      Q => \Pipe_reg[2][New_Sample]\(3),
      R => '0'
    );
\Pipe_reg[2][New_Sample][4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => \Pipe_reg[1][New_Sample]\(4),
      Q => \Pipe_reg[2][New_Sample]\(4),
      R => '0'
    );
\Pipe_reg[2][New_Sample][5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => \Pipe_reg[1][New_Sample]\(5),
      Q => \Pipe_reg[2][New_Sample]\(5),
      R => '0'
    );
\Pipe_reg[2][New_Sample][6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => \Pipe_reg[1][New_Sample]\(6),
      Q => \Pipe_reg[2][New_Sample]\(6),
      R => '0'
    );
\Pipe_reg[2][New_Sample][7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => \Pipe_reg[1][New_Sample]\(7),
      Q => \Pipe_reg[2][New_Sample]\(7),
      R => '0'
    );
\Pipe_reg[2][Valid]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => \Pipe_reg[1][Valid_n_0_]\,
      Q => \Pipe_reg[2][Valid]__0\,
      R => '0'
    );
\Pipe_reg[3][Avg_Calc][0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => \Pipe_reg[3][Avg_Calc][0]_i_1_n_1\,
      Q => \Pipe_reg[3][Avg_Calc]\(0),
      R => '0'
    );
\Pipe_reg[3][Avg_Calc][0]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"F0FF00F00FF0F00F"
    )
        port map (
      GE => \Pipe_reg[3][Avg_Calc][0]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => \Pipe_reg[2][Avg_Calc]\(0),
      I3 => \Pipe_reg[2][Exprd_Sample]\(0),
      I4 => '1',
      O51 => \Pipe_reg[3][Avg_Calc][0]_i_1_n_1\,
      O52 => \Pipe_reg[3][Avg_Calc][0]_i_1_n_2\,
      PROP => \Pipe_reg[3][Avg_Calc][0]_i_1_n_3\
    );
\Pipe_reg[3][Avg_Calc][10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => \Pipe_reg[3][Avg_Calc][10]_i_1_n_1\,
      Q => \Pipe_reg[3][Avg_Calc]\(10),
      R => '0'
    );
\Pipe_reg[3][Avg_Calc][10]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FFFFFF00FF0000FF"
    )
        port map (
      GE => \Pipe_reg[3][Avg_Calc][10]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \Pipe_reg[2][Avg_Calc]\(10),
      I4 => \Pipe_reg[3][Avg_Calc][12]_i_2_n_0\,
      O51 => \Pipe_reg[3][Avg_Calc][10]_i_1_n_1\,
      O52 => \Pipe_reg[3][Avg_Calc][10]_i_1_n_2\,
      PROP => \Pipe_reg[3][Avg_Calc][10]_i_1_n_3\
    );
\Pipe_reg[3][Avg_Calc][11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => \Pipe_reg[3][Avg_Calc][11]_i_1_n_1\,
      Q => \Pipe_reg[3][Avg_Calc]\(11),
      R => '0'
    );
\Pipe_reg[3][Avg_Calc][11]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FFFFFF00FF0000FF"
    )
        port map (
      GE => \Pipe_reg[3][Avg_Calc][11]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \Pipe_reg[2][Avg_Calc]\(11),
      I4 => \Pipe_reg[3][Avg_Calc][10]_i_1_n_2\,
      O51 => \Pipe_reg[3][Avg_Calc][11]_i_1_n_1\,
      O52 => \Pipe_reg[3][Avg_Calc][11]_i_1_n_2\,
      PROP => \Pipe_reg[3][Avg_Calc][11]_i_1_n_3\
    );
\Pipe_reg[3][Avg_Calc][12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => \Pipe_reg[3][Avg_Calc][12]_i_1_n_1\,
      Q => \Pipe_reg[3][Avg_Calc]\(12),
      R => '0'
    );
\Pipe_reg[3][Avg_Calc][12]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FFFFFF00FF0000FF"
    )
        port map (
      GE => \Pipe_reg[3][Avg_Calc][12]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \Pipe_reg[2][Avg_Calc]\(12),
      I4 => \Pipe_reg[3][Avg_Calc][12]_i_2_n_1\,
      O51 => \Pipe_reg[3][Avg_Calc][12]_i_1_n_1\,
      O52 => \Pipe_reg[3][Avg_Calc][12]_i_1_n_2\,
      PROP => \Pipe_reg[3][Avg_Calc][12]_i_1_n_3\
    );
\Pipe_reg[3][Avg_Calc][12]_i_2\: unisim.vcomponents.LOOKAHEAD8
    generic map(
      LOOKB => "TRUE",
      LOOKD => "TRUE",
      LOOKF => "TRUE",
      LOOKH => "FALSE"
    )
        port map (
      CIN => \Pipe_reg[3][Avg_Calc][8]_i_2_n_3\,
      COUTB => \Pipe_reg[3][Avg_Calc][12]_i_2_n_0\,
      COUTD => \Pipe_reg[3][Avg_Calc][12]_i_2_n_1\,
      COUTF => \Pipe_reg[3][Avg_Calc][12]_i_2_n_2\,
      COUTH => \NLW_Pipe_reg[3][Avg_Calc][12]_i_2_COUTH_UNCONNECTED\,
      CYA => \Pipe_reg[3][Avg_Calc][8]_i_1_n_2\,
      CYB => \Pipe_reg[3][Avg_Calc][9]_i_1_n_2\,
      CYC => \Pipe_reg[3][Avg_Calc][10]_i_1_n_2\,
      CYD => \Pipe_reg[3][Avg_Calc][11]_i_1_n_2\,
      CYE => \Pipe_reg[3][Avg_Calc][12]_i_1_n_2\,
      CYF => \Pipe_reg[3][Avg_Calc][13]_i_1_n_2\,
      CYG => \NLW_Pipe_reg[3][Avg_Calc][12]_i_2_CYG_UNCONNECTED\,
      CYH => \NLW_Pipe_reg[3][Avg_Calc][12]_i_2_CYH_UNCONNECTED\,
      GEA => \Pipe_reg[3][Avg_Calc][8]_i_1_n_0\,
      GEB => \Pipe_reg[3][Avg_Calc][9]_i_1_n_0\,
      GEC => \Pipe_reg[3][Avg_Calc][10]_i_1_n_0\,
      GED => \Pipe_reg[3][Avg_Calc][11]_i_1_n_0\,
      GEE => \Pipe_reg[3][Avg_Calc][12]_i_1_n_0\,
      GEF => \Pipe_reg[3][Avg_Calc][13]_i_1_n_0\,
      GEG => \NLW_Pipe_reg[3][Avg_Calc][12]_i_2_GEG_UNCONNECTED\,
      GEH => \NLW_Pipe_reg[3][Avg_Calc][12]_i_2_GEH_UNCONNECTED\,
      PROPA => \Pipe_reg[3][Avg_Calc][8]_i_1_n_3\,
      PROPB => \Pipe_reg[3][Avg_Calc][9]_i_1_n_3\,
      PROPC => \Pipe_reg[3][Avg_Calc][10]_i_1_n_3\,
      PROPD => \Pipe_reg[3][Avg_Calc][11]_i_1_n_3\,
      PROPE => \Pipe_reg[3][Avg_Calc][12]_i_1_n_3\,
      PROPF => \Pipe_reg[3][Avg_Calc][13]_i_1_n_3\,
      PROPG => \NLW_Pipe_reg[3][Avg_Calc][12]_i_2_PROPG_UNCONNECTED\,
      PROPH => \NLW_Pipe_reg[3][Avg_Calc][12]_i_2_PROPH_UNCONNECTED\
    );
\Pipe_reg[3][Avg_Calc][13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => \Pipe_reg[3][Avg_Calc][13]_i_1_n_1\,
      Q => \Pipe_reg[3][Avg_Calc]\(13),
      R => '0'
    );
\Pipe_reg[3][Avg_Calc][13]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"00FF00FFFF0000FF"
    )
        port map (
      GE => \Pipe_reg[3][Avg_Calc][13]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \Pipe_reg[2][Avg_Calc]\(13),
      I4 => \Pipe_reg[3][Avg_Calc][12]_i_1_n_2\,
      O51 => \Pipe_reg[3][Avg_Calc][13]_i_1_n_1\,
      O52 => \Pipe_reg[3][Avg_Calc][13]_i_1_n_2\,
      PROP => \Pipe_reg[3][Avg_Calc][13]_i_1_n_3\
    );
\Pipe_reg[3][Avg_Calc][1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => \Pipe_reg[3][Avg_Calc][1]_i_1_n_1\,
      Q => \Pipe_reg[3][Avg_Calc]\(1),
      R => '0'
    );
\Pipe_reg[3][Avg_Calc][1]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"F0FF00F00FF0F00F"
    )
        port map (
      GE => \Pipe_reg[3][Avg_Calc][1]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => \Pipe_reg[2][Avg_Calc]\(1),
      I3 => \Pipe_reg[2][Exprd_Sample]\(1),
      I4 => \Pipe_reg[3][Avg_Calc][0]_i_1_n_2\,
      O51 => \Pipe_reg[3][Avg_Calc][1]_i_1_n_1\,
      O52 => \Pipe_reg[3][Avg_Calc][1]_i_1_n_2\,
      PROP => \Pipe_reg[3][Avg_Calc][1]_i_1_n_3\
    );
\Pipe_reg[3][Avg_Calc][2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => \Pipe_reg[3][Avg_Calc][2]_i_1_n_1\,
      Q => \Pipe_reg[3][Avg_Calc]\(2),
      R => '0'
    );
\Pipe_reg[3][Avg_Calc][2]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"F0FF00F00FF0F00F"
    )
        port map (
      GE => \Pipe_reg[3][Avg_Calc][2]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => \Pipe_reg[2][Avg_Calc]\(2),
      I3 => \Pipe_reg[2][Exprd_Sample]\(2),
      I4 => \Pipe_reg[3][Avg_Calc][8]_i_2_n_0\,
      O51 => \Pipe_reg[3][Avg_Calc][2]_i_1_n_1\,
      O52 => \Pipe_reg[3][Avg_Calc][2]_i_1_n_2\,
      PROP => \Pipe_reg[3][Avg_Calc][2]_i_1_n_3\
    );
\Pipe_reg[3][Avg_Calc][3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => \Pipe_reg[3][Avg_Calc][3]_i_1_n_1\,
      Q => \Pipe_reg[3][Avg_Calc]\(3),
      R => '0'
    );
\Pipe_reg[3][Avg_Calc][3]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"F0FF00F00FF0F00F"
    )
        port map (
      GE => \Pipe_reg[3][Avg_Calc][3]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => \Pipe_reg[2][Avg_Calc]\(3),
      I3 => \Pipe_reg[2][Exprd_Sample]\(3),
      I4 => \Pipe_reg[3][Avg_Calc][2]_i_1_n_2\,
      O51 => \Pipe_reg[3][Avg_Calc][3]_i_1_n_1\,
      O52 => \Pipe_reg[3][Avg_Calc][3]_i_1_n_2\,
      PROP => \Pipe_reg[3][Avg_Calc][3]_i_1_n_3\
    );
\Pipe_reg[3][Avg_Calc][4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => \Pipe_reg[3][Avg_Calc][4]_i_1_n_1\,
      Q => \Pipe_reg[3][Avg_Calc]\(4),
      R => '0'
    );
\Pipe_reg[3][Avg_Calc][4]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"F0FF00F00FF0F00F"
    )
        port map (
      GE => \Pipe_reg[3][Avg_Calc][4]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => \Pipe_reg[2][Avg_Calc]\(4),
      I3 => \Pipe_reg[2][Exprd_Sample]\(4),
      I4 => \Pipe_reg[3][Avg_Calc][8]_i_2_n_1\,
      O51 => \Pipe_reg[3][Avg_Calc][4]_i_1_n_1\,
      O52 => \Pipe_reg[3][Avg_Calc][4]_i_1_n_2\,
      PROP => \Pipe_reg[3][Avg_Calc][4]_i_1_n_3\
    );
\Pipe_reg[3][Avg_Calc][5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => \Pipe_reg[3][Avg_Calc][5]_i_1_n_1\,
      Q => \Pipe_reg[3][Avg_Calc]\(5),
      R => '0'
    );
\Pipe_reg[3][Avg_Calc][5]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"F0FF00F00FF0F00F"
    )
        port map (
      GE => \Pipe_reg[3][Avg_Calc][5]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => \Pipe_reg[2][Avg_Calc]\(5),
      I3 => \Pipe_reg[2][Exprd_Sample]\(5),
      I4 => \Pipe_reg[3][Avg_Calc][4]_i_1_n_2\,
      O51 => \Pipe_reg[3][Avg_Calc][5]_i_1_n_1\,
      O52 => \Pipe_reg[3][Avg_Calc][5]_i_1_n_2\,
      PROP => \Pipe_reg[3][Avg_Calc][5]_i_1_n_3\
    );
\Pipe_reg[3][Avg_Calc][6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => \Pipe_reg[3][Avg_Calc][6]_i_1_n_1\,
      Q => \Pipe_reg[3][Avg_Calc]\(6),
      R => '0'
    );
\Pipe_reg[3][Avg_Calc][6]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"F0FF00F00FF0F00F"
    )
        port map (
      GE => \Pipe_reg[3][Avg_Calc][6]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => \Pipe_reg[2][Avg_Calc]\(6),
      I3 => \Pipe_reg[2][Exprd_Sample]\(6),
      I4 => \Pipe_reg[3][Avg_Calc][8]_i_2_n_2\,
      O51 => \Pipe_reg[3][Avg_Calc][6]_i_1_n_1\,
      O52 => \Pipe_reg[3][Avg_Calc][6]_i_1_n_2\,
      PROP => \Pipe_reg[3][Avg_Calc][6]_i_1_n_3\
    );
\Pipe_reg[3][Avg_Calc][7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => \Pipe_reg[3][Avg_Calc][7]_i_1_n_1\,
      Q => \Pipe_reg[3][Avg_Calc]\(7),
      R => '0'
    );
\Pipe_reg[3][Avg_Calc][7]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"F0FF00F00FF0F00F"
    )
        port map (
      GE => \Pipe_reg[3][Avg_Calc][7]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => \Pipe_reg[2][Avg_Calc]\(7),
      I3 => \Pipe_reg[2][Exprd_Sample]\(7),
      I4 => \Pipe_reg[3][Avg_Calc][6]_i_1_n_2\,
      O51 => \Pipe_reg[3][Avg_Calc][7]_i_1_n_1\,
      O52 => \Pipe_reg[3][Avg_Calc][7]_i_1_n_2\,
      PROP => \Pipe_reg[3][Avg_Calc][7]_i_1_n_3\
    );
\Pipe_reg[3][Avg_Calc][8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => \Pipe_reg[3][Avg_Calc][8]_i_1_n_1\,
      Q => \Pipe_reg[3][Avg_Calc]\(8),
      R => '0'
    );
\Pipe_reg[3][Avg_Calc][8]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FFFFFF00FF0000FF"
    )
        port map (
      GE => \Pipe_reg[3][Avg_Calc][8]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \Pipe_reg[2][Avg_Calc]\(8),
      I4 => \Pipe_reg[3][Avg_Calc][8]_i_2_n_3\,
      O51 => \Pipe_reg[3][Avg_Calc][8]_i_1_n_1\,
      O52 => \Pipe_reg[3][Avg_Calc][8]_i_1_n_2\,
      PROP => \Pipe_reg[3][Avg_Calc][8]_i_1_n_3\
    );
\Pipe_reg[3][Avg_Calc][8]_i_2\: unisim.vcomponents.LOOKAHEAD8
    generic map(
      LOOKB => "FALSE",
      LOOKD => "TRUE",
      LOOKF => "TRUE",
      LOOKH => "TRUE"
    )
        port map (
      CIN => '1',
      COUTB => \Pipe_reg[3][Avg_Calc][8]_i_2_n_0\,
      COUTD => \Pipe_reg[3][Avg_Calc][8]_i_2_n_1\,
      COUTF => \Pipe_reg[3][Avg_Calc][8]_i_2_n_2\,
      COUTH => \Pipe_reg[3][Avg_Calc][8]_i_2_n_3\,
      CYA => \Pipe_reg[3][Avg_Calc][0]_i_1_n_2\,
      CYB => \Pipe_reg[3][Avg_Calc][1]_i_1_n_2\,
      CYC => \Pipe_reg[3][Avg_Calc][2]_i_1_n_2\,
      CYD => \Pipe_reg[3][Avg_Calc][3]_i_1_n_2\,
      CYE => \Pipe_reg[3][Avg_Calc][4]_i_1_n_2\,
      CYF => \Pipe_reg[3][Avg_Calc][5]_i_1_n_2\,
      CYG => \Pipe_reg[3][Avg_Calc][6]_i_1_n_2\,
      CYH => \Pipe_reg[3][Avg_Calc][7]_i_1_n_2\,
      GEA => \Pipe_reg[3][Avg_Calc][0]_i_1_n_0\,
      GEB => \Pipe_reg[3][Avg_Calc][1]_i_1_n_0\,
      GEC => \Pipe_reg[3][Avg_Calc][2]_i_1_n_0\,
      GED => \Pipe_reg[3][Avg_Calc][3]_i_1_n_0\,
      GEE => \Pipe_reg[3][Avg_Calc][4]_i_1_n_0\,
      GEF => \Pipe_reg[3][Avg_Calc][5]_i_1_n_0\,
      GEG => \Pipe_reg[3][Avg_Calc][6]_i_1_n_0\,
      GEH => \Pipe_reg[3][Avg_Calc][7]_i_1_n_0\,
      PROPA => \Pipe_reg[3][Avg_Calc][0]_i_1_n_3\,
      PROPB => \Pipe_reg[3][Avg_Calc][1]_i_1_n_3\,
      PROPC => \Pipe_reg[3][Avg_Calc][2]_i_1_n_3\,
      PROPD => \Pipe_reg[3][Avg_Calc][3]_i_1_n_3\,
      PROPE => \Pipe_reg[3][Avg_Calc][4]_i_1_n_3\,
      PROPF => \Pipe_reg[3][Avg_Calc][5]_i_1_n_3\,
      PROPG => \Pipe_reg[3][Avg_Calc][6]_i_1_n_3\,
      PROPH => \Pipe_reg[3][Avg_Calc][7]_i_1_n_3\
    );
\Pipe_reg[3][Avg_Calc][9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => \Pipe_reg[3][Avg_Calc][9]_i_1_n_1\,
      Q => \Pipe_reg[3][Avg_Calc]\(9),
      R => '0'
    );
\Pipe_reg[3][Avg_Calc][9]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FFFFFF00FF0000FF"
    )
        port map (
      GE => \Pipe_reg[3][Avg_Calc][9]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \Pipe_reg[2][Avg_Calc]\(9),
      I4 => \Pipe_reg[3][Avg_Calc][8]_i_1_n_2\,
      O51 => \Pipe_reg[3][Avg_Calc][9]_i_1_n_1\,
      O52 => \Pipe_reg[3][Avg_Calc][9]_i_1_n_2\,
      PROP => \Pipe_reg[3][Avg_Calc][9]_i_1_n_3\
    );
\Pipe_reg[3][Flush]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => \Pipe_reg[2][Flush]__0\,
      Q => \Pipe_reg[3][Flush]__0\,
      R => '0'
    );
\Pipe_reg[3][New_Sample][0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => \Pipe_reg[2][New_Sample]\(0),
      Q => \Pipe_reg[3][New_Sample]\(0),
      R => '0'
    );
\Pipe_reg[3][New_Sample][1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => \Pipe_reg[2][New_Sample]\(1),
      Q => \Pipe_reg[3][New_Sample]\(1),
      R => '0'
    );
\Pipe_reg[3][New_Sample][2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => \Pipe_reg[2][New_Sample]\(2),
      Q => \Pipe_reg[3][New_Sample]\(2),
      R => '0'
    );
\Pipe_reg[3][New_Sample][3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => \Pipe_reg[2][New_Sample]\(3),
      Q => \Pipe_reg[3][New_Sample]\(3),
      R => '0'
    );
\Pipe_reg[3][New_Sample][4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => \Pipe_reg[2][New_Sample]\(4),
      Q => \Pipe_reg[3][New_Sample]\(4),
      R => '0'
    );
\Pipe_reg[3][New_Sample][5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => \Pipe_reg[2][New_Sample]\(5),
      Q => \Pipe_reg[3][New_Sample]\(5),
      R => '0'
    );
\Pipe_reg[3][New_Sample][6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => \Pipe_reg[2][New_Sample]\(6),
      Q => \Pipe_reg[3][New_Sample]\(6),
      R => '0'
    );
\Pipe_reg[3][New_Sample][7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => \Pipe_reg[2][New_Sample]\(7),
      Q => \Pipe_reg[3][New_Sample]\(7),
      R => '0'
    );
\Pipe_reg[3][Valid]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => \Pipe_reg[2][Valid]__0\,
      Q => \Pipe_reg[3][Valid]__0\,
      R => '0'
    );
Rate_Upd_Tog_d1_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => Rate_Upd_Tog_d1_reg_0,
      Q => Rate_Upd_Tog_d1,
      R => '0'
    );
\Rst_Count[0]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \Rst_Count_reg_n_0_[0]\,
      O => minusOp(0)
    );
\Rst_Count[1]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \Rst_Count_reg_n_0_[1]\,
      I1 => \Rst_Count_reg_n_0_[0]\,
      O => minusOp(1)
    );
\Rst_Count[2]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"E1"
    )
        port map (
      I0 => \Rst_Count_reg_n_0_[1]\,
      I1 => \Rst_Count_reg_n_0_[0]\,
      I2 => \Rst_Count_reg_n_0_[2]\,
      O => minusOp(2)
    );
\Rst_Count[3]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AAA9"
    )
        port map (
      I0 => \Rst_Count_reg_n_0_[3]\,
      I1 => \Rst_Count_reg_n_0_[1]\,
      I2 => \Rst_Count_reg_n_0_[0]\,
      I3 => \Rst_Count_reg_n_0_[2]\,
      O => minusOp(3)
    );
\Rst_Count[4]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAAAAA9"
    )
        port map (
      I0 => \Rst_Count_reg_n_0_[4]\,
      I1 => \Rst_Count_reg_n_0_[2]\,
      I2 => \Rst_Count_reg_n_0_[0]\,
      I3 => \Rst_Count_reg_n_0_[1]\,
      I4 => \Rst_Count_reg_n_0_[3]\,
      O => minusOp(4)
    );
\Rst_Count[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFE00000001"
    )
        port map (
      I0 => \Rst_Count_reg_n_0_[3]\,
      I1 => \Rst_Count_reg_n_0_[1]\,
      I2 => \Rst_Count_reg_n_0_[0]\,
      I3 => \Rst_Count_reg_n_0_[2]\,
      I4 => \Rst_Count_reg_n_0_[4]\,
      I5 => \Rst_Count_reg_n_0_[5]\,
      O => minusOp(5)
    );
\Rst_Count[6]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFFFE"
    )
        port map (
      I0 => \Rst_Count_reg_n_0_[3]\,
      I1 => \Rst_Count_reg_n_0_[1]\,
      I2 => \Rst_Count_reg_n_0_[0]\,
      I3 => \Rst_Count_reg_n_0_[2]\,
      I4 => \Rst_Count_reg_n_0_[4]\,
      I5 => \Rst_Count_reg_n_0_[5]\,
      O => minusOp(6)
    );
\Rst_Count_reg[0]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => p_0_in,
      D => minusOp(0),
      Q => \Rst_Count_reg_n_0_[0]\,
      S => \^ss\(0)
    );
\Rst_Count_reg[1]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => p_0_in,
      D => minusOp(1),
      Q => \Rst_Count_reg_n_0_[1]\,
      S => \^ss\(0)
    );
\Rst_Count_reg[2]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => p_0_in,
      D => minusOp(2),
      Q => \Rst_Count_reg_n_0_[2]\,
      S => \^ss\(0)
    );
\Rst_Count_reg[3]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => p_0_in,
      D => minusOp(3),
      Q => \Rst_Count_reg_n_0_[3]\,
      S => \^ss\(0)
    );
\Rst_Count_reg[4]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => p_0_in,
      D => minusOp(4),
      Q => \Rst_Count_reg_n_0_[4]\,
      S => \^ss\(0)
    );
\Rst_Count_reg[5]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => p_0_in,
      D => minusOp(5),
      Q => \Rst_Count_reg_n_0_[5]\,
      S => \^ss\(0)
    );
\Rst_Count_reg[6]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => p_0_in,
      D => minusOp(6),
      Q => p_0_in,
      S => \^ss\(0)
    );
\Sample_Pipe_reg[31][0]_srl32\: unisim.vcomponents.SRLC32E
    generic map(
      INIT => X"00000000"
    )
        port map (
      A(4 downto 0) => B"11111",
      CE => \Sample_Pipe_reg[31][7]_srl32_i_1_n_0\,
      CLK => aclk_ctrl,
      D => \Pipe_reg[1][New_Sample]\(0),
      Q => \NLW_Sample_Pipe_reg[31][0]_srl32_Q_UNCONNECTED\,
      Q31 => \Sample_Pipe_reg[31][0]_srl32_n_1\
    );
\Sample_Pipe_reg[31][1]_srl32\: unisim.vcomponents.SRLC32E
    generic map(
      INIT => X"00000000"
    )
        port map (
      A(4 downto 0) => B"11111",
      CE => \Sample_Pipe_reg[31][7]_srl32_i_1_n_0\,
      CLK => aclk_ctrl,
      D => \Pipe_reg[1][New_Sample]\(1),
      Q => \NLW_Sample_Pipe_reg[31][1]_srl32_Q_UNCONNECTED\,
      Q31 => \Sample_Pipe_reg[31][1]_srl32_n_1\
    );
\Sample_Pipe_reg[31][2]_srl32\: unisim.vcomponents.SRLC32E
    generic map(
      INIT => X"00000000"
    )
        port map (
      A(4 downto 0) => B"11111",
      CE => \Sample_Pipe_reg[31][7]_srl32_i_1_n_0\,
      CLK => aclk_ctrl,
      D => \Pipe_reg[1][New_Sample]\(2),
      Q => \NLW_Sample_Pipe_reg[31][2]_srl32_Q_UNCONNECTED\,
      Q31 => \Sample_Pipe_reg[31][2]_srl32_n_1\
    );
\Sample_Pipe_reg[31][3]_srl32\: unisim.vcomponents.SRLC32E
    generic map(
      INIT => X"00000000"
    )
        port map (
      A(4 downto 0) => B"11111",
      CE => \Sample_Pipe_reg[31][7]_srl32_i_1_n_0\,
      CLK => aclk_ctrl,
      D => \Pipe_reg[1][New_Sample]\(3),
      Q => \NLW_Sample_Pipe_reg[31][3]_srl32_Q_UNCONNECTED\,
      Q31 => \Sample_Pipe_reg[31][3]_srl32_n_1\
    );
\Sample_Pipe_reg[31][4]_srl32\: unisim.vcomponents.SRLC32E
    generic map(
      INIT => X"00000000"
    )
        port map (
      A(4 downto 0) => B"11111",
      CE => \Sample_Pipe_reg[31][7]_srl32_i_1_n_0\,
      CLK => aclk_ctrl,
      D => \Pipe_reg[1][New_Sample]\(4),
      Q => \NLW_Sample_Pipe_reg[31][4]_srl32_Q_UNCONNECTED\,
      Q31 => \Sample_Pipe_reg[31][4]_srl32_n_1\
    );
\Sample_Pipe_reg[31][5]_srl32\: unisim.vcomponents.SRLC32E
    generic map(
      INIT => X"00000000"
    )
        port map (
      A(4 downto 0) => B"11111",
      CE => \Sample_Pipe_reg[31][7]_srl32_i_1_n_0\,
      CLK => aclk_ctrl,
      D => \Pipe_reg[1][New_Sample]\(5),
      Q => \NLW_Sample_Pipe_reg[31][5]_srl32_Q_UNCONNECTED\,
      Q31 => \Sample_Pipe_reg[31][5]_srl32_n_1\
    );
\Sample_Pipe_reg[31][6]_srl32\: unisim.vcomponents.SRLC32E
    generic map(
      INIT => X"00000000"
    )
        port map (
      A(4 downto 0) => B"11111",
      CE => \Sample_Pipe_reg[31][7]_srl32_i_1_n_0\,
      CLK => aclk_ctrl,
      D => \Pipe_reg[1][New_Sample]\(6),
      Q => \NLW_Sample_Pipe_reg[31][6]_srl32_Q_UNCONNECTED\,
      Q31 => \Sample_Pipe_reg[31][6]_srl32_n_1\
    );
\Sample_Pipe_reg[31][7]_srl32\: unisim.vcomponents.SRLC32E
    generic map(
      INIT => X"00000000"
    )
        port map (
      A(4 downto 0) => B"11111",
      CE => \Sample_Pipe_reg[31][7]_srl32_i_1_n_0\,
      CLK => aclk_ctrl,
      D => \Pipe_reg[1][New_Sample]\(7),
      Q => \NLW_Sample_Pipe_reg[31][7]_srl32_Q_UNCONNECTED\,
      Q31 => \Sample_Pipe_reg[31][7]_srl32_n_1\
    );
\Sample_Pipe_reg[31][7]_srl32_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \Pipe_reg[1][Valid_n_0_]\,
      I1 => \Pipe_reg[1][Flush_n_0_]\,
      O => \Sample_Pipe_reg[31][7]_srl32_i_1_n_0\
    );
\Sample_Pipe_reg[49][0]_srl18\: unisim.vcomponents.SRLC32E
    generic map(
      INIT => X"00000000"
    )
        port map (
      A(4 downto 0) => B"10001",
      CE => \Sample_Pipe_reg[31][7]_srl32_i_1_n_0\,
      CLK => aclk_ctrl,
      D => \Sample_Pipe_reg[31][0]_srl32_n_1\,
      Q => \Sample_Pipe_reg[49]\(0),
      Q31 => \NLW_Sample_Pipe_reg[49][0]_srl18_Q31_UNCONNECTED\
    );
\Sample_Pipe_reg[49][1]_srl18\: unisim.vcomponents.SRLC32E
    generic map(
      INIT => X"00000000"
    )
        port map (
      A(4 downto 0) => B"10001",
      CE => \Sample_Pipe_reg[31][7]_srl32_i_1_n_0\,
      CLK => aclk_ctrl,
      D => \Sample_Pipe_reg[31][1]_srl32_n_1\,
      Q => \Sample_Pipe_reg[49]\(1),
      Q31 => \NLW_Sample_Pipe_reg[49][1]_srl18_Q31_UNCONNECTED\
    );
\Sample_Pipe_reg[49][2]_srl18\: unisim.vcomponents.SRLC32E
    generic map(
      INIT => X"00000000"
    )
        port map (
      A(4 downto 0) => B"10001",
      CE => \Sample_Pipe_reg[31][7]_srl32_i_1_n_0\,
      CLK => aclk_ctrl,
      D => \Sample_Pipe_reg[31][2]_srl32_n_1\,
      Q => \Sample_Pipe_reg[49]\(2),
      Q31 => \NLW_Sample_Pipe_reg[49][2]_srl18_Q31_UNCONNECTED\
    );
\Sample_Pipe_reg[49][3]_srl18\: unisim.vcomponents.SRLC32E
    generic map(
      INIT => X"00000000"
    )
        port map (
      A(4 downto 0) => B"10001",
      CE => \Sample_Pipe_reg[31][7]_srl32_i_1_n_0\,
      CLK => aclk_ctrl,
      D => \Sample_Pipe_reg[31][3]_srl32_n_1\,
      Q => \Sample_Pipe_reg[49]\(3),
      Q31 => \NLW_Sample_Pipe_reg[49][3]_srl18_Q31_UNCONNECTED\
    );
\Sample_Pipe_reg[49][4]_srl18\: unisim.vcomponents.SRLC32E
    generic map(
      INIT => X"00000000"
    )
        port map (
      A(4 downto 0) => B"10001",
      CE => \Sample_Pipe_reg[31][7]_srl32_i_1_n_0\,
      CLK => aclk_ctrl,
      D => \Sample_Pipe_reg[31][4]_srl32_n_1\,
      Q => \Sample_Pipe_reg[49]\(4),
      Q31 => \NLW_Sample_Pipe_reg[49][4]_srl18_Q31_UNCONNECTED\
    );
\Sample_Pipe_reg[49][5]_srl18\: unisim.vcomponents.SRLC32E
    generic map(
      INIT => X"00000000"
    )
        port map (
      A(4 downto 0) => B"10001",
      CE => \Sample_Pipe_reg[31][7]_srl32_i_1_n_0\,
      CLK => aclk_ctrl,
      D => \Sample_Pipe_reg[31][5]_srl32_n_1\,
      Q => \Sample_Pipe_reg[49]\(5),
      Q31 => \NLW_Sample_Pipe_reg[49][5]_srl18_Q31_UNCONNECTED\
    );
\Sample_Pipe_reg[49][6]_srl18\: unisim.vcomponents.SRLC32E
    generic map(
      INIT => X"00000000"
    )
        port map (
      A(4 downto 0) => B"10001",
      CE => \Sample_Pipe_reg[31][7]_srl32_i_1_n_0\,
      CLK => aclk_ctrl,
      D => \Sample_Pipe_reg[31][6]_srl32_n_1\,
      Q => \Sample_Pipe_reg[49]\(6),
      Q31 => \NLW_Sample_Pipe_reg[49][6]_srl18_Q31_UNCONNECTED\
    );
\Sample_Pipe_reg[49][7]_srl18\: unisim.vcomponents.SRLC32E
    generic map(
      INIT => X"00000000"
    )
        port map (
      A(4 downto 0) => B"10001",
      CE => \Sample_Pipe_reg[31][7]_srl32_i_1_n_0\,
      CLK => aclk_ctrl,
      D => \Sample_Pipe_reg[31][7]_srl32_n_1\,
      Q => \Sample_Pipe_reg[49]\(7),
      Q31 => \NLW_Sample_Pipe_reg[49][7]_srl18_Q31_UNCONNECTED\
    );
s_axi_ctrl_mgmt_arready_i_i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => aresetn_ctrl,
      O => \^ss\(0)
    );
\s_axi_ctrl_mgmt_rdata_i[16]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFEEE"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i_reg[16]\,
      I1 => \s_axi_ctrl_mgmt_rdata_i[16]_i_3_n_0\,
      I2 => \s_axi_ctrl_mgmt_rdata_i_reg[22]_0\(0),
      I3 => \s_axi_ctrl_mgmt_rdata_i_reg[22]\,
      I4 => \s_axi_ctrl_mgmt_rdata_i_reg[16]_0\,
      O => \syncstages_ff_reg[2][16]\
    );
\s_axi_ctrl_mgmt_rdata_i[16]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"080F080F080F0800"
    )
        port map (
      I0 => s_axi_ctrl_mgmt_araddr(3),
      I1 => Q(0),
      I2 => s_axi_ctrl_mgmt_araddr(5),
      I3 => s_axi_ctrl_mgmt_araddr(1),
      I4 => \s_axi_ctrl_mgmt_rdata_i_reg[16]_1\,
      I5 => \s_axi_ctrl_mgmt_rdata_i[16]_i_6_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[16]_i_3_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[16]_i_6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8888888"
    )
        port map (
      I0 => data2(16),
      I1 => s_axi_ctrl_mgmt_araddr(3),
      I2 => s_axi_ctrl_mgmt_araddr(4),
      I3 => \s_axi_ctrl_mgmt_rdata_i[16]_i_3_0\,
      I4 => \s_axi_ctrl_mgmt_rdata_i_reg[29]\(0),
      O => \s_axi_ctrl_mgmt_rdata_i[16]_i_6_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[17]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFEEE"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i[17]_i_2_n_0\,
      I1 => \s_axi_ctrl_mgmt_rdata_i_reg[17]\,
      I2 => \s_axi_ctrl_mgmt_rdata_i_reg[29]\(5),
      I3 => \s_axi_ctrl_mgmt_rdata_i_reg[17]_0\,
      I4 => \s_axi_ctrl_mgmt_rdata_i_reg[17]_1\,
      I5 => \s_axi_ctrl_mgmt_rdata_i_reg[17]_2\,
      O => \syncstages_ff_reg[1][81]\
    );
\s_axi_ctrl_mgmt_rdata_i[17]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFF888F888F888"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i_reg[17]_3\,
      I1 => data2(17),
      I2 => \s_axi_ctrl_mgmt_rdata_i_reg[17]_4\,
      I3 => Q(1),
      I4 => \s_axi_ctrl_mgmt_rdata_i_reg[29]\(1),
      I5 => \s_axi_ctrl_mgmt_rdata_i_reg[17]_5\,
      O => \s_axi_ctrl_mgmt_rdata_i[17]_i_2_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[18]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFEEE"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i_reg[18]\,
      I1 => \s_axi_ctrl_mgmt_rdata_i[18]_i_3_n_0\,
      I2 => \s_axi_ctrl_mgmt_rdata_i_reg[22]_0\(1),
      I3 => \s_axi_ctrl_mgmt_rdata_i_reg[22]\,
      I4 => \s_axi_ctrl_mgmt_rdata_i_reg[18]_0\,
      I5 => \s_axi_ctrl_mgmt_rdata_i_reg[18]_1\,
      O => \syncstages_ff_reg[2][18]\
    );
\s_axi_ctrl_mgmt_rdata_i[18]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000AC000000A0"
    )
        port map (
      I0 => data2(18),
      I1 => s_axi_ctrl_mgmt_araddr(4),
      I2 => s_axi_ctrl_mgmt_araddr(3),
      I3 => s_axi_ctrl_mgmt_araddr(1),
      I4 => s_axi_ctrl_mgmt_araddr(5),
      I5 => \s_axi_ctrl_mgmt_rdata_i_reg[18]_2\,
      O => \s_axi_ctrl_mgmt_rdata_i[18]_i_3_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[19]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFEEE"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i[19]_i_2_n_0\,
      I1 => \s_axi_ctrl_mgmt_rdata_i_reg[19]\,
      I2 => \s_axi_ctrl_mgmt_rdata_i_reg[29]\(6),
      I3 => \s_axi_ctrl_mgmt_rdata_i_reg[17]_0\,
      I4 => \s_axi_ctrl_mgmt_rdata_i_reg[19]_0\,
      I5 => \s_axi_ctrl_mgmt_rdata_i_reg[19]_1\,
      O => \syncstages_ff_reg[1][83]\
    );
\s_axi_ctrl_mgmt_rdata_i[19]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFF888F888F888"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i_reg[17]_3\,
      I1 => data2(19),
      I2 => \s_axi_ctrl_mgmt_rdata_i_reg[17]_4\,
      I3 => Q(2),
      I4 => \s_axi_ctrl_mgmt_rdata_i_reg[29]\(2),
      I5 => \s_axi_ctrl_mgmt_rdata_i_reg[17]_5\,
      O => \s_axi_ctrl_mgmt_rdata_i[19]_i_2_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[20]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFF888"
    )
        port map (
      I0 => dest_out(0),
      I1 => \s_axi_ctrl_mgmt_rdata_i_reg[20]\,
      I2 => \s_axi_ctrl_mgmt_rdata_i_reg[20]_0\,
      I3 => \s_axi_ctrl_mgmt_rdata_i_reg[20]_1\,
      I4 => \s_axi_ctrl_mgmt_rdata_i[20]_i_3_n_0\,
      I5 => \s_axi_ctrl_mgmt_rdata_i_reg[20]_2\,
      O => \syncstages_ff_reg[2][20]\
    );
\s_axi_ctrl_mgmt_rdata_i[20]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFC840C840C840"
    )
        port map (
      I0 => s_axi_ctrl_mgmt_araddr(3),
      I1 => \s_axi_ctrl_mgmt_rdata_i_reg[20]_3\,
      I2 => p_6_in(8),
      I3 => data2(20),
      I4 => \s_axi_ctrl_mgmt_rdata_i_reg[22]_0\(2),
      I5 => \s_axi_ctrl_mgmt_rdata_i_reg[22]\,
      O => \s_axi_ctrl_mgmt_rdata_i[20]_i_3_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[21]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAAAA8A8A8"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i_reg[21]\,
      I1 => \s_axi_ctrl_mgmt_rdata_i_reg[21]_0\,
      I2 => \s_axi_ctrl_mgmt_rdata_i_reg[21]_1\,
      I3 => \s_axi_ctrl_mgmt_rdata_i_reg[21]_2\,
      I4 => dest_out(4),
      I5 => \s_axi_ctrl_mgmt_rdata_i[21]_i_5_n_0\,
      O => D(0)
    );
\s_axi_ctrl_mgmt_rdata_i[21]_i_5\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFEAEAEA"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i[21]_i_6_n_0\,
      I1 => \s_axi_ctrl_mgmt_rdata_i_reg[20]\,
      I2 => dest_out(1),
      I3 => \s_axi_ctrl_mgmt_rdata_i_reg[22]_1\,
      I4 => \s_axi_ctrl_mgmt_rdata_i_reg[22]_0\(6),
      O => \s_axi_ctrl_mgmt_rdata_i[21]_i_5_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[21]_i_6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF230123012301"
    )
        port map (
      I0 => s_axi_ctrl_mgmt_araddr(3),
      I1 => s_axi_ctrl_mgmt_araddr(5),
      I2 => \s_axi_ctrl_mgmt_rdata_i[21]_i_5_0\,
      I3 => data2(21),
      I4 => \s_axi_ctrl_mgmt_rdata_i_reg[22]_0\(3),
      I5 => \s_axi_ctrl_mgmt_rdata_i_reg[22]\,
      O => \s_axi_ctrl_mgmt_rdata_i[21]_i_6_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[22]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAAA808080"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i_reg[21]\,
      I1 => \s_axi_ctrl_mgmt_rdata_i_reg[22]\,
      I2 => \s_axi_ctrl_mgmt_rdata_i_reg[22]_0\(4),
      I3 => \s_axi_ctrl_mgmt_rdata_i_reg[22]_0\(7),
      I4 => \s_axi_ctrl_mgmt_rdata_i_reg[22]_1\,
      I5 => \s_axi_ctrl_mgmt_rdata_i[22]_i_5_n_0\,
      O => D(1)
    );
\s_axi_ctrl_mgmt_rdata_i[22]_i_10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"22222222F0000000"
    )
        port map (
      I0 => data2(22),
      I1 => s_axi_ctrl_mgmt_araddr(5),
      I2 => \s_axi_ctrl_mgmt_rdata_i_reg[17]_5\,
      I3 => \s_axi_ctrl_mgmt_rdata_i_reg[29]\(3),
      I4 => s_axi_ctrl_mgmt_araddr(4),
      I5 => s_axi_ctrl_mgmt_araddr(3),
      O => \s_axi_ctrl_mgmt_rdata_i[22]_i_10_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[22]_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFEAEAEA"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i_reg[22]_2\,
      I1 => \s_axi_ctrl_mgmt_rdata_i_reg[22]_0\(8),
      I2 => \s_axi_ctrl_mgmt_rdata_i_reg[22]_3\,
      I3 => dest_out(2),
      I4 => \s_axi_ctrl_mgmt_rdata_i_reg[20]\,
      I5 => \s_axi_ctrl_mgmt_rdata_i[22]_i_8_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[22]_i_5_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[22]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF2A220A02"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i[22]_i_5_0\,
      I1 => s_axi_ctrl_mgmt_araddr(2),
      I2 => s_axi_ctrl_mgmt_araddr(0),
      I3 => \s_axi_ctrl_mgmt_rdata_i_reg[29]\(4),
      I4 => \s_axi_ctrl_mgmt_rdata_i_reg[29]\(7),
      I5 => \s_axi_ctrl_mgmt_rdata_i[22]_i_10_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[22]_i_8_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[23]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFFFE"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i_reg[23]\,
      I1 => \s_axi_ctrl_mgmt_rdata_i_reg[23]_0\,
      I2 => \s_axi_ctrl_mgmt_rdata_i[23]_i_4_n_0\,
      I3 => \s_axi_ctrl_mgmt_rdata_i_reg[23]_1\,
      I4 => \s_axi_ctrl_mgmt_rdata_i_reg[23]_2\,
      O => \syncstages_ff_reg[2][23]\
    );
\s_axi_ctrl_mgmt_rdata_i[23]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF002000200020"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i_reg[29]\(8),
      I1 => s_axi_ctrl_mgmt_araddr(5),
      I2 => s_axi_ctrl_mgmt_araddr(0),
      I3 => s_axi_ctrl_mgmt_araddr(2),
      I4 => data2(23),
      I5 => \s_axi_ctrl_mgmt_rdata_i_reg[17]_3\,
      O => \s_axi_ctrl_mgmt_rdata_i[23]_i_4_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[24]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFF888"
    )
        port map (
      I0 => dest_out(3),
      I1 => \s_axi_ctrl_mgmt_rdata_i_reg[20]\,
      I2 => \s_axi_ctrl_mgmt_rdata_i_reg[24]\,
      I3 => \s_axi_ctrl_mgmt_rdata_i_reg[20]_1\,
      I4 => \s_axi_ctrl_mgmt_rdata_i[24]_i_4_n_0\,
      I5 => \s_axi_ctrl_mgmt_rdata_i_reg[24]_0\,
      O => \syncstages_ff_reg[2][24]\
    );
\s_axi_ctrl_mgmt_rdata_i[24]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFC840C840C840"
    )
        port map (
      I0 => s_axi_ctrl_mgmt_araddr(3),
      I1 => \s_axi_ctrl_mgmt_rdata_i_reg[20]_3\,
      I2 => p_6_in(9),
      I3 => data2(24),
      I4 => \s_axi_ctrl_mgmt_rdata_i_reg[22]_0\(5),
      I5 => \s_axi_ctrl_mgmt_rdata_i_reg[22]\,
      O => \s_axi_ctrl_mgmt_rdata_i[24]_i_4_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[25]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFFFE"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i_reg[25]\,
      I1 => \s_axi_ctrl_mgmt_rdata_i_reg[25]_0\,
      I2 => \s_axi_ctrl_mgmt_rdata_i[25]_i_4_n_0\,
      I3 => \s_axi_ctrl_mgmt_rdata_i_reg[25]_1\,
      I4 => \s_axi_ctrl_mgmt_rdata_i_reg[25]_2\,
      O => \syncstages_ff_reg[2][25]\
    );
\s_axi_ctrl_mgmt_rdata_i[25]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF002000200020"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i_reg[29]\(9),
      I1 => s_axi_ctrl_mgmt_araddr(5),
      I2 => s_axi_ctrl_mgmt_araddr(0),
      I3 => s_axi_ctrl_mgmt_araddr(2),
      I4 => data2(25),
      I5 => \s_axi_ctrl_mgmt_rdata_i_reg[17]_3\,
      O => \s_axi_ctrl_mgmt_rdata_i[25]_i_4_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[26]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFFFE"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i_reg[26]\,
      I1 => \s_axi_ctrl_mgmt_rdata_i_reg[26]_0\,
      I2 => \s_axi_ctrl_mgmt_rdata_i[26]_i_4_n_0\,
      I3 => \s_axi_ctrl_mgmt_rdata_i_reg[26]_1\,
      I4 => \s_axi_ctrl_mgmt_rdata_i_reg[26]_2\,
      O => \syncstages_ff_reg[2][26]\
    );
\s_axi_ctrl_mgmt_rdata_i[26]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF002000200020"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i_reg[29]\(10),
      I1 => s_axi_ctrl_mgmt_araddr(5),
      I2 => s_axi_ctrl_mgmt_araddr(0),
      I3 => s_axi_ctrl_mgmt_araddr(2),
      I4 => data2(26),
      I5 => \s_axi_ctrl_mgmt_rdata_i_reg[17]_3\,
      O => \s_axi_ctrl_mgmt_rdata_i[26]_i_4_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[27]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFFFE"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i_reg[27]\,
      I1 => \s_axi_ctrl_mgmt_rdata_i_reg[27]_0\,
      I2 => \s_axi_ctrl_mgmt_rdata_i[27]_i_4_n_0\,
      I3 => \s_axi_ctrl_mgmt_rdata_i_reg[27]_1\,
      I4 => \s_axi_ctrl_mgmt_rdata_i_reg[27]_2\,
      O => \syncstages_ff_reg[2][27]\
    );
\s_axi_ctrl_mgmt_rdata_i[27]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF002000200020"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i_reg[29]\(11),
      I1 => s_axi_ctrl_mgmt_araddr(5),
      I2 => s_axi_ctrl_mgmt_araddr(0),
      I3 => s_axi_ctrl_mgmt_araddr(2),
      I4 => data2(27),
      I5 => \s_axi_ctrl_mgmt_rdata_i_reg[17]_3\,
      O => \s_axi_ctrl_mgmt_rdata_i[27]_i_4_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[28]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFFFE"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i_reg[28]\,
      I1 => \s_axi_ctrl_mgmt_rdata_i_reg[28]_0\,
      I2 => \s_axi_ctrl_mgmt_rdata_i[28]_i_4_n_0\,
      I3 => \s_axi_ctrl_mgmt_rdata_i_reg[28]_1\,
      I4 => \s_axi_ctrl_mgmt_rdata_i_reg[28]_2\,
      O => \syncstages_ff_reg[2][28]\
    );
\s_axi_ctrl_mgmt_rdata_i[28]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF002000200020"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i_reg[29]\(12),
      I1 => s_axi_ctrl_mgmt_araddr(5),
      I2 => s_axi_ctrl_mgmt_araddr(0),
      I3 => s_axi_ctrl_mgmt_araddr(2),
      I4 => data2(28),
      I5 => \s_axi_ctrl_mgmt_rdata_i_reg[17]_3\,
      O => \s_axi_ctrl_mgmt_rdata_i[28]_i_4_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[29]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFFFE"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i_reg[29]_0\,
      I1 => \s_axi_ctrl_mgmt_rdata_i_reg[29]_1\,
      I2 => \s_axi_ctrl_mgmt_rdata_i[29]_i_4_n_0\,
      I3 => \s_axi_ctrl_mgmt_rdata_i_reg[29]_2\,
      I4 => \s_axi_ctrl_mgmt_rdata_i_reg[29]_3\,
      O => \syncstages_ff_reg[2][29]\
    );
\s_axi_ctrl_mgmt_rdata_i[29]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF002000200020"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i_reg[29]\(13),
      I1 => s_axi_ctrl_mgmt_araddr(5),
      I2 => s_axi_ctrl_mgmt_araddr(0),
      I3 => s_axi_ctrl_mgmt_araddr(2),
      I4 => data2(29),
      I5 => \s_axi_ctrl_mgmt_rdata_i_reg[17]_3\,
      O => \s_axi_ctrl_mgmt_rdata_i[29]_i_4_n_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single is
  port (
    src_clk : in STD_LOGIC;
    src_in : in STD_LOGIC_VECTOR ( 7 downto 0 );
    dest_clk : in STD_LOGIC;
    dest_out : out STD_LOGIC_VECTOR ( 7 downto 0 )
  );
  attribute DEST_SYNC_FF : integer;
  attribute DEST_SYNC_FF of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single : entity is 2;
  attribute INIT_SYNC_FF : integer;
  attribute INIT_SYNC_FF of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single : entity is 0;
  attribute SIM_ASSERT_CHK : integer;
  attribute SIM_ASSERT_CHK of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single : entity is 0;
  attribute SRC_INPUT_REG : integer;
  attribute SRC_INPUT_REG of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single : entity is 0;
  attribute VERSION : integer;
  attribute VERSION of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single : entity is 0;
  attribute WIDTH : integer;
  attribute WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single : entity is 8;
  attribute XPM_MODULE : string;
  attribute XPM_MODULE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single : entity is "TRUE";
  attribute keep_hierarchy : string;
  attribute keep_hierarchy of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single : entity is "true";
  attribute xpm_cdc : string;
  attribute xpm_cdc of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single : entity is "ARRAY_SINGLE";
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single is
  signal async_path_bit : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \syncstages_ff[0]\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of \syncstages_ff[0]\ : signal is "true";
  attribute async_reg : string;
  attribute async_reg of \syncstages_ff[0]\ : signal is "true";
  attribute xpm_cdc of \syncstages_ff[0]\ : signal is "ARRAY_SINGLE";
  signal \syncstages_ff[1]\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  attribute RTL_KEEP of \syncstages_ff[1]\ : signal is "true";
  attribute async_reg of \syncstages_ff[1]\ : signal is "true";
  attribute xpm_cdc of \syncstages_ff[1]\ : signal is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \syncstages_ff_reg[0][0]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][0]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][1]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][1]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][1]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][2]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][2]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][2]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][3]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][3]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][3]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][4]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][4]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][4]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][5]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][5]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][5]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][6]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][6]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][6]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][7]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][7]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][7]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][0]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][0]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][0]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][1]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][1]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][1]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][2]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][2]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][2]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][3]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][3]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][3]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][4]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][4]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][4]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][5]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][5]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][5]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][6]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][6]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][6]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][7]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][7]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][7]\ : label is "ARRAY_SINGLE";
begin
  async_path_bit(7 downto 0) <= src_in(7 downto 0);
  dest_out(7 downto 0) <= \syncstages_ff[1]\(7 downto 0);
\syncstages_ff_reg[0][0]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(0),
      Q => \syncstages_ff[0]\(0),
      R => '0'
    );
\syncstages_ff_reg[0][1]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(1),
      Q => \syncstages_ff[0]\(1),
      R => '0'
    );
\syncstages_ff_reg[0][2]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(2),
      Q => \syncstages_ff[0]\(2),
      R => '0'
    );
\syncstages_ff_reg[0][3]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(3),
      Q => \syncstages_ff[0]\(3),
      R => '0'
    );
\syncstages_ff_reg[0][4]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(4),
      Q => \syncstages_ff[0]\(4),
      R => '0'
    );
\syncstages_ff_reg[0][5]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(5),
      Q => \syncstages_ff[0]\(5),
      R => '0'
    );
\syncstages_ff_reg[0][6]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(6),
      Q => \syncstages_ff[0]\(6),
      R => '0'
    );
\syncstages_ff_reg[0][7]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(7),
      Q => \syncstages_ff[0]\(7),
      R => '0'
    );
\syncstages_ff_reg[1][0]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(0),
      Q => \syncstages_ff[1]\(0),
      R => '0'
    );
\syncstages_ff_reg[1][1]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(1),
      Q => \syncstages_ff[1]\(1),
      R => '0'
    );
\syncstages_ff_reg[1][2]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(2),
      Q => \syncstages_ff[1]\(2),
      R => '0'
    );
\syncstages_ff_reg[1][3]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(3),
      Q => \syncstages_ff[1]\(3),
      R => '0'
    );
\syncstages_ff_reg[1][4]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(4),
      Q => \syncstages_ff[1]\(4),
      R => '0'
    );
\syncstages_ff_reg[1][5]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(5),
      Q => \syncstages_ff[1]\(5),
      R => '0'
    );
\syncstages_ff_reg[1][6]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(6),
      Q => \syncstages_ff[1]\(6),
      R => '0'
    );
\syncstages_ff_reg[1][7]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(7),
      Q => \syncstages_ff[1]\(7),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__2\ is
  port (
    src_clk : in STD_LOGIC;
    src_in : in STD_LOGIC_VECTOR ( 7 downto 0 );
    dest_clk : in STD_LOGIC;
    dest_out : out STD_LOGIC_VECTOR ( 7 downto 0 )
  );
  attribute DEST_SYNC_FF : integer;
  attribute DEST_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__2\ : entity is 2;
  attribute INIT_SYNC_FF : integer;
  attribute INIT_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__2\ : entity is 0;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__2\ : entity is "xpm_cdc_array_single";
  attribute SIM_ASSERT_CHK : integer;
  attribute SIM_ASSERT_CHK of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__2\ : entity is 0;
  attribute SRC_INPUT_REG : integer;
  attribute SRC_INPUT_REG of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__2\ : entity is 0;
  attribute VERSION : integer;
  attribute VERSION of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__2\ : entity is 0;
  attribute WIDTH : integer;
  attribute WIDTH of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__2\ : entity is 8;
  attribute XPM_MODULE : string;
  attribute XPM_MODULE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__2\ : entity is "TRUE";
  attribute keep_hierarchy : string;
  attribute keep_hierarchy of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__2\ : entity is "true";
  attribute xpm_cdc : string;
  attribute xpm_cdc of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__2\ : entity is "ARRAY_SINGLE";
end \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__2\;

architecture STRUCTURE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__2\ is
  signal async_path_bit : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \syncstages_ff[0]\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of \syncstages_ff[0]\ : signal is "true";
  attribute async_reg : string;
  attribute async_reg of \syncstages_ff[0]\ : signal is "true";
  attribute xpm_cdc of \syncstages_ff[0]\ : signal is "ARRAY_SINGLE";
  signal \syncstages_ff[1]\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  attribute RTL_KEEP of \syncstages_ff[1]\ : signal is "true";
  attribute async_reg of \syncstages_ff[1]\ : signal is "true";
  attribute xpm_cdc of \syncstages_ff[1]\ : signal is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \syncstages_ff_reg[0][0]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][0]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][1]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][1]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][1]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][2]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][2]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][2]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][3]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][3]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][3]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][4]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][4]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][4]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][5]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][5]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][5]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][6]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][6]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][6]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][7]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][7]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][7]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][0]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][0]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][0]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][1]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][1]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][1]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][2]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][2]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][2]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][3]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][3]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][3]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][4]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][4]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][4]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][5]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][5]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][5]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][6]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][6]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][6]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][7]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][7]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][7]\ : label is "ARRAY_SINGLE";
begin
  async_path_bit(7 downto 0) <= src_in(7 downto 0);
  dest_out(7 downto 0) <= \syncstages_ff[1]\(7 downto 0);
\syncstages_ff_reg[0][0]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(0),
      Q => \syncstages_ff[0]\(0),
      R => '0'
    );
\syncstages_ff_reg[0][1]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(1),
      Q => \syncstages_ff[0]\(1),
      R => '0'
    );
\syncstages_ff_reg[0][2]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(2),
      Q => \syncstages_ff[0]\(2),
      R => '0'
    );
\syncstages_ff_reg[0][3]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(3),
      Q => \syncstages_ff[0]\(3),
      R => '0'
    );
\syncstages_ff_reg[0][4]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(4),
      Q => \syncstages_ff[0]\(4),
      R => '0'
    );
\syncstages_ff_reg[0][5]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(5),
      Q => \syncstages_ff[0]\(5),
      R => '0'
    );
\syncstages_ff_reg[0][6]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(6),
      Q => \syncstages_ff[0]\(6),
      R => '0'
    );
\syncstages_ff_reg[0][7]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(7),
      Q => \syncstages_ff[0]\(7),
      R => '0'
    );
\syncstages_ff_reg[1][0]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(0),
      Q => \syncstages_ff[1]\(0),
      R => '0'
    );
\syncstages_ff_reg[1][1]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(1),
      Q => \syncstages_ff[1]\(1),
      R => '0'
    );
\syncstages_ff_reg[1][2]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(2),
      Q => \syncstages_ff[1]\(2),
      R => '0'
    );
\syncstages_ff_reg[1][3]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(3),
      Q => \syncstages_ff[1]\(3),
      R => '0'
    );
\syncstages_ff_reg[1][4]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(4),
      Q => \syncstages_ff[1]\(4),
      R => '0'
    );
\syncstages_ff_reg[1][5]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(5),
      Q => \syncstages_ff[1]\(5),
      R => '0'
    );
\syncstages_ff_reg[1][6]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(6),
      Q => \syncstages_ff[1]\(6),
      R => '0'
    );
\syncstages_ff_reg[1][7]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(7),
      Q => \syncstages_ff[1]\(7),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0\ is
  port (
    src_clk : in STD_LOGIC;
    src_in : in STD_LOGIC_VECTOR ( 0 to 0 );
    dest_clk : in STD_LOGIC;
    dest_out : out STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute DEST_SYNC_FF : integer;
  attribute DEST_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0\ : entity is 3;
  attribute INIT_SYNC_FF : integer;
  attribute INIT_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0\ : entity is 0;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0\ : entity is "xpm_cdc_array_single";
  attribute SIM_ASSERT_CHK : integer;
  attribute SIM_ASSERT_CHK of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0\ : entity is 0;
  attribute SRC_INPUT_REG : integer;
  attribute SRC_INPUT_REG of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0\ : entity is 0;
  attribute VERSION : integer;
  attribute VERSION of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0\ : entity is 0;
  attribute WIDTH : integer;
  attribute WIDTH of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0\ : entity is 1;
  attribute XPM_MODULE : string;
  attribute XPM_MODULE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0\ : entity is "TRUE";
  attribute keep_hierarchy : string;
  attribute keep_hierarchy of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0\ : entity is "true";
  attribute xpm_cdc : string;
  attribute xpm_cdc of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0\ : entity is "ARRAY_SINGLE";
end \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0\;

architecture STRUCTURE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0\ is
  signal async_path_bit : STD_LOGIC;
  signal \syncstages_ff[0]\ : STD_LOGIC;
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of \syncstages_ff[0]\ : signal is "true";
  attribute async_reg : string;
  attribute async_reg of \syncstages_ff[0]\ : signal is "true";
  attribute xpm_cdc of \syncstages_ff[0]\ : signal is "ARRAY_SINGLE";
  signal \syncstages_ff[1]\ : STD_LOGIC;
  attribute RTL_KEEP of \syncstages_ff[1]\ : signal is "true";
  attribute async_reg of \syncstages_ff[1]\ : signal is "true";
  attribute xpm_cdc of \syncstages_ff[1]\ : signal is "ARRAY_SINGLE";
  signal \syncstages_ff[2]\ : STD_LOGIC;
  attribute RTL_KEEP of \syncstages_ff[2]\ : signal is "true";
  attribute async_reg of \syncstages_ff[2]\ : signal is "true";
  attribute xpm_cdc of \syncstages_ff[2]\ : signal is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \syncstages_ff_reg[0][0]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][0]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][0]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][0]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][0]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][0]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][0]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][0]\ : label is "ARRAY_SINGLE";
begin
  async_path_bit <= src_in(0);
  dest_out(0) <= \syncstages_ff[2]\;
\syncstages_ff_reg[0][0]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit,
      Q => \syncstages_ff[0]\,
      R => '0'
    );
\syncstages_ff_reg[1][0]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\,
      Q => \syncstages_ff[1]\,
      R => '0'
    );
\syncstages_ff_reg[2][0]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\,
      Q => \syncstages_ff[2]\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__10\ is
  port (
    src_clk : in STD_LOGIC;
    src_in : in STD_LOGIC_VECTOR ( 0 to 0 );
    dest_clk : in STD_LOGIC;
    dest_out : out STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute DEST_SYNC_FF : integer;
  attribute DEST_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__10\ : entity is 3;
  attribute INIT_SYNC_FF : integer;
  attribute INIT_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__10\ : entity is 0;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__10\ : entity is "xpm_cdc_array_single";
  attribute SIM_ASSERT_CHK : integer;
  attribute SIM_ASSERT_CHK of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__10\ : entity is 0;
  attribute SRC_INPUT_REG : integer;
  attribute SRC_INPUT_REG of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__10\ : entity is 0;
  attribute VERSION : integer;
  attribute VERSION of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__10\ : entity is 0;
  attribute WIDTH : integer;
  attribute WIDTH of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__10\ : entity is 1;
  attribute XPM_MODULE : string;
  attribute XPM_MODULE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__10\ : entity is "TRUE";
  attribute keep_hierarchy : string;
  attribute keep_hierarchy of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__10\ : entity is "true";
  attribute xpm_cdc : string;
  attribute xpm_cdc of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__10\ : entity is "ARRAY_SINGLE";
end \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__10\;

architecture STRUCTURE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__10\ is
  signal async_path_bit : STD_LOGIC;
  signal \syncstages_ff[0]\ : STD_LOGIC;
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of \syncstages_ff[0]\ : signal is "true";
  attribute async_reg : string;
  attribute async_reg of \syncstages_ff[0]\ : signal is "true";
  attribute xpm_cdc of \syncstages_ff[0]\ : signal is "ARRAY_SINGLE";
  signal \syncstages_ff[1]\ : STD_LOGIC;
  attribute RTL_KEEP of \syncstages_ff[1]\ : signal is "true";
  attribute async_reg of \syncstages_ff[1]\ : signal is "true";
  attribute xpm_cdc of \syncstages_ff[1]\ : signal is "ARRAY_SINGLE";
  signal \syncstages_ff[2]\ : STD_LOGIC;
  attribute RTL_KEEP of \syncstages_ff[2]\ : signal is "true";
  attribute async_reg of \syncstages_ff[2]\ : signal is "true";
  attribute xpm_cdc of \syncstages_ff[2]\ : signal is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \syncstages_ff_reg[0][0]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][0]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][0]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][0]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][0]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][0]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][0]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][0]\ : label is "ARRAY_SINGLE";
begin
  async_path_bit <= src_in(0);
  dest_out(0) <= \syncstages_ff[2]\;
\syncstages_ff_reg[0][0]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit,
      Q => \syncstages_ff[0]\,
      R => '0'
    );
\syncstages_ff_reg[1][0]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\,
      Q => \syncstages_ff[1]\,
      R => '0'
    );
\syncstages_ff_reg[2][0]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\,
      Q => \syncstages_ff[2]\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__6\ is
  port (
    src_clk : in STD_LOGIC;
    src_in : in STD_LOGIC_VECTOR ( 0 to 0 );
    dest_clk : in STD_LOGIC;
    dest_out : out STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute DEST_SYNC_FF : integer;
  attribute DEST_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__6\ : entity is 3;
  attribute INIT_SYNC_FF : integer;
  attribute INIT_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__6\ : entity is 0;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__6\ : entity is "xpm_cdc_array_single";
  attribute SIM_ASSERT_CHK : integer;
  attribute SIM_ASSERT_CHK of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__6\ : entity is 0;
  attribute SRC_INPUT_REG : integer;
  attribute SRC_INPUT_REG of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__6\ : entity is 0;
  attribute VERSION : integer;
  attribute VERSION of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__6\ : entity is 0;
  attribute WIDTH : integer;
  attribute WIDTH of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__6\ : entity is 1;
  attribute XPM_MODULE : string;
  attribute XPM_MODULE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__6\ : entity is "TRUE";
  attribute keep_hierarchy : string;
  attribute keep_hierarchy of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__6\ : entity is "true";
  attribute xpm_cdc : string;
  attribute xpm_cdc of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__6\ : entity is "ARRAY_SINGLE";
end \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__6\;

architecture STRUCTURE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__6\ is
  signal async_path_bit : STD_LOGIC;
  signal \syncstages_ff[0]\ : STD_LOGIC;
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of \syncstages_ff[0]\ : signal is "true";
  attribute async_reg : string;
  attribute async_reg of \syncstages_ff[0]\ : signal is "true";
  attribute xpm_cdc of \syncstages_ff[0]\ : signal is "ARRAY_SINGLE";
  signal \syncstages_ff[1]\ : STD_LOGIC;
  attribute RTL_KEEP of \syncstages_ff[1]\ : signal is "true";
  attribute async_reg of \syncstages_ff[1]\ : signal is "true";
  attribute xpm_cdc of \syncstages_ff[1]\ : signal is "ARRAY_SINGLE";
  signal \syncstages_ff[2]\ : STD_LOGIC;
  attribute RTL_KEEP of \syncstages_ff[2]\ : signal is "true";
  attribute async_reg of \syncstages_ff[2]\ : signal is "true";
  attribute xpm_cdc of \syncstages_ff[2]\ : signal is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \syncstages_ff_reg[0][0]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][0]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][0]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][0]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][0]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][0]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][0]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][0]\ : label is "ARRAY_SINGLE";
begin
  async_path_bit <= src_in(0);
  dest_out(0) <= \syncstages_ff[2]\;
\syncstages_ff_reg[0][0]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit,
      Q => \syncstages_ff[0]\,
      R => '0'
    );
\syncstages_ff_reg[1][0]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\,
      Q => \syncstages_ff[1]\,
      R => '0'
    );
\syncstages_ff_reg[2][0]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\,
      Q => \syncstages_ff[2]\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__7\ is
  port (
    src_clk : in STD_LOGIC;
    src_in : in STD_LOGIC_VECTOR ( 0 to 0 );
    dest_clk : in STD_LOGIC;
    dest_out : out STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute DEST_SYNC_FF : integer;
  attribute DEST_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__7\ : entity is 3;
  attribute INIT_SYNC_FF : integer;
  attribute INIT_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__7\ : entity is 0;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__7\ : entity is "xpm_cdc_array_single";
  attribute SIM_ASSERT_CHK : integer;
  attribute SIM_ASSERT_CHK of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__7\ : entity is 0;
  attribute SRC_INPUT_REG : integer;
  attribute SRC_INPUT_REG of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__7\ : entity is 0;
  attribute VERSION : integer;
  attribute VERSION of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__7\ : entity is 0;
  attribute WIDTH : integer;
  attribute WIDTH of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__7\ : entity is 1;
  attribute XPM_MODULE : string;
  attribute XPM_MODULE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__7\ : entity is "TRUE";
  attribute keep_hierarchy : string;
  attribute keep_hierarchy of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__7\ : entity is "true";
  attribute xpm_cdc : string;
  attribute xpm_cdc of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__7\ : entity is "ARRAY_SINGLE";
end \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__7\;

architecture STRUCTURE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__7\ is
  signal async_path_bit : STD_LOGIC;
  signal \syncstages_ff[0]\ : STD_LOGIC;
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of \syncstages_ff[0]\ : signal is "true";
  attribute async_reg : string;
  attribute async_reg of \syncstages_ff[0]\ : signal is "true";
  attribute xpm_cdc of \syncstages_ff[0]\ : signal is "ARRAY_SINGLE";
  signal \syncstages_ff[1]\ : STD_LOGIC;
  attribute RTL_KEEP of \syncstages_ff[1]\ : signal is "true";
  attribute async_reg of \syncstages_ff[1]\ : signal is "true";
  attribute xpm_cdc of \syncstages_ff[1]\ : signal is "ARRAY_SINGLE";
  signal \syncstages_ff[2]\ : STD_LOGIC;
  attribute RTL_KEEP of \syncstages_ff[2]\ : signal is "true";
  attribute async_reg of \syncstages_ff[2]\ : signal is "true";
  attribute xpm_cdc of \syncstages_ff[2]\ : signal is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \syncstages_ff_reg[0][0]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][0]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][0]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][0]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][0]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][0]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][0]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][0]\ : label is "ARRAY_SINGLE";
begin
  async_path_bit <= src_in(0);
  dest_out(0) <= \syncstages_ff[2]\;
\syncstages_ff_reg[0][0]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit,
      Q => \syncstages_ff[0]\,
      R => '0'
    );
\syncstages_ff_reg[1][0]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\,
      Q => \syncstages_ff[1]\,
      R => '0'
    );
\syncstages_ff_reg[2][0]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\,
      Q => \syncstages_ff[2]\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__8\ is
  port (
    src_clk : in STD_LOGIC;
    src_in : in STD_LOGIC_VECTOR ( 0 to 0 );
    dest_clk : in STD_LOGIC;
    dest_out : out STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute DEST_SYNC_FF : integer;
  attribute DEST_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__8\ : entity is 3;
  attribute INIT_SYNC_FF : integer;
  attribute INIT_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__8\ : entity is 0;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__8\ : entity is "xpm_cdc_array_single";
  attribute SIM_ASSERT_CHK : integer;
  attribute SIM_ASSERT_CHK of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__8\ : entity is 0;
  attribute SRC_INPUT_REG : integer;
  attribute SRC_INPUT_REG of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__8\ : entity is 0;
  attribute VERSION : integer;
  attribute VERSION of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__8\ : entity is 0;
  attribute WIDTH : integer;
  attribute WIDTH of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__8\ : entity is 1;
  attribute XPM_MODULE : string;
  attribute XPM_MODULE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__8\ : entity is "TRUE";
  attribute keep_hierarchy : string;
  attribute keep_hierarchy of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__8\ : entity is "true";
  attribute xpm_cdc : string;
  attribute xpm_cdc of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__8\ : entity is "ARRAY_SINGLE";
end \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__8\;

architecture STRUCTURE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__8\ is
  signal async_path_bit : STD_LOGIC;
  signal \syncstages_ff[0]\ : STD_LOGIC;
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of \syncstages_ff[0]\ : signal is "true";
  attribute async_reg : string;
  attribute async_reg of \syncstages_ff[0]\ : signal is "true";
  attribute xpm_cdc of \syncstages_ff[0]\ : signal is "ARRAY_SINGLE";
  signal \syncstages_ff[1]\ : STD_LOGIC;
  attribute RTL_KEEP of \syncstages_ff[1]\ : signal is "true";
  attribute async_reg of \syncstages_ff[1]\ : signal is "true";
  attribute xpm_cdc of \syncstages_ff[1]\ : signal is "ARRAY_SINGLE";
  signal \syncstages_ff[2]\ : STD_LOGIC;
  attribute RTL_KEEP of \syncstages_ff[2]\ : signal is "true";
  attribute async_reg of \syncstages_ff[2]\ : signal is "true";
  attribute xpm_cdc of \syncstages_ff[2]\ : signal is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \syncstages_ff_reg[0][0]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][0]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][0]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][0]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][0]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][0]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][0]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][0]\ : label is "ARRAY_SINGLE";
begin
  async_path_bit <= src_in(0);
  dest_out(0) <= \syncstages_ff[2]\;
\syncstages_ff_reg[0][0]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit,
      Q => \syncstages_ff[0]\,
      R => '0'
    );
\syncstages_ff_reg[1][0]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\,
      Q => \syncstages_ff[1]\,
      R => '0'
    );
\syncstages_ff_reg[2][0]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\,
      Q => \syncstages_ff[2]\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__9\ is
  port (
    src_clk : in STD_LOGIC;
    src_in : in STD_LOGIC_VECTOR ( 0 to 0 );
    dest_clk : in STD_LOGIC;
    dest_out : out STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute DEST_SYNC_FF : integer;
  attribute DEST_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__9\ : entity is 3;
  attribute INIT_SYNC_FF : integer;
  attribute INIT_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__9\ : entity is 0;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__9\ : entity is "xpm_cdc_array_single";
  attribute SIM_ASSERT_CHK : integer;
  attribute SIM_ASSERT_CHK of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__9\ : entity is 0;
  attribute SRC_INPUT_REG : integer;
  attribute SRC_INPUT_REG of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__9\ : entity is 0;
  attribute VERSION : integer;
  attribute VERSION of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__9\ : entity is 0;
  attribute WIDTH : integer;
  attribute WIDTH of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__9\ : entity is 1;
  attribute XPM_MODULE : string;
  attribute XPM_MODULE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__9\ : entity is "TRUE";
  attribute keep_hierarchy : string;
  attribute keep_hierarchy of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__9\ : entity is "true";
  attribute xpm_cdc : string;
  attribute xpm_cdc of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__9\ : entity is "ARRAY_SINGLE";
end \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__9\;

architecture STRUCTURE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__9\ is
  signal async_path_bit : STD_LOGIC;
  signal \syncstages_ff[0]\ : STD_LOGIC;
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of \syncstages_ff[0]\ : signal is "true";
  attribute async_reg : string;
  attribute async_reg of \syncstages_ff[0]\ : signal is "true";
  attribute xpm_cdc of \syncstages_ff[0]\ : signal is "ARRAY_SINGLE";
  signal \syncstages_ff[1]\ : STD_LOGIC;
  attribute RTL_KEEP of \syncstages_ff[1]\ : signal is "true";
  attribute async_reg of \syncstages_ff[1]\ : signal is "true";
  attribute xpm_cdc of \syncstages_ff[1]\ : signal is "ARRAY_SINGLE";
  signal \syncstages_ff[2]\ : STD_LOGIC;
  attribute RTL_KEEP of \syncstages_ff[2]\ : signal is "true";
  attribute async_reg of \syncstages_ff[2]\ : signal is "true";
  attribute xpm_cdc of \syncstages_ff[2]\ : signal is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \syncstages_ff_reg[0][0]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][0]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][0]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][0]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][0]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][0]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][0]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][0]\ : label is "ARRAY_SINGLE";
begin
  async_path_bit <= src_in(0);
  dest_out(0) <= \syncstages_ff[2]\;
\syncstages_ff_reg[0][0]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit,
      Q => \syncstages_ff[0]\,
      R => '0'
    );
\syncstages_ff_reg[1][0]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\,
      Q => \syncstages_ff[1]\,
      R => '0'
    );
\syncstages_ff_reg[2][0]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\,
      Q => \syncstages_ff[2]\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1\ is
  port (
    src_clk : in STD_LOGIC;
    src_in : in STD_LOGIC_VECTOR ( 22 downto 0 );
    dest_clk : in STD_LOGIC;
    dest_out : out STD_LOGIC_VECTOR ( 22 downto 0 )
  );
  attribute DEST_SYNC_FF : integer;
  attribute DEST_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1\ : entity is 2;
  attribute INIT_SYNC_FF : integer;
  attribute INIT_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1\ : entity is 0;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1\ : entity is "xpm_cdc_array_single";
  attribute SIM_ASSERT_CHK : integer;
  attribute SIM_ASSERT_CHK of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1\ : entity is 0;
  attribute SRC_INPUT_REG : integer;
  attribute SRC_INPUT_REG of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1\ : entity is 0;
  attribute VERSION : integer;
  attribute VERSION of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1\ : entity is 0;
  attribute WIDTH : integer;
  attribute WIDTH of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1\ : entity is 23;
  attribute XPM_MODULE : string;
  attribute XPM_MODULE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1\ : entity is "TRUE";
  attribute keep_hierarchy : string;
  attribute keep_hierarchy of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1\ : entity is "true";
  attribute xpm_cdc : string;
  attribute xpm_cdc of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1\ : entity is "ARRAY_SINGLE";
end \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1\;

architecture STRUCTURE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1\ is
  signal async_path_bit : STD_LOGIC_VECTOR ( 22 downto 0 );
  signal \syncstages_ff[0]\ : STD_LOGIC_VECTOR ( 22 downto 0 );
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of \syncstages_ff[0]\ : signal is "true";
  attribute async_reg : string;
  attribute async_reg of \syncstages_ff[0]\ : signal is "true";
  attribute xpm_cdc of \syncstages_ff[0]\ : signal is "ARRAY_SINGLE";
  signal \syncstages_ff[1]\ : STD_LOGIC_VECTOR ( 22 downto 0 );
  attribute RTL_KEEP of \syncstages_ff[1]\ : signal is "true";
  attribute async_reg of \syncstages_ff[1]\ : signal is "true";
  attribute xpm_cdc of \syncstages_ff[1]\ : signal is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \syncstages_ff_reg[0][0]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][0]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][10]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][10]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][10]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][11]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][11]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][11]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][12]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][12]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][12]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][13]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][13]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][13]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][14]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][14]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][14]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][15]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][15]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][15]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][16]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][16]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][16]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][17]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][17]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][17]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][18]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][18]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][18]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][19]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][19]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][19]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][1]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][1]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][1]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][20]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][20]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][20]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][21]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][21]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][21]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][22]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][22]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][22]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][2]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][2]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][2]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][3]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][3]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][3]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][4]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][4]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][4]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][5]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][5]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][5]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][6]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][6]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][6]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][7]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][7]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][7]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][8]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][8]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][8]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][9]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][9]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][9]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][0]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][0]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][0]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][10]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][10]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][10]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][11]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][11]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][11]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][12]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][12]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][12]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][13]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][13]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][13]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][14]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][14]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][14]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][15]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][15]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][15]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][16]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][16]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][16]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][17]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][17]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][17]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][18]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][18]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][18]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][19]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][19]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][19]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][1]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][1]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][1]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][20]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][20]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][20]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][21]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][21]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][21]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][22]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][22]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][22]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][2]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][2]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][2]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][3]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][3]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][3]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][4]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][4]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][4]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][5]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][5]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][5]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][6]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][6]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][6]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][7]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][7]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][7]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][8]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][8]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][8]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][9]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][9]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][9]\ : label is "ARRAY_SINGLE";
begin
  async_path_bit(22 downto 0) <= src_in(22 downto 0);
  dest_out(22 downto 0) <= \syncstages_ff[1]\(22 downto 0);
\syncstages_ff_reg[0][0]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(0),
      Q => \syncstages_ff[0]\(0),
      R => '0'
    );
\syncstages_ff_reg[0][10]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(10),
      Q => \syncstages_ff[0]\(10),
      R => '0'
    );
\syncstages_ff_reg[0][11]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(11),
      Q => \syncstages_ff[0]\(11),
      R => '0'
    );
\syncstages_ff_reg[0][12]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(12),
      Q => \syncstages_ff[0]\(12),
      R => '0'
    );
\syncstages_ff_reg[0][13]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(13),
      Q => \syncstages_ff[0]\(13),
      R => '0'
    );
\syncstages_ff_reg[0][14]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(14),
      Q => \syncstages_ff[0]\(14),
      R => '0'
    );
\syncstages_ff_reg[0][15]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(15),
      Q => \syncstages_ff[0]\(15),
      R => '0'
    );
\syncstages_ff_reg[0][16]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(16),
      Q => \syncstages_ff[0]\(16),
      R => '0'
    );
\syncstages_ff_reg[0][17]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(17),
      Q => \syncstages_ff[0]\(17),
      R => '0'
    );
\syncstages_ff_reg[0][18]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(18),
      Q => \syncstages_ff[0]\(18),
      R => '0'
    );
\syncstages_ff_reg[0][19]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(19),
      Q => \syncstages_ff[0]\(19),
      R => '0'
    );
\syncstages_ff_reg[0][1]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(1),
      Q => \syncstages_ff[0]\(1),
      R => '0'
    );
\syncstages_ff_reg[0][20]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(20),
      Q => \syncstages_ff[0]\(20),
      R => '0'
    );
\syncstages_ff_reg[0][21]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(21),
      Q => \syncstages_ff[0]\(21),
      R => '0'
    );
\syncstages_ff_reg[0][22]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(22),
      Q => \syncstages_ff[0]\(22),
      R => '0'
    );
\syncstages_ff_reg[0][2]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(2),
      Q => \syncstages_ff[0]\(2),
      R => '0'
    );
\syncstages_ff_reg[0][3]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(3),
      Q => \syncstages_ff[0]\(3),
      R => '0'
    );
\syncstages_ff_reg[0][4]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(4),
      Q => \syncstages_ff[0]\(4),
      R => '0'
    );
\syncstages_ff_reg[0][5]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(5),
      Q => \syncstages_ff[0]\(5),
      R => '0'
    );
\syncstages_ff_reg[0][6]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(6),
      Q => \syncstages_ff[0]\(6),
      R => '0'
    );
\syncstages_ff_reg[0][7]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(7),
      Q => \syncstages_ff[0]\(7),
      R => '0'
    );
\syncstages_ff_reg[0][8]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(8),
      Q => \syncstages_ff[0]\(8),
      R => '0'
    );
\syncstages_ff_reg[0][9]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(9),
      Q => \syncstages_ff[0]\(9),
      R => '0'
    );
\syncstages_ff_reg[1][0]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(0),
      Q => \syncstages_ff[1]\(0),
      R => '0'
    );
\syncstages_ff_reg[1][10]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(10),
      Q => \syncstages_ff[1]\(10),
      R => '0'
    );
\syncstages_ff_reg[1][11]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(11),
      Q => \syncstages_ff[1]\(11),
      R => '0'
    );
\syncstages_ff_reg[1][12]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(12),
      Q => \syncstages_ff[1]\(12),
      R => '0'
    );
\syncstages_ff_reg[1][13]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(13),
      Q => \syncstages_ff[1]\(13),
      R => '0'
    );
\syncstages_ff_reg[1][14]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(14),
      Q => \syncstages_ff[1]\(14),
      R => '0'
    );
\syncstages_ff_reg[1][15]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(15),
      Q => \syncstages_ff[1]\(15),
      R => '0'
    );
\syncstages_ff_reg[1][16]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(16),
      Q => \syncstages_ff[1]\(16),
      R => '0'
    );
\syncstages_ff_reg[1][17]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(17),
      Q => \syncstages_ff[1]\(17),
      R => '0'
    );
\syncstages_ff_reg[1][18]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(18),
      Q => \syncstages_ff[1]\(18),
      R => '0'
    );
\syncstages_ff_reg[1][19]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(19),
      Q => \syncstages_ff[1]\(19),
      R => '0'
    );
\syncstages_ff_reg[1][1]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(1),
      Q => \syncstages_ff[1]\(1),
      R => '0'
    );
\syncstages_ff_reg[1][20]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(20),
      Q => \syncstages_ff[1]\(20),
      R => '0'
    );
\syncstages_ff_reg[1][21]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(21),
      Q => \syncstages_ff[1]\(21),
      R => '0'
    );
\syncstages_ff_reg[1][22]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(22),
      Q => \syncstages_ff[1]\(22),
      R => '0'
    );
\syncstages_ff_reg[1][2]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(2),
      Q => \syncstages_ff[1]\(2),
      R => '0'
    );
\syncstages_ff_reg[1][3]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(3),
      Q => \syncstages_ff[1]\(3),
      R => '0'
    );
\syncstages_ff_reg[1][4]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(4),
      Q => \syncstages_ff[1]\(4),
      R => '0'
    );
\syncstages_ff_reg[1][5]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(5),
      Q => \syncstages_ff[1]\(5),
      R => '0'
    );
\syncstages_ff_reg[1][6]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(6),
      Q => \syncstages_ff[1]\(6),
      R => '0'
    );
\syncstages_ff_reg[1][7]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(7),
      Q => \syncstages_ff[1]\(7),
      R => '0'
    );
\syncstages_ff_reg[1][8]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(8),
      Q => \syncstages_ff[1]\(8),
      R => '0'
    );
\syncstages_ff_reg[1][9]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(9),
      Q => \syncstages_ff[1]\(9),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__10\ is
  port (
    src_clk : in STD_LOGIC;
    src_in : in STD_LOGIC_VECTOR ( 22 downto 0 );
    dest_clk : in STD_LOGIC;
    dest_out : out STD_LOGIC_VECTOR ( 22 downto 0 )
  );
  attribute DEST_SYNC_FF : integer;
  attribute DEST_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__10\ : entity is 2;
  attribute INIT_SYNC_FF : integer;
  attribute INIT_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__10\ : entity is 0;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__10\ : entity is "xpm_cdc_array_single";
  attribute SIM_ASSERT_CHK : integer;
  attribute SIM_ASSERT_CHK of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__10\ : entity is 0;
  attribute SRC_INPUT_REG : integer;
  attribute SRC_INPUT_REG of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__10\ : entity is 0;
  attribute VERSION : integer;
  attribute VERSION of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__10\ : entity is 0;
  attribute WIDTH : integer;
  attribute WIDTH of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__10\ : entity is 23;
  attribute XPM_MODULE : string;
  attribute XPM_MODULE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__10\ : entity is "TRUE";
  attribute keep_hierarchy : string;
  attribute keep_hierarchy of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__10\ : entity is "true";
  attribute xpm_cdc : string;
  attribute xpm_cdc of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__10\ : entity is "ARRAY_SINGLE";
end \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__10\;

architecture STRUCTURE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__10\ is
  signal async_path_bit : STD_LOGIC_VECTOR ( 22 downto 0 );
  signal \syncstages_ff[0]\ : STD_LOGIC_VECTOR ( 22 downto 0 );
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of \syncstages_ff[0]\ : signal is "true";
  attribute async_reg : string;
  attribute async_reg of \syncstages_ff[0]\ : signal is "true";
  attribute xpm_cdc of \syncstages_ff[0]\ : signal is "ARRAY_SINGLE";
  signal \syncstages_ff[1]\ : STD_LOGIC_VECTOR ( 22 downto 0 );
  attribute RTL_KEEP of \syncstages_ff[1]\ : signal is "true";
  attribute async_reg of \syncstages_ff[1]\ : signal is "true";
  attribute xpm_cdc of \syncstages_ff[1]\ : signal is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \syncstages_ff_reg[0][0]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][0]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][10]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][10]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][10]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][11]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][11]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][11]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][12]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][12]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][12]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][13]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][13]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][13]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][14]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][14]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][14]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][15]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][15]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][15]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][16]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][16]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][16]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][17]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][17]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][17]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][18]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][18]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][18]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][19]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][19]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][19]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][1]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][1]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][1]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][20]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][20]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][20]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][21]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][21]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][21]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][22]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][22]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][22]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][2]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][2]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][2]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][3]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][3]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][3]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][4]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][4]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][4]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][5]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][5]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][5]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][6]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][6]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][6]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][7]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][7]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][7]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][8]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][8]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][8]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][9]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][9]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][9]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][0]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][0]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][0]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][10]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][10]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][10]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][11]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][11]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][11]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][12]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][12]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][12]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][13]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][13]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][13]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][14]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][14]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][14]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][15]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][15]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][15]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][16]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][16]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][16]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][17]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][17]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][17]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][18]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][18]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][18]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][19]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][19]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][19]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][1]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][1]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][1]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][20]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][20]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][20]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][21]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][21]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][21]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][22]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][22]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][22]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][2]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][2]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][2]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][3]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][3]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][3]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][4]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][4]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][4]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][5]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][5]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][5]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][6]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][6]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][6]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][7]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][7]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][7]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][8]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][8]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][8]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][9]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][9]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][9]\ : label is "ARRAY_SINGLE";
begin
  async_path_bit(22 downto 0) <= src_in(22 downto 0);
  dest_out(22 downto 0) <= \syncstages_ff[1]\(22 downto 0);
\syncstages_ff_reg[0][0]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(0),
      Q => \syncstages_ff[0]\(0),
      R => '0'
    );
\syncstages_ff_reg[0][10]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(10),
      Q => \syncstages_ff[0]\(10),
      R => '0'
    );
\syncstages_ff_reg[0][11]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(11),
      Q => \syncstages_ff[0]\(11),
      R => '0'
    );
\syncstages_ff_reg[0][12]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(12),
      Q => \syncstages_ff[0]\(12),
      R => '0'
    );
\syncstages_ff_reg[0][13]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(13),
      Q => \syncstages_ff[0]\(13),
      R => '0'
    );
\syncstages_ff_reg[0][14]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(14),
      Q => \syncstages_ff[0]\(14),
      R => '0'
    );
\syncstages_ff_reg[0][15]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(15),
      Q => \syncstages_ff[0]\(15),
      R => '0'
    );
\syncstages_ff_reg[0][16]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(16),
      Q => \syncstages_ff[0]\(16),
      R => '0'
    );
\syncstages_ff_reg[0][17]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(17),
      Q => \syncstages_ff[0]\(17),
      R => '0'
    );
\syncstages_ff_reg[0][18]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(18),
      Q => \syncstages_ff[0]\(18),
      R => '0'
    );
\syncstages_ff_reg[0][19]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(19),
      Q => \syncstages_ff[0]\(19),
      R => '0'
    );
\syncstages_ff_reg[0][1]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(1),
      Q => \syncstages_ff[0]\(1),
      R => '0'
    );
\syncstages_ff_reg[0][20]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(20),
      Q => \syncstages_ff[0]\(20),
      R => '0'
    );
\syncstages_ff_reg[0][21]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(21),
      Q => \syncstages_ff[0]\(21),
      R => '0'
    );
\syncstages_ff_reg[0][22]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(22),
      Q => \syncstages_ff[0]\(22),
      R => '0'
    );
\syncstages_ff_reg[0][2]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(2),
      Q => \syncstages_ff[0]\(2),
      R => '0'
    );
\syncstages_ff_reg[0][3]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(3),
      Q => \syncstages_ff[0]\(3),
      R => '0'
    );
\syncstages_ff_reg[0][4]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(4),
      Q => \syncstages_ff[0]\(4),
      R => '0'
    );
\syncstages_ff_reg[0][5]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(5),
      Q => \syncstages_ff[0]\(5),
      R => '0'
    );
\syncstages_ff_reg[0][6]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(6),
      Q => \syncstages_ff[0]\(6),
      R => '0'
    );
\syncstages_ff_reg[0][7]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(7),
      Q => \syncstages_ff[0]\(7),
      R => '0'
    );
\syncstages_ff_reg[0][8]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(8),
      Q => \syncstages_ff[0]\(8),
      R => '0'
    );
\syncstages_ff_reg[0][9]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(9),
      Q => \syncstages_ff[0]\(9),
      R => '0'
    );
\syncstages_ff_reg[1][0]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(0),
      Q => \syncstages_ff[1]\(0),
      R => '0'
    );
\syncstages_ff_reg[1][10]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(10),
      Q => \syncstages_ff[1]\(10),
      R => '0'
    );
\syncstages_ff_reg[1][11]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(11),
      Q => \syncstages_ff[1]\(11),
      R => '0'
    );
\syncstages_ff_reg[1][12]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(12),
      Q => \syncstages_ff[1]\(12),
      R => '0'
    );
\syncstages_ff_reg[1][13]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(13),
      Q => \syncstages_ff[1]\(13),
      R => '0'
    );
\syncstages_ff_reg[1][14]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(14),
      Q => \syncstages_ff[1]\(14),
      R => '0'
    );
\syncstages_ff_reg[1][15]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(15),
      Q => \syncstages_ff[1]\(15),
      R => '0'
    );
\syncstages_ff_reg[1][16]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(16),
      Q => \syncstages_ff[1]\(16),
      R => '0'
    );
\syncstages_ff_reg[1][17]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(17),
      Q => \syncstages_ff[1]\(17),
      R => '0'
    );
\syncstages_ff_reg[1][18]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(18),
      Q => \syncstages_ff[1]\(18),
      R => '0'
    );
\syncstages_ff_reg[1][19]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(19),
      Q => \syncstages_ff[1]\(19),
      R => '0'
    );
\syncstages_ff_reg[1][1]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(1),
      Q => \syncstages_ff[1]\(1),
      R => '0'
    );
\syncstages_ff_reg[1][20]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(20),
      Q => \syncstages_ff[1]\(20),
      R => '0'
    );
\syncstages_ff_reg[1][21]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(21),
      Q => \syncstages_ff[1]\(21),
      R => '0'
    );
\syncstages_ff_reg[1][22]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(22),
      Q => \syncstages_ff[1]\(22),
      R => '0'
    );
\syncstages_ff_reg[1][2]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(2),
      Q => \syncstages_ff[1]\(2),
      R => '0'
    );
\syncstages_ff_reg[1][3]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(3),
      Q => \syncstages_ff[1]\(3),
      R => '0'
    );
\syncstages_ff_reg[1][4]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(4),
      Q => \syncstages_ff[1]\(4),
      R => '0'
    );
\syncstages_ff_reg[1][5]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(5),
      Q => \syncstages_ff[1]\(5),
      R => '0'
    );
\syncstages_ff_reg[1][6]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(6),
      Q => \syncstages_ff[1]\(6),
      R => '0'
    );
\syncstages_ff_reg[1][7]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(7),
      Q => \syncstages_ff[1]\(7),
      R => '0'
    );
\syncstages_ff_reg[1][8]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(8),
      Q => \syncstages_ff[1]\(8),
      R => '0'
    );
\syncstages_ff_reg[1][9]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(9),
      Q => \syncstages_ff[1]\(9),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__6\ is
  port (
    src_clk : in STD_LOGIC;
    src_in : in STD_LOGIC_VECTOR ( 22 downto 0 );
    dest_clk : in STD_LOGIC;
    dest_out : out STD_LOGIC_VECTOR ( 22 downto 0 )
  );
  attribute DEST_SYNC_FF : integer;
  attribute DEST_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__6\ : entity is 2;
  attribute INIT_SYNC_FF : integer;
  attribute INIT_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__6\ : entity is 0;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__6\ : entity is "xpm_cdc_array_single";
  attribute SIM_ASSERT_CHK : integer;
  attribute SIM_ASSERT_CHK of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__6\ : entity is 0;
  attribute SRC_INPUT_REG : integer;
  attribute SRC_INPUT_REG of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__6\ : entity is 0;
  attribute VERSION : integer;
  attribute VERSION of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__6\ : entity is 0;
  attribute WIDTH : integer;
  attribute WIDTH of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__6\ : entity is 23;
  attribute XPM_MODULE : string;
  attribute XPM_MODULE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__6\ : entity is "TRUE";
  attribute keep_hierarchy : string;
  attribute keep_hierarchy of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__6\ : entity is "true";
  attribute xpm_cdc : string;
  attribute xpm_cdc of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__6\ : entity is "ARRAY_SINGLE";
end \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__6\;

architecture STRUCTURE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__6\ is
  signal async_path_bit : STD_LOGIC_VECTOR ( 22 downto 0 );
  signal \syncstages_ff[0]\ : STD_LOGIC_VECTOR ( 22 downto 0 );
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of \syncstages_ff[0]\ : signal is "true";
  attribute async_reg : string;
  attribute async_reg of \syncstages_ff[0]\ : signal is "true";
  attribute xpm_cdc of \syncstages_ff[0]\ : signal is "ARRAY_SINGLE";
  signal \syncstages_ff[1]\ : STD_LOGIC_VECTOR ( 22 downto 0 );
  attribute RTL_KEEP of \syncstages_ff[1]\ : signal is "true";
  attribute async_reg of \syncstages_ff[1]\ : signal is "true";
  attribute xpm_cdc of \syncstages_ff[1]\ : signal is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \syncstages_ff_reg[0][0]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][0]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][10]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][10]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][10]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][11]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][11]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][11]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][12]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][12]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][12]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][13]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][13]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][13]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][14]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][14]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][14]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][15]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][15]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][15]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][16]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][16]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][16]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][17]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][17]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][17]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][18]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][18]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][18]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][19]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][19]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][19]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][1]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][1]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][1]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][20]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][20]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][20]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][21]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][21]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][21]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][22]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][22]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][22]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][2]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][2]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][2]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][3]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][3]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][3]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][4]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][4]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][4]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][5]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][5]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][5]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][6]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][6]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][6]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][7]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][7]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][7]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][8]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][8]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][8]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][9]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][9]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][9]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][0]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][0]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][0]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][10]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][10]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][10]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][11]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][11]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][11]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][12]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][12]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][12]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][13]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][13]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][13]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][14]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][14]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][14]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][15]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][15]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][15]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][16]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][16]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][16]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][17]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][17]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][17]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][18]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][18]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][18]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][19]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][19]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][19]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][1]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][1]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][1]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][20]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][20]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][20]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][21]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][21]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][21]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][22]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][22]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][22]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][2]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][2]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][2]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][3]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][3]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][3]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][4]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][4]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][4]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][5]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][5]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][5]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][6]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][6]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][6]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][7]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][7]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][7]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][8]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][8]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][8]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][9]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][9]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][9]\ : label is "ARRAY_SINGLE";
begin
  async_path_bit(22 downto 0) <= src_in(22 downto 0);
  dest_out(22 downto 0) <= \syncstages_ff[1]\(22 downto 0);
\syncstages_ff_reg[0][0]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(0),
      Q => \syncstages_ff[0]\(0),
      R => '0'
    );
\syncstages_ff_reg[0][10]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(10),
      Q => \syncstages_ff[0]\(10),
      R => '0'
    );
\syncstages_ff_reg[0][11]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(11),
      Q => \syncstages_ff[0]\(11),
      R => '0'
    );
\syncstages_ff_reg[0][12]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(12),
      Q => \syncstages_ff[0]\(12),
      R => '0'
    );
\syncstages_ff_reg[0][13]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(13),
      Q => \syncstages_ff[0]\(13),
      R => '0'
    );
\syncstages_ff_reg[0][14]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(14),
      Q => \syncstages_ff[0]\(14),
      R => '0'
    );
\syncstages_ff_reg[0][15]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(15),
      Q => \syncstages_ff[0]\(15),
      R => '0'
    );
\syncstages_ff_reg[0][16]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(16),
      Q => \syncstages_ff[0]\(16),
      R => '0'
    );
\syncstages_ff_reg[0][17]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(17),
      Q => \syncstages_ff[0]\(17),
      R => '0'
    );
\syncstages_ff_reg[0][18]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(18),
      Q => \syncstages_ff[0]\(18),
      R => '0'
    );
\syncstages_ff_reg[0][19]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(19),
      Q => \syncstages_ff[0]\(19),
      R => '0'
    );
\syncstages_ff_reg[0][1]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(1),
      Q => \syncstages_ff[0]\(1),
      R => '0'
    );
\syncstages_ff_reg[0][20]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(20),
      Q => \syncstages_ff[0]\(20),
      R => '0'
    );
\syncstages_ff_reg[0][21]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(21),
      Q => \syncstages_ff[0]\(21),
      R => '0'
    );
\syncstages_ff_reg[0][22]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(22),
      Q => \syncstages_ff[0]\(22),
      R => '0'
    );
\syncstages_ff_reg[0][2]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(2),
      Q => \syncstages_ff[0]\(2),
      R => '0'
    );
\syncstages_ff_reg[0][3]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(3),
      Q => \syncstages_ff[0]\(3),
      R => '0'
    );
\syncstages_ff_reg[0][4]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(4),
      Q => \syncstages_ff[0]\(4),
      R => '0'
    );
\syncstages_ff_reg[0][5]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(5),
      Q => \syncstages_ff[0]\(5),
      R => '0'
    );
\syncstages_ff_reg[0][6]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(6),
      Q => \syncstages_ff[0]\(6),
      R => '0'
    );
\syncstages_ff_reg[0][7]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(7),
      Q => \syncstages_ff[0]\(7),
      R => '0'
    );
\syncstages_ff_reg[0][8]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(8),
      Q => \syncstages_ff[0]\(8),
      R => '0'
    );
\syncstages_ff_reg[0][9]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(9),
      Q => \syncstages_ff[0]\(9),
      R => '0'
    );
\syncstages_ff_reg[1][0]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(0),
      Q => \syncstages_ff[1]\(0),
      R => '0'
    );
\syncstages_ff_reg[1][10]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(10),
      Q => \syncstages_ff[1]\(10),
      R => '0'
    );
\syncstages_ff_reg[1][11]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(11),
      Q => \syncstages_ff[1]\(11),
      R => '0'
    );
\syncstages_ff_reg[1][12]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(12),
      Q => \syncstages_ff[1]\(12),
      R => '0'
    );
\syncstages_ff_reg[1][13]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(13),
      Q => \syncstages_ff[1]\(13),
      R => '0'
    );
\syncstages_ff_reg[1][14]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(14),
      Q => \syncstages_ff[1]\(14),
      R => '0'
    );
\syncstages_ff_reg[1][15]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(15),
      Q => \syncstages_ff[1]\(15),
      R => '0'
    );
\syncstages_ff_reg[1][16]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(16),
      Q => \syncstages_ff[1]\(16),
      R => '0'
    );
\syncstages_ff_reg[1][17]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(17),
      Q => \syncstages_ff[1]\(17),
      R => '0'
    );
\syncstages_ff_reg[1][18]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(18),
      Q => \syncstages_ff[1]\(18),
      R => '0'
    );
\syncstages_ff_reg[1][19]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(19),
      Q => \syncstages_ff[1]\(19),
      R => '0'
    );
\syncstages_ff_reg[1][1]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(1),
      Q => \syncstages_ff[1]\(1),
      R => '0'
    );
\syncstages_ff_reg[1][20]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(20),
      Q => \syncstages_ff[1]\(20),
      R => '0'
    );
\syncstages_ff_reg[1][21]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(21),
      Q => \syncstages_ff[1]\(21),
      R => '0'
    );
\syncstages_ff_reg[1][22]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(22),
      Q => \syncstages_ff[1]\(22),
      R => '0'
    );
\syncstages_ff_reg[1][2]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(2),
      Q => \syncstages_ff[1]\(2),
      R => '0'
    );
\syncstages_ff_reg[1][3]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(3),
      Q => \syncstages_ff[1]\(3),
      R => '0'
    );
\syncstages_ff_reg[1][4]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(4),
      Q => \syncstages_ff[1]\(4),
      R => '0'
    );
\syncstages_ff_reg[1][5]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(5),
      Q => \syncstages_ff[1]\(5),
      R => '0'
    );
\syncstages_ff_reg[1][6]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(6),
      Q => \syncstages_ff[1]\(6),
      R => '0'
    );
\syncstages_ff_reg[1][7]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(7),
      Q => \syncstages_ff[1]\(7),
      R => '0'
    );
\syncstages_ff_reg[1][8]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(8),
      Q => \syncstages_ff[1]\(8),
      R => '0'
    );
\syncstages_ff_reg[1][9]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(9),
      Q => \syncstages_ff[1]\(9),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__7\ is
  port (
    src_clk : in STD_LOGIC;
    src_in : in STD_LOGIC_VECTOR ( 22 downto 0 );
    dest_clk : in STD_LOGIC;
    dest_out : out STD_LOGIC_VECTOR ( 22 downto 0 )
  );
  attribute DEST_SYNC_FF : integer;
  attribute DEST_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__7\ : entity is 2;
  attribute INIT_SYNC_FF : integer;
  attribute INIT_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__7\ : entity is 0;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__7\ : entity is "xpm_cdc_array_single";
  attribute SIM_ASSERT_CHK : integer;
  attribute SIM_ASSERT_CHK of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__7\ : entity is 0;
  attribute SRC_INPUT_REG : integer;
  attribute SRC_INPUT_REG of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__7\ : entity is 0;
  attribute VERSION : integer;
  attribute VERSION of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__7\ : entity is 0;
  attribute WIDTH : integer;
  attribute WIDTH of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__7\ : entity is 23;
  attribute XPM_MODULE : string;
  attribute XPM_MODULE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__7\ : entity is "TRUE";
  attribute keep_hierarchy : string;
  attribute keep_hierarchy of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__7\ : entity is "true";
  attribute xpm_cdc : string;
  attribute xpm_cdc of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__7\ : entity is "ARRAY_SINGLE";
end \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__7\;

architecture STRUCTURE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__7\ is
  signal async_path_bit : STD_LOGIC_VECTOR ( 22 downto 0 );
  signal \syncstages_ff[0]\ : STD_LOGIC_VECTOR ( 22 downto 0 );
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of \syncstages_ff[0]\ : signal is "true";
  attribute async_reg : string;
  attribute async_reg of \syncstages_ff[0]\ : signal is "true";
  attribute xpm_cdc of \syncstages_ff[0]\ : signal is "ARRAY_SINGLE";
  signal \syncstages_ff[1]\ : STD_LOGIC_VECTOR ( 22 downto 0 );
  attribute RTL_KEEP of \syncstages_ff[1]\ : signal is "true";
  attribute async_reg of \syncstages_ff[1]\ : signal is "true";
  attribute xpm_cdc of \syncstages_ff[1]\ : signal is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \syncstages_ff_reg[0][0]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][0]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][10]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][10]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][10]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][11]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][11]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][11]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][12]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][12]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][12]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][13]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][13]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][13]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][14]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][14]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][14]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][15]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][15]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][15]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][16]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][16]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][16]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][17]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][17]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][17]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][18]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][18]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][18]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][19]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][19]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][19]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][1]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][1]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][1]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][20]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][20]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][20]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][21]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][21]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][21]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][22]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][22]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][22]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][2]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][2]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][2]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][3]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][3]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][3]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][4]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][4]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][4]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][5]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][5]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][5]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][6]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][6]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][6]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][7]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][7]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][7]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][8]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][8]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][8]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][9]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][9]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][9]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][0]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][0]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][0]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][10]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][10]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][10]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][11]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][11]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][11]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][12]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][12]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][12]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][13]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][13]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][13]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][14]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][14]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][14]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][15]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][15]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][15]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][16]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][16]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][16]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][17]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][17]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][17]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][18]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][18]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][18]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][19]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][19]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][19]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][1]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][1]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][1]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][20]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][20]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][20]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][21]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][21]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][21]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][22]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][22]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][22]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][2]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][2]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][2]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][3]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][3]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][3]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][4]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][4]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][4]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][5]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][5]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][5]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][6]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][6]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][6]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][7]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][7]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][7]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][8]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][8]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][8]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][9]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][9]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][9]\ : label is "ARRAY_SINGLE";
begin
  async_path_bit(22 downto 0) <= src_in(22 downto 0);
  dest_out(22 downto 0) <= \syncstages_ff[1]\(22 downto 0);
\syncstages_ff_reg[0][0]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(0),
      Q => \syncstages_ff[0]\(0),
      R => '0'
    );
\syncstages_ff_reg[0][10]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(10),
      Q => \syncstages_ff[0]\(10),
      R => '0'
    );
\syncstages_ff_reg[0][11]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(11),
      Q => \syncstages_ff[0]\(11),
      R => '0'
    );
\syncstages_ff_reg[0][12]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(12),
      Q => \syncstages_ff[0]\(12),
      R => '0'
    );
\syncstages_ff_reg[0][13]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(13),
      Q => \syncstages_ff[0]\(13),
      R => '0'
    );
\syncstages_ff_reg[0][14]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(14),
      Q => \syncstages_ff[0]\(14),
      R => '0'
    );
\syncstages_ff_reg[0][15]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(15),
      Q => \syncstages_ff[0]\(15),
      R => '0'
    );
\syncstages_ff_reg[0][16]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(16),
      Q => \syncstages_ff[0]\(16),
      R => '0'
    );
\syncstages_ff_reg[0][17]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(17),
      Q => \syncstages_ff[0]\(17),
      R => '0'
    );
\syncstages_ff_reg[0][18]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(18),
      Q => \syncstages_ff[0]\(18),
      R => '0'
    );
\syncstages_ff_reg[0][19]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(19),
      Q => \syncstages_ff[0]\(19),
      R => '0'
    );
\syncstages_ff_reg[0][1]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(1),
      Q => \syncstages_ff[0]\(1),
      R => '0'
    );
\syncstages_ff_reg[0][20]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(20),
      Q => \syncstages_ff[0]\(20),
      R => '0'
    );
\syncstages_ff_reg[0][21]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(21),
      Q => \syncstages_ff[0]\(21),
      R => '0'
    );
\syncstages_ff_reg[0][22]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(22),
      Q => \syncstages_ff[0]\(22),
      R => '0'
    );
\syncstages_ff_reg[0][2]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(2),
      Q => \syncstages_ff[0]\(2),
      R => '0'
    );
\syncstages_ff_reg[0][3]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(3),
      Q => \syncstages_ff[0]\(3),
      R => '0'
    );
\syncstages_ff_reg[0][4]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(4),
      Q => \syncstages_ff[0]\(4),
      R => '0'
    );
\syncstages_ff_reg[0][5]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(5),
      Q => \syncstages_ff[0]\(5),
      R => '0'
    );
\syncstages_ff_reg[0][6]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(6),
      Q => \syncstages_ff[0]\(6),
      R => '0'
    );
\syncstages_ff_reg[0][7]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(7),
      Q => \syncstages_ff[0]\(7),
      R => '0'
    );
\syncstages_ff_reg[0][8]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(8),
      Q => \syncstages_ff[0]\(8),
      R => '0'
    );
\syncstages_ff_reg[0][9]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(9),
      Q => \syncstages_ff[0]\(9),
      R => '0'
    );
\syncstages_ff_reg[1][0]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(0),
      Q => \syncstages_ff[1]\(0),
      R => '0'
    );
\syncstages_ff_reg[1][10]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(10),
      Q => \syncstages_ff[1]\(10),
      R => '0'
    );
\syncstages_ff_reg[1][11]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(11),
      Q => \syncstages_ff[1]\(11),
      R => '0'
    );
\syncstages_ff_reg[1][12]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(12),
      Q => \syncstages_ff[1]\(12),
      R => '0'
    );
\syncstages_ff_reg[1][13]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(13),
      Q => \syncstages_ff[1]\(13),
      R => '0'
    );
\syncstages_ff_reg[1][14]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(14),
      Q => \syncstages_ff[1]\(14),
      R => '0'
    );
\syncstages_ff_reg[1][15]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(15),
      Q => \syncstages_ff[1]\(15),
      R => '0'
    );
\syncstages_ff_reg[1][16]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(16),
      Q => \syncstages_ff[1]\(16),
      R => '0'
    );
\syncstages_ff_reg[1][17]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(17),
      Q => \syncstages_ff[1]\(17),
      R => '0'
    );
\syncstages_ff_reg[1][18]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(18),
      Q => \syncstages_ff[1]\(18),
      R => '0'
    );
\syncstages_ff_reg[1][19]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(19),
      Q => \syncstages_ff[1]\(19),
      R => '0'
    );
\syncstages_ff_reg[1][1]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(1),
      Q => \syncstages_ff[1]\(1),
      R => '0'
    );
\syncstages_ff_reg[1][20]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(20),
      Q => \syncstages_ff[1]\(20),
      R => '0'
    );
\syncstages_ff_reg[1][21]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(21),
      Q => \syncstages_ff[1]\(21),
      R => '0'
    );
\syncstages_ff_reg[1][22]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(22),
      Q => \syncstages_ff[1]\(22),
      R => '0'
    );
\syncstages_ff_reg[1][2]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(2),
      Q => \syncstages_ff[1]\(2),
      R => '0'
    );
\syncstages_ff_reg[1][3]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(3),
      Q => \syncstages_ff[1]\(3),
      R => '0'
    );
\syncstages_ff_reg[1][4]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(4),
      Q => \syncstages_ff[1]\(4),
      R => '0'
    );
\syncstages_ff_reg[1][5]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(5),
      Q => \syncstages_ff[1]\(5),
      R => '0'
    );
\syncstages_ff_reg[1][6]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(6),
      Q => \syncstages_ff[1]\(6),
      R => '0'
    );
\syncstages_ff_reg[1][7]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(7),
      Q => \syncstages_ff[1]\(7),
      R => '0'
    );
\syncstages_ff_reg[1][8]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(8),
      Q => \syncstages_ff[1]\(8),
      R => '0'
    );
\syncstages_ff_reg[1][9]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(9),
      Q => \syncstages_ff[1]\(9),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__8\ is
  port (
    src_clk : in STD_LOGIC;
    src_in : in STD_LOGIC_VECTOR ( 22 downto 0 );
    dest_clk : in STD_LOGIC;
    dest_out : out STD_LOGIC_VECTOR ( 22 downto 0 )
  );
  attribute DEST_SYNC_FF : integer;
  attribute DEST_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__8\ : entity is 2;
  attribute INIT_SYNC_FF : integer;
  attribute INIT_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__8\ : entity is 0;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__8\ : entity is "xpm_cdc_array_single";
  attribute SIM_ASSERT_CHK : integer;
  attribute SIM_ASSERT_CHK of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__8\ : entity is 0;
  attribute SRC_INPUT_REG : integer;
  attribute SRC_INPUT_REG of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__8\ : entity is 0;
  attribute VERSION : integer;
  attribute VERSION of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__8\ : entity is 0;
  attribute WIDTH : integer;
  attribute WIDTH of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__8\ : entity is 23;
  attribute XPM_MODULE : string;
  attribute XPM_MODULE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__8\ : entity is "TRUE";
  attribute keep_hierarchy : string;
  attribute keep_hierarchy of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__8\ : entity is "true";
  attribute xpm_cdc : string;
  attribute xpm_cdc of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__8\ : entity is "ARRAY_SINGLE";
end \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__8\;

architecture STRUCTURE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__8\ is
  signal async_path_bit : STD_LOGIC_VECTOR ( 22 downto 0 );
  signal \syncstages_ff[0]\ : STD_LOGIC_VECTOR ( 22 downto 0 );
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of \syncstages_ff[0]\ : signal is "true";
  attribute async_reg : string;
  attribute async_reg of \syncstages_ff[0]\ : signal is "true";
  attribute xpm_cdc of \syncstages_ff[0]\ : signal is "ARRAY_SINGLE";
  signal \syncstages_ff[1]\ : STD_LOGIC_VECTOR ( 22 downto 0 );
  attribute RTL_KEEP of \syncstages_ff[1]\ : signal is "true";
  attribute async_reg of \syncstages_ff[1]\ : signal is "true";
  attribute xpm_cdc of \syncstages_ff[1]\ : signal is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \syncstages_ff_reg[0][0]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][0]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][10]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][10]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][10]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][11]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][11]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][11]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][12]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][12]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][12]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][13]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][13]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][13]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][14]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][14]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][14]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][15]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][15]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][15]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][16]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][16]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][16]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][17]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][17]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][17]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][18]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][18]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][18]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][19]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][19]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][19]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][1]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][1]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][1]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][20]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][20]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][20]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][21]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][21]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][21]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][22]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][22]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][22]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][2]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][2]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][2]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][3]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][3]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][3]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][4]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][4]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][4]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][5]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][5]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][5]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][6]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][6]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][6]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][7]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][7]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][7]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][8]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][8]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][8]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][9]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][9]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][9]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][0]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][0]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][0]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][10]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][10]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][10]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][11]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][11]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][11]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][12]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][12]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][12]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][13]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][13]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][13]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][14]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][14]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][14]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][15]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][15]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][15]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][16]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][16]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][16]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][17]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][17]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][17]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][18]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][18]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][18]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][19]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][19]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][19]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][1]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][1]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][1]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][20]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][20]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][20]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][21]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][21]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][21]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][22]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][22]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][22]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][2]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][2]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][2]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][3]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][3]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][3]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][4]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][4]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][4]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][5]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][5]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][5]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][6]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][6]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][6]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][7]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][7]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][7]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][8]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][8]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][8]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][9]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][9]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][9]\ : label is "ARRAY_SINGLE";
begin
  async_path_bit(22 downto 0) <= src_in(22 downto 0);
  dest_out(22 downto 0) <= \syncstages_ff[1]\(22 downto 0);
\syncstages_ff_reg[0][0]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(0),
      Q => \syncstages_ff[0]\(0),
      R => '0'
    );
\syncstages_ff_reg[0][10]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(10),
      Q => \syncstages_ff[0]\(10),
      R => '0'
    );
\syncstages_ff_reg[0][11]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(11),
      Q => \syncstages_ff[0]\(11),
      R => '0'
    );
\syncstages_ff_reg[0][12]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(12),
      Q => \syncstages_ff[0]\(12),
      R => '0'
    );
\syncstages_ff_reg[0][13]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(13),
      Q => \syncstages_ff[0]\(13),
      R => '0'
    );
\syncstages_ff_reg[0][14]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(14),
      Q => \syncstages_ff[0]\(14),
      R => '0'
    );
\syncstages_ff_reg[0][15]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(15),
      Q => \syncstages_ff[0]\(15),
      R => '0'
    );
\syncstages_ff_reg[0][16]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(16),
      Q => \syncstages_ff[0]\(16),
      R => '0'
    );
\syncstages_ff_reg[0][17]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(17),
      Q => \syncstages_ff[0]\(17),
      R => '0'
    );
\syncstages_ff_reg[0][18]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(18),
      Q => \syncstages_ff[0]\(18),
      R => '0'
    );
\syncstages_ff_reg[0][19]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(19),
      Q => \syncstages_ff[0]\(19),
      R => '0'
    );
\syncstages_ff_reg[0][1]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(1),
      Q => \syncstages_ff[0]\(1),
      R => '0'
    );
\syncstages_ff_reg[0][20]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(20),
      Q => \syncstages_ff[0]\(20),
      R => '0'
    );
\syncstages_ff_reg[0][21]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(21),
      Q => \syncstages_ff[0]\(21),
      R => '0'
    );
\syncstages_ff_reg[0][22]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(22),
      Q => \syncstages_ff[0]\(22),
      R => '0'
    );
\syncstages_ff_reg[0][2]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(2),
      Q => \syncstages_ff[0]\(2),
      R => '0'
    );
\syncstages_ff_reg[0][3]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(3),
      Q => \syncstages_ff[0]\(3),
      R => '0'
    );
\syncstages_ff_reg[0][4]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(4),
      Q => \syncstages_ff[0]\(4),
      R => '0'
    );
\syncstages_ff_reg[0][5]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(5),
      Q => \syncstages_ff[0]\(5),
      R => '0'
    );
\syncstages_ff_reg[0][6]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(6),
      Q => \syncstages_ff[0]\(6),
      R => '0'
    );
\syncstages_ff_reg[0][7]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(7),
      Q => \syncstages_ff[0]\(7),
      R => '0'
    );
\syncstages_ff_reg[0][8]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(8),
      Q => \syncstages_ff[0]\(8),
      R => '0'
    );
\syncstages_ff_reg[0][9]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(9),
      Q => \syncstages_ff[0]\(9),
      R => '0'
    );
\syncstages_ff_reg[1][0]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(0),
      Q => \syncstages_ff[1]\(0),
      R => '0'
    );
\syncstages_ff_reg[1][10]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(10),
      Q => \syncstages_ff[1]\(10),
      R => '0'
    );
\syncstages_ff_reg[1][11]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(11),
      Q => \syncstages_ff[1]\(11),
      R => '0'
    );
\syncstages_ff_reg[1][12]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(12),
      Q => \syncstages_ff[1]\(12),
      R => '0'
    );
\syncstages_ff_reg[1][13]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(13),
      Q => \syncstages_ff[1]\(13),
      R => '0'
    );
\syncstages_ff_reg[1][14]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(14),
      Q => \syncstages_ff[1]\(14),
      R => '0'
    );
\syncstages_ff_reg[1][15]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(15),
      Q => \syncstages_ff[1]\(15),
      R => '0'
    );
\syncstages_ff_reg[1][16]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(16),
      Q => \syncstages_ff[1]\(16),
      R => '0'
    );
\syncstages_ff_reg[1][17]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(17),
      Q => \syncstages_ff[1]\(17),
      R => '0'
    );
\syncstages_ff_reg[1][18]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(18),
      Q => \syncstages_ff[1]\(18),
      R => '0'
    );
\syncstages_ff_reg[1][19]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(19),
      Q => \syncstages_ff[1]\(19),
      R => '0'
    );
\syncstages_ff_reg[1][1]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(1),
      Q => \syncstages_ff[1]\(1),
      R => '0'
    );
\syncstages_ff_reg[1][20]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(20),
      Q => \syncstages_ff[1]\(20),
      R => '0'
    );
\syncstages_ff_reg[1][21]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(21),
      Q => \syncstages_ff[1]\(21),
      R => '0'
    );
\syncstages_ff_reg[1][22]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(22),
      Q => \syncstages_ff[1]\(22),
      R => '0'
    );
\syncstages_ff_reg[1][2]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(2),
      Q => \syncstages_ff[1]\(2),
      R => '0'
    );
\syncstages_ff_reg[1][3]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(3),
      Q => \syncstages_ff[1]\(3),
      R => '0'
    );
\syncstages_ff_reg[1][4]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(4),
      Q => \syncstages_ff[1]\(4),
      R => '0'
    );
\syncstages_ff_reg[1][5]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(5),
      Q => \syncstages_ff[1]\(5),
      R => '0'
    );
\syncstages_ff_reg[1][6]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(6),
      Q => \syncstages_ff[1]\(6),
      R => '0'
    );
\syncstages_ff_reg[1][7]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(7),
      Q => \syncstages_ff[1]\(7),
      R => '0'
    );
\syncstages_ff_reg[1][8]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(8),
      Q => \syncstages_ff[1]\(8),
      R => '0'
    );
\syncstages_ff_reg[1][9]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(9),
      Q => \syncstages_ff[1]\(9),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__9\ is
  port (
    src_clk : in STD_LOGIC;
    src_in : in STD_LOGIC_VECTOR ( 22 downto 0 );
    dest_clk : in STD_LOGIC;
    dest_out : out STD_LOGIC_VECTOR ( 22 downto 0 )
  );
  attribute DEST_SYNC_FF : integer;
  attribute DEST_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__9\ : entity is 2;
  attribute INIT_SYNC_FF : integer;
  attribute INIT_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__9\ : entity is 0;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__9\ : entity is "xpm_cdc_array_single";
  attribute SIM_ASSERT_CHK : integer;
  attribute SIM_ASSERT_CHK of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__9\ : entity is 0;
  attribute SRC_INPUT_REG : integer;
  attribute SRC_INPUT_REG of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__9\ : entity is 0;
  attribute VERSION : integer;
  attribute VERSION of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__9\ : entity is 0;
  attribute WIDTH : integer;
  attribute WIDTH of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__9\ : entity is 23;
  attribute XPM_MODULE : string;
  attribute XPM_MODULE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__9\ : entity is "TRUE";
  attribute keep_hierarchy : string;
  attribute keep_hierarchy of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__9\ : entity is "true";
  attribute xpm_cdc : string;
  attribute xpm_cdc of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__9\ : entity is "ARRAY_SINGLE";
end \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__9\;

architecture STRUCTURE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__9\ is
  signal async_path_bit : STD_LOGIC_VECTOR ( 22 downto 0 );
  signal \syncstages_ff[0]\ : STD_LOGIC_VECTOR ( 22 downto 0 );
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of \syncstages_ff[0]\ : signal is "true";
  attribute async_reg : string;
  attribute async_reg of \syncstages_ff[0]\ : signal is "true";
  attribute xpm_cdc of \syncstages_ff[0]\ : signal is "ARRAY_SINGLE";
  signal \syncstages_ff[1]\ : STD_LOGIC_VECTOR ( 22 downto 0 );
  attribute RTL_KEEP of \syncstages_ff[1]\ : signal is "true";
  attribute async_reg of \syncstages_ff[1]\ : signal is "true";
  attribute xpm_cdc of \syncstages_ff[1]\ : signal is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \syncstages_ff_reg[0][0]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][0]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][10]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][10]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][10]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][11]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][11]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][11]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][12]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][12]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][12]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][13]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][13]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][13]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][14]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][14]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][14]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][15]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][15]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][15]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][16]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][16]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][16]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][17]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][17]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][17]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][18]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][18]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][18]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][19]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][19]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][19]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][1]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][1]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][1]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][20]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][20]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][20]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][21]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][21]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][21]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][22]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][22]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][22]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][2]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][2]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][2]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][3]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][3]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][3]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][4]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][4]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][4]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][5]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][5]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][5]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][6]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][6]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][6]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][7]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][7]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][7]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][8]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][8]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][8]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][9]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][9]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][9]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][0]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][0]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][0]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][10]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][10]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][10]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][11]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][11]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][11]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][12]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][12]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][12]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][13]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][13]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][13]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][14]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][14]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][14]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][15]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][15]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][15]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][16]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][16]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][16]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][17]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][17]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][17]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][18]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][18]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][18]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][19]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][19]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][19]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][1]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][1]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][1]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][20]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][20]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][20]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][21]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][21]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][21]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][22]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][22]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][22]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][2]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][2]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][2]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][3]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][3]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][3]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][4]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][4]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][4]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][5]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][5]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][5]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][6]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][6]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][6]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][7]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][7]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][7]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][8]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][8]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][8]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][9]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][9]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][9]\ : label is "ARRAY_SINGLE";
begin
  async_path_bit(22 downto 0) <= src_in(22 downto 0);
  dest_out(22 downto 0) <= \syncstages_ff[1]\(22 downto 0);
\syncstages_ff_reg[0][0]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(0),
      Q => \syncstages_ff[0]\(0),
      R => '0'
    );
\syncstages_ff_reg[0][10]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(10),
      Q => \syncstages_ff[0]\(10),
      R => '0'
    );
\syncstages_ff_reg[0][11]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(11),
      Q => \syncstages_ff[0]\(11),
      R => '0'
    );
\syncstages_ff_reg[0][12]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(12),
      Q => \syncstages_ff[0]\(12),
      R => '0'
    );
\syncstages_ff_reg[0][13]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(13),
      Q => \syncstages_ff[0]\(13),
      R => '0'
    );
\syncstages_ff_reg[0][14]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(14),
      Q => \syncstages_ff[0]\(14),
      R => '0'
    );
\syncstages_ff_reg[0][15]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(15),
      Q => \syncstages_ff[0]\(15),
      R => '0'
    );
\syncstages_ff_reg[0][16]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(16),
      Q => \syncstages_ff[0]\(16),
      R => '0'
    );
\syncstages_ff_reg[0][17]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(17),
      Q => \syncstages_ff[0]\(17),
      R => '0'
    );
\syncstages_ff_reg[0][18]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(18),
      Q => \syncstages_ff[0]\(18),
      R => '0'
    );
\syncstages_ff_reg[0][19]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(19),
      Q => \syncstages_ff[0]\(19),
      R => '0'
    );
\syncstages_ff_reg[0][1]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(1),
      Q => \syncstages_ff[0]\(1),
      R => '0'
    );
\syncstages_ff_reg[0][20]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(20),
      Q => \syncstages_ff[0]\(20),
      R => '0'
    );
\syncstages_ff_reg[0][21]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(21),
      Q => \syncstages_ff[0]\(21),
      R => '0'
    );
\syncstages_ff_reg[0][22]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(22),
      Q => \syncstages_ff[0]\(22),
      R => '0'
    );
\syncstages_ff_reg[0][2]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(2),
      Q => \syncstages_ff[0]\(2),
      R => '0'
    );
\syncstages_ff_reg[0][3]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(3),
      Q => \syncstages_ff[0]\(3),
      R => '0'
    );
\syncstages_ff_reg[0][4]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(4),
      Q => \syncstages_ff[0]\(4),
      R => '0'
    );
\syncstages_ff_reg[0][5]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(5),
      Q => \syncstages_ff[0]\(5),
      R => '0'
    );
\syncstages_ff_reg[0][6]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(6),
      Q => \syncstages_ff[0]\(6),
      R => '0'
    );
\syncstages_ff_reg[0][7]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(7),
      Q => \syncstages_ff[0]\(7),
      R => '0'
    );
\syncstages_ff_reg[0][8]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(8),
      Q => \syncstages_ff[0]\(8),
      R => '0'
    );
\syncstages_ff_reg[0][9]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(9),
      Q => \syncstages_ff[0]\(9),
      R => '0'
    );
\syncstages_ff_reg[1][0]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(0),
      Q => \syncstages_ff[1]\(0),
      R => '0'
    );
\syncstages_ff_reg[1][10]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(10),
      Q => \syncstages_ff[1]\(10),
      R => '0'
    );
\syncstages_ff_reg[1][11]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(11),
      Q => \syncstages_ff[1]\(11),
      R => '0'
    );
\syncstages_ff_reg[1][12]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(12),
      Q => \syncstages_ff[1]\(12),
      R => '0'
    );
\syncstages_ff_reg[1][13]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(13),
      Q => \syncstages_ff[1]\(13),
      R => '0'
    );
\syncstages_ff_reg[1][14]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(14),
      Q => \syncstages_ff[1]\(14),
      R => '0'
    );
\syncstages_ff_reg[1][15]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(15),
      Q => \syncstages_ff[1]\(15),
      R => '0'
    );
\syncstages_ff_reg[1][16]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(16),
      Q => \syncstages_ff[1]\(16),
      R => '0'
    );
\syncstages_ff_reg[1][17]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(17),
      Q => \syncstages_ff[1]\(17),
      R => '0'
    );
\syncstages_ff_reg[1][18]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(18),
      Q => \syncstages_ff[1]\(18),
      R => '0'
    );
\syncstages_ff_reg[1][19]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(19),
      Q => \syncstages_ff[1]\(19),
      R => '0'
    );
\syncstages_ff_reg[1][1]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(1),
      Q => \syncstages_ff[1]\(1),
      R => '0'
    );
\syncstages_ff_reg[1][20]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(20),
      Q => \syncstages_ff[1]\(20),
      R => '0'
    );
\syncstages_ff_reg[1][21]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(21),
      Q => \syncstages_ff[1]\(21),
      R => '0'
    );
\syncstages_ff_reg[1][22]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(22),
      Q => \syncstages_ff[1]\(22),
      R => '0'
    );
\syncstages_ff_reg[1][2]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(2),
      Q => \syncstages_ff[1]\(2),
      R => '0'
    );
\syncstages_ff_reg[1][3]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(3),
      Q => \syncstages_ff[1]\(3),
      R => '0'
    );
\syncstages_ff_reg[1][4]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(4),
      Q => \syncstages_ff[1]\(4),
      R => '0'
    );
\syncstages_ff_reg[1][5]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(5),
      Q => \syncstages_ff[1]\(5),
      R => '0'
    );
\syncstages_ff_reg[1][6]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(6),
      Q => \syncstages_ff[1]\(6),
      R => '0'
    );
\syncstages_ff_reg[1][7]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(7),
      Q => \syncstages_ff[1]\(7),
      R => '0'
    );
\syncstages_ff_reg[1][8]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(8),
      Q => \syncstages_ff[1]\(8),
      R => '0'
    );
\syncstages_ff_reg[1][9]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(9),
      Q => \syncstages_ff[1]\(9),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized2\ is
  port (
    src_clk : in STD_LOGIC;
    src_in : in STD_LOGIC_VECTOR ( 96 downto 0 );
    dest_clk : in STD_LOGIC;
    dest_out : out STD_LOGIC_VECTOR ( 96 downto 0 )
  );
  attribute DEST_SYNC_FF : integer;
  attribute DEST_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized2\ : entity is 3;
  attribute INIT_SYNC_FF : integer;
  attribute INIT_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized2\ : entity is 0;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized2\ : entity is "xpm_cdc_array_single";
  attribute SIM_ASSERT_CHK : integer;
  attribute SIM_ASSERT_CHK of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized2\ : entity is 0;
  attribute SRC_INPUT_REG : integer;
  attribute SRC_INPUT_REG of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized2\ : entity is 0;
  attribute VERSION : integer;
  attribute VERSION of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized2\ : entity is 0;
  attribute WIDTH : integer;
  attribute WIDTH of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized2\ : entity is 97;
  attribute XPM_MODULE : string;
  attribute XPM_MODULE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized2\ : entity is "TRUE";
  attribute keep_hierarchy : string;
  attribute keep_hierarchy of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized2\ : entity is "true";
  attribute xpm_cdc : string;
  attribute xpm_cdc of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized2\ : entity is "ARRAY_SINGLE";
end \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized2\;

architecture STRUCTURE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized2\ is
  signal async_path_bit : STD_LOGIC_VECTOR ( 96 downto 0 );
  signal \syncstages_ff[0]\ : STD_LOGIC_VECTOR ( 96 downto 0 );
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of \syncstages_ff[0]\ : signal is "true";
  attribute async_reg : string;
  attribute async_reg of \syncstages_ff[0]\ : signal is "true";
  attribute xpm_cdc of \syncstages_ff[0]\ : signal is "ARRAY_SINGLE";
  signal \syncstages_ff[1]\ : STD_LOGIC_VECTOR ( 96 downto 0 );
  attribute RTL_KEEP of \syncstages_ff[1]\ : signal is "true";
  attribute async_reg of \syncstages_ff[1]\ : signal is "true";
  attribute xpm_cdc of \syncstages_ff[1]\ : signal is "ARRAY_SINGLE";
  signal \syncstages_ff[2]\ : STD_LOGIC_VECTOR ( 96 downto 0 );
  attribute RTL_KEEP of \syncstages_ff[2]\ : signal is "true";
  attribute async_reg of \syncstages_ff[2]\ : signal is "true";
  attribute xpm_cdc of \syncstages_ff[2]\ : signal is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \syncstages_ff_reg[0][0]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][0]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][10]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][10]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][10]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][11]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][11]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][11]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][12]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][12]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][12]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][13]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][13]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][13]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][14]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][14]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][14]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][15]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][15]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][15]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][16]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][16]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][16]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][17]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][17]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][17]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][18]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][18]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][18]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][19]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][19]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][19]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][1]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][1]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][1]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][20]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][20]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][20]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][21]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][21]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][21]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][22]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][22]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][22]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][23]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][23]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][23]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][24]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][24]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][24]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][25]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][25]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][25]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][26]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][26]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][26]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][27]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][27]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][27]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][28]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][28]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][28]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][29]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][29]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][29]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][2]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][2]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][2]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][30]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][30]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][30]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][31]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][31]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][31]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][32]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][32]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][32]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][33]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][33]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][33]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][34]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][34]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][34]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][35]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][35]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][35]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][36]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][36]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][36]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][37]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][37]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][37]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][38]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][38]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][38]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][39]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][39]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][39]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][3]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][3]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][3]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][40]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][40]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][40]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][41]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][41]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][41]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][42]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][42]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][42]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][43]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][43]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][43]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][44]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][44]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][44]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][45]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][45]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][45]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][46]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][46]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][46]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][47]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][47]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][47]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][48]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][48]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][48]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][49]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][49]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][49]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][4]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][4]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][4]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][50]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][50]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][50]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][51]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][51]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][51]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][52]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][52]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][52]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][53]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][53]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][53]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][54]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][54]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][54]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][55]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][55]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][55]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][56]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][56]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][56]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][57]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][57]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][57]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][58]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][58]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][58]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][59]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][59]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][59]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][5]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][5]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][5]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][60]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][60]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][60]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][61]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][61]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][61]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][62]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][62]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][62]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][63]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][63]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][63]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][64]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][64]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][64]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][65]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][65]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][65]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][66]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][66]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][66]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][67]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][67]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][67]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][68]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][68]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][68]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][69]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][69]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][69]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][6]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][6]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][6]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][70]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][70]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][70]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][71]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][71]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][71]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][72]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][72]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][72]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][73]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][73]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][73]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][74]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][74]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][74]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][75]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][75]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][75]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][76]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][76]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][76]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][77]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][77]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][77]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][78]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][78]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][78]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][79]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][79]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][79]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][7]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][7]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][7]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][80]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][80]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][80]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][81]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][81]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][81]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][82]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][82]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][82]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][83]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][83]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][83]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][84]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][84]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][84]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][85]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][85]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][85]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][86]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][86]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][86]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][87]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][87]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][87]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][88]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][88]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][88]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][89]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][89]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][89]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][8]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][8]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][8]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][90]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][90]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][90]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][91]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][91]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][91]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][92]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][92]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][92]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][93]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][93]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][93]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][94]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][94]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][94]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][95]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][95]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][95]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][96]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][96]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][96]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][9]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][9]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][9]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][0]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][0]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][0]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][10]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][10]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][10]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][11]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][11]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][11]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][12]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][12]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][12]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][13]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][13]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][13]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][14]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][14]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][14]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][15]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][15]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][15]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][16]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][16]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][16]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][17]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][17]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][17]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][18]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][18]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][18]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][19]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][19]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][19]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][1]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][1]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][1]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][20]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][20]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][20]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][21]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][21]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][21]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][22]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][22]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][22]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][23]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][23]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][23]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][24]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][24]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][24]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][25]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][25]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][25]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][26]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][26]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][26]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][27]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][27]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][27]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][28]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][28]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][28]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][29]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][29]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][29]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][2]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][2]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][2]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][30]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][30]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][30]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][31]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][31]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][31]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][32]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][32]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][32]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][33]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][33]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][33]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][34]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][34]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][34]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][35]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][35]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][35]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][36]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][36]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][36]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][37]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][37]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][37]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][38]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][38]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][38]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][39]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][39]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][39]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][3]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][3]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][3]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][40]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][40]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][40]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][41]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][41]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][41]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][42]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][42]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][42]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][43]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][43]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][43]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][44]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][44]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][44]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][45]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][45]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][45]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][46]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][46]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][46]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][47]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][47]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][47]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][48]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][48]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][48]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][49]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][49]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][49]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][4]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][4]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][4]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][50]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][50]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][50]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][51]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][51]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][51]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][52]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][52]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][52]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][53]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][53]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][53]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][54]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][54]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][54]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][55]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][55]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][55]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][56]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][56]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][56]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][57]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][57]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][57]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][58]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][58]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][58]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][59]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][59]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][59]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][5]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][5]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][5]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][60]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][60]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][60]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][61]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][61]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][61]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][62]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][62]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][62]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][63]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][63]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][63]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][64]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][64]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][64]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][65]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][65]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][65]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][66]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][66]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][66]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][67]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][67]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][67]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][68]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][68]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][68]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][69]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][69]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][69]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][6]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][6]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][6]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][70]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][70]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][70]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][71]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][71]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][71]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][72]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][72]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][72]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][73]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][73]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][73]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][74]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][74]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][74]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][75]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][75]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][75]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][76]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][76]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][76]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][77]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][77]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][77]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][78]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][78]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][78]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][79]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][79]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][79]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][7]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][7]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][7]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][80]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][80]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][80]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][81]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][81]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][81]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][82]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][82]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][82]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][83]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][83]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][83]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][84]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][84]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][84]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][85]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][85]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][85]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][86]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][86]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][86]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][87]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][87]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][87]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][88]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][88]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][88]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][89]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][89]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][89]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][8]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][8]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][8]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][90]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][90]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][90]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][91]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][91]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][91]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][92]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][92]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][92]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][93]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][93]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][93]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][94]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][94]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][94]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][95]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][95]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][95]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][96]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][96]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][96]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][9]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][9]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][9]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][0]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][0]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][0]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][10]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][10]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][10]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][11]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][11]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][11]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][12]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][12]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][12]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][13]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][13]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][13]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][14]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][14]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][14]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][15]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][15]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][15]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][16]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][16]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][16]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][17]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][17]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][17]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][18]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][18]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][18]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][19]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][19]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][19]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][1]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][1]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][1]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][20]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][20]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][20]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][21]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][21]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][21]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][22]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][22]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][22]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][23]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][23]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][23]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][24]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][24]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][24]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][25]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][25]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][25]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][26]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][26]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][26]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][27]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][27]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][27]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][28]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][28]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][28]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][29]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][29]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][29]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][2]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][2]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][2]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][30]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][30]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][30]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][31]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][31]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][31]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][32]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][32]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][32]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][33]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][33]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][33]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][34]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][34]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][34]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][35]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][35]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][35]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][36]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][36]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][36]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][37]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][37]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][37]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][38]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][38]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][38]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][39]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][39]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][39]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][3]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][3]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][3]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][40]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][40]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][40]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][41]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][41]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][41]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][42]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][42]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][42]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][43]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][43]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][43]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][44]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][44]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][44]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][45]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][45]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][45]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][46]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][46]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][46]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][47]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][47]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][47]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][48]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][48]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][48]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][49]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][49]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][49]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][4]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][4]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][4]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][50]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][50]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][50]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][51]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][51]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][51]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][52]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][52]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][52]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][53]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][53]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][53]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][54]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][54]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][54]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][55]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][55]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][55]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][56]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][56]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][56]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][57]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][57]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][57]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][58]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][58]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][58]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][59]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][59]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][59]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][5]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][5]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][5]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][60]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][60]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][60]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][61]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][61]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][61]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][62]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][62]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][62]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][63]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][63]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][63]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][64]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][64]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][64]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][65]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][65]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][65]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][66]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][66]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][66]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][67]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][67]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][67]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][68]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][68]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][68]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][69]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][69]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][69]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][6]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][6]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][6]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][70]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][70]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][70]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][71]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][71]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][71]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][72]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][72]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][72]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][73]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][73]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][73]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][74]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][74]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][74]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][75]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][75]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][75]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][76]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][76]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][76]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][77]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][77]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][77]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][78]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][78]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][78]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][79]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][79]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][79]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][7]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][7]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][7]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][80]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][80]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][80]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][81]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][81]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][81]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][82]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][82]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][82]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][83]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][83]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][83]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][84]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][84]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][84]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][85]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][85]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][85]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][86]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][86]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][86]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][87]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][87]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][87]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][88]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][88]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][88]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][89]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][89]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][89]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][8]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][8]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][8]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][90]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][90]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][90]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][91]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][91]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][91]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][92]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][92]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][92]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][93]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][93]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][93]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][94]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][94]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][94]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][95]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][95]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][95]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][96]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][96]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][96]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][9]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][9]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][9]\ : label is "ARRAY_SINGLE";
begin
  async_path_bit(96) <= src_in(96);
  async_path_bit(79 downto 64) <= src_in(79 downto 64);
  async_path_bit(55) <= src_in(63);
  async_path_bit(54 downto 32) <= src_in(54 downto 32);
  async_path_bit(23) <= src_in(31);
  async_path_bit(22 downto 0) <= src_in(22 downto 0);
  dest_out(96 downto 0) <= \syncstages_ff[2]\(96 downto 0);
async_path_bit_inst: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => async_path_bit(55),
      O => async_path_bit(63)
    );
\async_path_bit_inst__0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => async_path_bit(55),
      O => async_path_bit(62)
    );
\async_path_bit_inst__1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => async_path_bit(55),
      O => async_path_bit(61)
    );
\async_path_bit_inst__10\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => async_path_bit(23),
      O => async_path_bit(28)
    );
\async_path_bit_inst__11\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => async_path_bit(23),
      O => async_path_bit(27)
    );
\async_path_bit_inst__12\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => async_path_bit(23),
      O => async_path_bit(26)
    );
\async_path_bit_inst__13\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => async_path_bit(23),
      O => async_path_bit(25)
    );
\async_path_bit_inst__14\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => async_path_bit(23),
      O => async_path_bit(24)
    );
\async_path_bit_inst__2\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => async_path_bit(55),
      O => async_path_bit(60)
    );
\async_path_bit_inst__3\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => async_path_bit(55),
      O => async_path_bit(59)
    );
\async_path_bit_inst__4\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => async_path_bit(55),
      O => async_path_bit(58)
    );
\async_path_bit_inst__5\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => async_path_bit(55),
      O => async_path_bit(57)
    );
\async_path_bit_inst__6\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => async_path_bit(55),
      O => async_path_bit(56)
    );
\async_path_bit_inst__7\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => async_path_bit(23),
      O => async_path_bit(31)
    );
\async_path_bit_inst__8\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => async_path_bit(23),
      O => async_path_bit(30)
    );
\async_path_bit_inst__9\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => async_path_bit(23),
      O => async_path_bit(29)
    );
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => async_path_bit(95)
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => async_path_bit(94)
    );
i_10: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => async_path_bit(85)
    );
i_11: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => async_path_bit(84)
    );
i_12: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => async_path_bit(83)
    );
i_13: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => async_path_bit(82)
    );
i_14: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => async_path_bit(81)
    );
i_15: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => async_path_bit(80)
    );
i_2: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => async_path_bit(93)
    );
i_3: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => async_path_bit(92)
    );
i_4: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => async_path_bit(91)
    );
i_5: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => async_path_bit(90)
    );
i_6: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => async_path_bit(89)
    );
i_7: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => async_path_bit(88)
    );
i_8: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => async_path_bit(87)
    );
i_9: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => async_path_bit(86)
    );
\syncstages_ff_reg[0][0]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(0),
      Q => \syncstages_ff[0]\(0),
      R => '0'
    );
\syncstages_ff_reg[0][10]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(10),
      Q => \syncstages_ff[0]\(10),
      R => '0'
    );
\syncstages_ff_reg[0][11]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(11),
      Q => \syncstages_ff[0]\(11),
      R => '0'
    );
\syncstages_ff_reg[0][12]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(12),
      Q => \syncstages_ff[0]\(12),
      R => '0'
    );
\syncstages_ff_reg[0][13]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(13),
      Q => \syncstages_ff[0]\(13),
      R => '0'
    );
\syncstages_ff_reg[0][14]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(14),
      Q => \syncstages_ff[0]\(14),
      R => '0'
    );
\syncstages_ff_reg[0][15]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(15),
      Q => \syncstages_ff[0]\(15),
      R => '0'
    );
\syncstages_ff_reg[0][16]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(16),
      Q => \syncstages_ff[0]\(16),
      R => '0'
    );
\syncstages_ff_reg[0][17]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(17),
      Q => \syncstages_ff[0]\(17),
      R => '0'
    );
\syncstages_ff_reg[0][18]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(18),
      Q => \syncstages_ff[0]\(18),
      R => '0'
    );
\syncstages_ff_reg[0][19]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(19),
      Q => \syncstages_ff[0]\(19),
      R => '0'
    );
\syncstages_ff_reg[0][1]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(1),
      Q => \syncstages_ff[0]\(1),
      R => '0'
    );
\syncstages_ff_reg[0][20]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(20),
      Q => \syncstages_ff[0]\(20),
      R => '0'
    );
\syncstages_ff_reg[0][21]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(21),
      Q => \syncstages_ff[0]\(21),
      R => '0'
    );
\syncstages_ff_reg[0][22]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(22),
      Q => \syncstages_ff[0]\(22),
      R => '0'
    );
\syncstages_ff_reg[0][23]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(23),
      Q => \syncstages_ff[0]\(23),
      R => '0'
    );
\syncstages_ff_reg[0][24]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(24),
      Q => \syncstages_ff[0]\(24),
      R => '0'
    );
\syncstages_ff_reg[0][25]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(25),
      Q => \syncstages_ff[0]\(25),
      R => '0'
    );
\syncstages_ff_reg[0][26]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(26),
      Q => \syncstages_ff[0]\(26),
      R => '0'
    );
\syncstages_ff_reg[0][27]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(27),
      Q => \syncstages_ff[0]\(27),
      R => '0'
    );
\syncstages_ff_reg[0][28]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(28),
      Q => \syncstages_ff[0]\(28),
      R => '0'
    );
\syncstages_ff_reg[0][29]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(29),
      Q => \syncstages_ff[0]\(29),
      R => '0'
    );
\syncstages_ff_reg[0][2]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(2),
      Q => \syncstages_ff[0]\(2),
      R => '0'
    );
\syncstages_ff_reg[0][30]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(30),
      Q => \syncstages_ff[0]\(30),
      R => '0'
    );
\syncstages_ff_reg[0][31]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(31),
      Q => \syncstages_ff[0]\(31),
      R => '0'
    );
\syncstages_ff_reg[0][32]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(32),
      Q => \syncstages_ff[0]\(32),
      R => '0'
    );
\syncstages_ff_reg[0][33]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(33),
      Q => \syncstages_ff[0]\(33),
      R => '0'
    );
\syncstages_ff_reg[0][34]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(34),
      Q => \syncstages_ff[0]\(34),
      R => '0'
    );
\syncstages_ff_reg[0][35]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(35),
      Q => \syncstages_ff[0]\(35),
      R => '0'
    );
\syncstages_ff_reg[0][36]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(36),
      Q => \syncstages_ff[0]\(36),
      R => '0'
    );
\syncstages_ff_reg[0][37]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(37),
      Q => \syncstages_ff[0]\(37),
      R => '0'
    );
\syncstages_ff_reg[0][38]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(38),
      Q => \syncstages_ff[0]\(38),
      R => '0'
    );
\syncstages_ff_reg[0][39]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(39),
      Q => \syncstages_ff[0]\(39),
      R => '0'
    );
\syncstages_ff_reg[0][3]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(3),
      Q => \syncstages_ff[0]\(3),
      R => '0'
    );
\syncstages_ff_reg[0][40]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(40),
      Q => \syncstages_ff[0]\(40),
      R => '0'
    );
\syncstages_ff_reg[0][41]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(41),
      Q => \syncstages_ff[0]\(41),
      R => '0'
    );
\syncstages_ff_reg[0][42]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(42),
      Q => \syncstages_ff[0]\(42),
      R => '0'
    );
\syncstages_ff_reg[0][43]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(43),
      Q => \syncstages_ff[0]\(43),
      R => '0'
    );
\syncstages_ff_reg[0][44]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(44),
      Q => \syncstages_ff[0]\(44),
      R => '0'
    );
\syncstages_ff_reg[0][45]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(45),
      Q => \syncstages_ff[0]\(45),
      R => '0'
    );
\syncstages_ff_reg[0][46]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(46),
      Q => \syncstages_ff[0]\(46),
      R => '0'
    );
\syncstages_ff_reg[0][47]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(47),
      Q => \syncstages_ff[0]\(47),
      R => '0'
    );
\syncstages_ff_reg[0][48]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(48),
      Q => \syncstages_ff[0]\(48),
      R => '0'
    );
\syncstages_ff_reg[0][49]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(49),
      Q => \syncstages_ff[0]\(49),
      R => '0'
    );
\syncstages_ff_reg[0][4]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(4),
      Q => \syncstages_ff[0]\(4),
      R => '0'
    );
\syncstages_ff_reg[0][50]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(50),
      Q => \syncstages_ff[0]\(50),
      R => '0'
    );
\syncstages_ff_reg[0][51]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(51),
      Q => \syncstages_ff[0]\(51),
      R => '0'
    );
\syncstages_ff_reg[0][52]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(52),
      Q => \syncstages_ff[0]\(52),
      R => '0'
    );
\syncstages_ff_reg[0][53]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(53),
      Q => \syncstages_ff[0]\(53),
      R => '0'
    );
\syncstages_ff_reg[0][54]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(54),
      Q => \syncstages_ff[0]\(54),
      R => '0'
    );
\syncstages_ff_reg[0][55]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(55),
      Q => \syncstages_ff[0]\(55),
      R => '0'
    );
\syncstages_ff_reg[0][56]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(56),
      Q => \syncstages_ff[0]\(56),
      R => '0'
    );
\syncstages_ff_reg[0][57]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(57),
      Q => \syncstages_ff[0]\(57),
      R => '0'
    );
\syncstages_ff_reg[0][58]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(58),
      Q => \syncstages_ff[0]\(58),
      R => '0'
    );
\syncstages_ff_reg[0][59]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(59),
      Q => \syncstages_ff[0]\(59),
      R => '0'
    );
\syncstages_ff_reg[0][5]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(5),
      Q => \syncstages_ff[0]\(5),
      R => '0'
    );
\syncstages_ff_reg[0][60]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(60),
      Q => \syncstages_ff[0]\(60),
      R => '0'
    );
\syncstages_ff_reg[0][61]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(61),
      Q => \syncstages_ff[0]\(61),
      R => '0'
    );
\syncstages_ff_reg[0][62]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(62),
      Q => \syncstages_ff[0]\(62),
      R => '0'
    );
\syncstages_ff_reg[0][63]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(63),
      Q => \syncstages_ff[0]\(63),
      R => '0'
    );
\syncstages_ff_reg[0][64]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(64),
      Q => \syncstages_ff[0]\(64),
      R => '0'
    );
\syncstages_ff_reg[0][65]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(65),
      Q => \syncstages_ff[0]\(65),
      R => '0'
    );
\syncstages_ff_reg[0][66]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(66),
      Q => \syncstages_ff[0]\(66),
      R => '0'
    );
\syncstages_ff_reg[0][67]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(67),
      Q => \syncstages_ff[0]\(67),
      R => '0'
    );
\syncstages_ff_reg[0][68]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(68),
      Q => \syncstages_ff[0]\(68),
      R => '0'
    );
\syncstages_ff_reg[0][69]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(69),
      Q => \syncstages_ff[0]\(69),
      R => '0'
    );
\syncstages_ff_reg[0][6]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(6),
      Q => \syncstages_ff[0]\(6),
      R => '0'
    );
\syncstages_ff_reg[0][70]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(70),
      Q => \syncstages_ff[0]\(70),
      R => '0'
    );
\syncstages_ff_reg[0][71]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(71),
      Q => \syncstages_ff[0]\(71),
      R => '0'
    );
\syncstages_ff_reg[0][72]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(72),
      Q => \syncstages_ff[0]\(72),
      R => '0'
    );
\syncstages_ff_reg[0][73]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(73),
      Q => \syncstages_ff[0]\(73),
      R => '0'
    );
\syncstages_ff_reg[0][74]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(74),
      Q => \syncstages_ff[0]\(74),
      R => '0'
    );
\syncstages_ff_reg[0][75]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(75),
      Q => \syncstages_ff[0]\(75),
      R => '0'
    );
\syncstages_ff_reg[0][76]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(76),
      Q => \syncstages_ff[0]\(76),
      R => '0'
    );
\syncstages_ff_reg[0][77]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(77),
      Q => \syncstages_ff[0]\(77),
      R => '0'
    );
\syncstages_ff_reg[0][78]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(78),
      Q => \syncstages_ff[0]\(78),
      R => '0'
    );
\syncstages_ff_reg[0][79]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(79),
      Q => \syncstages_ff[0]\(79),
      R => '0'
    );
\syncstages_ff_reg[0][7]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(7),
      Q => \syncstages_ff[0]\(7),
      R => '0'
    );
\syncstages_ff_reg[0][80]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(80),
      Q => \syncstages_ff[0]\(80),
      R => '0'
    );
\syncstages_ff_reg[0][81]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(81),
      Q => \syncstages_ff[0]\(81),
      R => '0'
    );
\syncstages_ff_reg[0][82]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(82),
      Q => \syncstages_ff[0]\(82),
      R => '0'
    );
\syncstages_ff_reg[0][83]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(83),
      Q => \syncstages_ff[0]\(83),
      R => '0'
    );
\syncstages_ff_reg[0][84]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(84),
      Q => \syncstages_ff[0]\(84),
      R => '0'
    );
\syncstages_ff_reg[0][85]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(85),
      Q => \syncstages_ff[0]\(85),
      R => '0'
    );
\syncstages_ff_reg[0][86]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(86),
      Q => \syncstages_ff[0]\(86),
      R => '0'
    );
\syncstages_ff_reg[0][87]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(87),
      Q => \syncstages_ff[0]\(87),
      R => '0'
    );
\syncstages_ff_reg[0][88]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(88),
      Q => \syncstages_ff[0]\(88),
      R => '0'
    );
\syncstages_ff_reg[0][89]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(89),
      Q => \syncstages_ff[0]\(89),
      R => '0'
    );
\syncstages_ff_reg[0][8]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(8),
      Q => \syncstages_ff[0]\(8),
      R => '0'
    );
\syncstages_ff_reg[0][90]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(90),
      Q => \syncstages_ff[0]\(90),
      R => '0'
    );
\syncstages_ff_reg[0][91]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(91),
      Q => \syncstages_ff[0]\(91),
      R => '0'
    );
\syncstages_ff_reg[0][92]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(92),
      Q => \syncstages_ff[0]\(92),
      R => '0'
    );
\syncstages_ff_reg[0][93]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(93),
      Q => \syncstages_ff[0]\(93),
      R => '0'
    );
\syncstages_ff_reg[0][94]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(94),
      Q => \syncstages_ff[0]\(94),
      R => '0'
    );
\syncstages_ff_reg[0][95]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(95),
      Q => \syncstages_ff[0]\(95),
      R => '0'
    );
\syncstages_ff_reg[0][96]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(96),
      Q => \syncstages_ff[0]\(96),
      R => '0'
    );
\syncstages_ff_reg[0][9]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(9),
      Q => \syncstages_ff[0]\(9),
      R => '0'
    );
\syncstages_ff_reg[1][0]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(0),
      Q => \syncstages_ff[1]\(0),
      R => '0'
    );
\syncstages_ff_reg[1][10]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(10),
      Q => \syncstages_ff[1]\(10),
      R => '0'
    );
\syncstages_ff_reg[1][11]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(11),
      Q => \syncstages_ff[1]\(11),
      R => '0'
    );
\syncstages_ff_reg[1][12]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(12),
      Q => \syncstages_ff[1]\(12),
      R => '0'
    );
\syncstages_ff_reg[1][13]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(13),
      Q => \syncstages_ff[1]\(13),
      R => '0'
    );
\syncstages_ff_reg[1][14]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(14),
      Q => \syncstages_ff[1]\(14),
      R => '0'
    );
\syncstages_ff_reg[1][15]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(15),
      Q => \syncstages_ff[1]\(15),
      R => '0'
    );
\syncstages_ff_reg[1][16]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(16),
      Q => \syncstages_ff[1]\(16),
      R => '0'
    );
\syncstages_ff_reg[1][17]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(17),
      Q => \syncstages_ff[1]\(17),
      R => '0'
    );
\syncstages_ff_reg[1][18]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(18),
      Q => \syncstages_ff[1]\(18),
      R => '0'
    );
\syncstages_ff_reg[1][19]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(19),
      Q => \syncstages_ff[1]\(19),
      R => '0'
    );
\syncstages_ff_reg[1][1]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(1),
      Q => \syncstages_ff[1]\(1),
      R => '0'
    );
\syncstages_ff_reg[1][20]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(20),
      Q => \syncstages_ff[1]\(20),
      R => '0'
    );
\syncstages_ff_reg[1][21]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(21),
      Q => \syncstages_ff[1]\(21),
      R => '0'
    );
\syncstages_ff_reg[1][22]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(22),
      Q => \syncstages_ff[1]\(22),
      R => '0'
    );
\syncstages_ff_reg[1][23]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(23),
      Q => \syncstages_ff[1]\(23),
      R => '0'
    );
\syncstages_ff_reg[1][24]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(24),
      Q => \syncstages_ff[1]\(24),
      R => '0'
    );
\syncstages_ff_reg[1][25]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(25),
      Q => \syncstages_ff[1]\(25),
      R => '0'
    );
\syncstages_ff_reg[1][26]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(26),
      Q => \syncstages_ff[1]\(26),
      R => '0'
    );
\syncstages_ff_reg[1][27]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(27),
      Q => \syncstages_ff[1]\(27),
      R => '0'
    );
\syncstages_ff_reg[1][28]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(28),
      Q => \syncstages_ff[1]\(28),
      R => '0'
    );
\syncstages_ff_reg[1][29]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(29),
      Q => \syncstages_ff[1]\(29),
      R => '0'
    );
\syncstages_ff_reg[1][2]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(2),
      Q => \syncstages_ff[1]\(2),
      R => '0'
    );
\syncstages_ff_reg[1][30]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(30),
      Q => \syncstages_ff[1]\(30),
      R => '0'
    );
\syncstages_ff_reg[1][31]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(31),
      Q => \syncstages_ff[1]\(31),
      R => '0'
    );
\syncstages_ff_reg[1][32]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(32),
      Q => \syncstages_ff[1]\(32),
      R => '0'
    );
\syncstages_ff_reg[1][33]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(33),
      Q => \syncstages_ff[1]\(33),
      R => '0'
    );
\syncstages_ff_reg[1][34]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(34),
      Q => \syncstages_ff[1]\(34),
      R => '0'
    );
\syncstages_ff_reg[1][35]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(35),
      Q => \syncstages_ff[1]\(35),
      R => '0'
    );
\syncstages_ff_reg[1][36]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(36),
      Q => \syncstages_ff[1]\(36),
      R => '0'
    );
\syncstages_ff_reg[1][37]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(37),
      Q => \syncstages_ff[1]\(37),
      R => '0'
    );
\syncstages_ff_reg[1][38]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(38),
      Q => \syncstages_ff[1]\(38),
      R => '0'
    );
\syncstages_ff_reg[1][39]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(39),
      Q => \syncstages_ff[1]\(39),
      R => '0'
    );
\syncstages_ff_reg[1][3]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(3),
      Q => \syncstages_ff[1]\(3),
      R => '0'
    );
\syncstages_ff_reg[1][40]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(40),
      Q => \syncstages_ff[1]\(40),
      R => '0'
    );
\syncstages_ff_reg[1][41]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(41),
      Q => \syncstages_ff[1]\(41),
      R => '0'
    );
\syncstages_ff_reg[1][42]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(42),
      Q => \syncstages_ff[1]\(42),
      R => '0'
    );
\syncstages_ff_reg[1][43]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(43),
      Q => \syncstages_ff[1]\(43),
      R => '0'
    );
\syncstages_ff_reg[1][44]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(44),
      Q => \syncstages_ff[1]\(44),
      R => '0'
    );
\syncstages_ff_reg[1][45]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(45),
      Q => \syncstages_ff[1]\(45),
      R => '0'
    );
\syncstages_ff_reg[1][46]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(46),
      Q => \syncstages_ff[1]\(46),
      R => '0'
    );
\syncstages_ff_reg[1][47]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(47),
      Q => \syncstages_ff[1]\(47),
      R => '0'
    );
\syncstages_ff_reg[1][48]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(48),
      Q => \syncstages_ff[1]\(48),
      R => '0'
    );
\syncstages_ff_reg[1][49]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(49),
      Q => \syncstages_ff[1]\(49),
      R => '0'
    );
\syncstages_ff_reg[1][4]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(4),
      Q => \syncstages_ff[1]\(4),
      R => '0'
    );
\syncstages_ff_reg[1][50]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(50),
      Q => \syncstages_ff[1]\(50),
      R => '0'
    );
\syncstages_ff_reg[1][51]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(51),
      Q => \syncstages_ff[1]\(51),
      R => '0'
    );
\syncstages_ff_reg[1][52]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(52),
      Q => \syncstages_ff[1]\(52),
      R => '0'
    );
\syncstages_ff_reg[1][53]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(53),
      Q => \syncstages_ff[1]\(53),
      R => '0'
    );
\syncstages_ff_reg[1][54]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(54),
      Q => \syncstages_ff[1]\(54),
      R => '0'
    );
\syncstages_ff_reg[1][55]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(55),
      Q => \syncstages_ff[1]\(55),
      R => '0'
    );
\syncstages_ff_reg[1][56]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(56),
      Q => \syncstages_ff[1]\(56),
      R => '0'
    );
\syncstages_ff_reg[1][57]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(57),
      Q => \syncstages_ff[1]\(57),
      R => '0'
    );
\syncstages_ff_reg[1][58]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(58),
      Q => \syncstages_ff[1]\(58),
      R => '0'
    );
\syncstages_ff_reg[1][59]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(59),
      Q => \syncstages_ff[1]\(59),
      R => '0'
    );
\syncstages_ff_reg[1][5]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(5),
      Q => \syncstages_ff[1]\(5),
      R => '0'
    );
\syncstages_ff_reg[1][60]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(60),
      Q => \syncstages_ff[1]\(60),
      R => '0'
    );
\syncstages_ff_reg[1][61]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(61),
      Q => \syncstages_ff[1]\(61),
      R => '0'
    );
\syncstages_ff_reg[1][62]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(62),
      Q => \syncstages_ff[1]\(62),
      R => '0'
    );
\syncstages_ff_reg[1][63]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(63),
      Q => \syncstages_ff[1]\(63),
      R => '0'
    );
\syncstages_ff_reg[1][64]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(64),
      Q => \syncstages_ff[1]\(64),
      R => '0'
    );
\syncstages_ff_reg[1][65]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(65),
      Q => \syncstages_ff[1]\(65),
      R => '0'
    );
\syncstages_ff_reg[1][66]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(66),
      Q => \syncstages_ff[1]\(66),
      R => '0'
    );
\syncstages_ff_reg[1][67]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(67),
      Q => \syncstages_ff[1]\(67),
      R => '0'
    );
\syncstages_ff_reg[1][68]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(68),
      Q => \syncstages_ff[1]\(68),
      R => '0'
    );
\syncstages_ff_reg[1][69]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(69),
      Q => \syncstages_ff[1]\(69),
      R => '0'
    );
\syncstages_ff_reg[1][6]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(6),
      Q => \syncstages_ff[1]\(6),
      R => '0'
    );
\syncstages_ff_reg[1][70]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(70),
      Q => \syncstages_ff[1]\(70),
      R => '0'
    );
\syncstages_ff_reg[1][71]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(71),
      Q => \syncstages_ff[1]\(71),
      R => '0'
    );
\syncstages_ff_reg[1][72]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(72),
      Q => \syncstages_ff[1]\(72),
      R => '0'
    );
\syncstages_ff_reg[1][73]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(73),
      Q => \syncstages_ff[1]\(73),
      R => '0'
    );
\syncstages_ff_reg[1][74]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(74),
      Q => \syncstages_ff[1]\(74),
      R => '0'
    );
\syncstages_ff_reg[1][75]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(75),
      Q => \syncstages_ff[1]\(75),
      R => '0'
    );
\syncstages_ff_reg[1][76]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(76),
      Q => \syncstages_ff[1]\(76),
      R => '0'
    );
\syncstages_ff_reg[1][77]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(77),
      Q => \syncstages_ff[1]\(77),
      R => '0'
    );
\syncstages_ff_reg[1][78]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(78),
      Q => \syncstages_ff[1]\(78),
      R => '0'
    );
\syncstages_ff_reg[1][79]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(79),
      Q => \syncstages_ff[1]\(79),
      R => '0'
    );
\syncstages_ff_reg[1][7]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(7),
      Q => \syncstages_ff[1]\(7),
      R => '0'
    );
\syncstages_ff_reg[1][80]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(80),
      Q => \syncstages_ff[1]\(80),
      R => '0'
    );
\syncstages_ff_reg[1][81]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(81),
      Q => \syncstages_ff[1]\(81),
      R => '0'
    );
\syncstages_ff_reg[1][82]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(82),
      Q => \syncstages_ff[1]\(82),
      R => '0'
    );
\syncstages_ff_reg[1][83]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(83),
      Q => \syncstages_ff[1]\(83),
      R => '0'
    );
\syncstages_ff_reg[1][84]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(84),
      Q => \syncstages_ff[1]\(84),
      R => '0'
    );
\syncstages_ff_reg[1][85]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(85),
      Q => \syncstages_ff[1]\(85),
      R => '0'
    );
\syncstages_ff_reg[1][86]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(86),
      Q => \syncstages_ff[1]\(86),
      R => '0'
    );
\syncstages_ff_reg[1][87]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(87),
      Q => \syncstages_ff[1]\(87),
      R => '0'
    );
\syncstages_ff_reg[1][88]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(88),
      Q => \syncstages_ff[1]\(88),
      R => '0'
    );
\syncstages_ff_reg[1][89]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(89),
      Q => \syncstages_ff[1]\(89),
      R => '0'
    );
\syncstages_ff_reg[1][8]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(8),
      Q => \syncstages_ff[1]\(8),
      R => '0'
    );
\syncstages_ff_reg[1][90]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(90),
      Q => \syncstages_ff[1]\(90),
      R => '0'
    );
\syncstages_ff_reg[1][91]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(91),
      Q => \syncstages_ff[1]\(91),
      R => '0'
    );
\syncstages_ff_reg[1][92]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(92),
      Q => \syncstages_ff[1]\(92),
      R => '0'
    );
\syncstages_ff_reg[1][93]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(93),
      Q => \syncstages_ff[1]\(93),
      R => '0'
    );
\syncstages_ff_reg[1][94]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(94),
      Q => \syncstages_ff[1]\(94),
      R => '0'
    );
\syncstages_ff_reg[1][95]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(95),
      Q => \syncstages_ff[1]\(95),
      R => '0'
    );
\syncstages_ff_reg[1][96]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(96),
      Q => \syncstages_ff[1]\(96),
      R => '0'
    );
\syncstages_ff_reg[1][9]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(9),
      Q => \syncstages_ff[1]\(9),
      R => '0'
    );
\syncstages_ff_reg[2][0]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(0),
      Q => \syncstages_ff[2]\(0),
      R => '0'
    );
\syncstages_ff_reg[2][10]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(10),
      Q => \syncstages_ff[2]\(10),
      R => '0'
    );
\syncstages_ff_reg[2][11]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(11),
      Q => \syncstages_ff[2]\(11),
      R => '0'
    );
\syncstages_ff_reg[2][12]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(12),
      Q => \syncstages_ff[2]\(12),
      R => '0'
    );
\syncstages_ff_reg[2][13]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(13),
      Q => \syncstages_ff[2]\(13),
      R => '0'
    );
\syncstages_ff_reg[2][14]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(14),
      Q => \syncstages_ff[2]\(14),
      R => '0'
    );
\syncstages_ff_reg[2][15]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(15),
      Q => \syncstages_ff[2]\(15),
      R => '0'
    );
\syncstages_ff_reg[2][16]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(16),
      Q => \syncstages_ff[2]\(16),
      R => '0'
    );
\syncstages_ff_reg[2][17]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(17),
      Q => \syncstages_ff[2]\(17),
      R => '0'
    );
\syncstages_ff_reg[2][18]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(18),
      Q => \syncstages_ff[2]\(18),
      R => '0'
    );
\syncstages_ff_reg[2][19]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(19),
      Q => \syncstages_ff[2]\(19),
      R => '0'
    );
\syncstages_ff_reg[2][1]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(1),
      Q => \syncstages_ff[2]\(1),
      R => '0'
    );
\syncstages_ff_reg[2][20]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(20),
      Q => \syncstages_ff[2]\(20),
      R => '0'
    );
\syncstages_ff_reg[2][21]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(21),
      Q => \syncstages_ff[2]\(21),
      R => '0'
    );
\syncstages_ff_reg[2][22]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(22),
      Q => \syncstages_ff[2]\(22),
      R => '0'
    );
\syncstages_ff_reg[2][23]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(23),
      Q => \syncstages_ff[2]\(23),
      R => '0'
    );
\syncstages_ff_reg[2][24]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(24),
      Q => \syncstages_ff[2]\(24),
      R => '0'
    );
\syncstages_ff_reg[2][25]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(25),
      Q => \syncstages_ff[2]\(25),
      R => '0'
    );
\syncstages_ff_reg[2][26]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(26),
      Q => \syncstages_ff[2]\(26),
      R => '0'
    );
\syncstages_ff_reg[2][27]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(27),
      Q => \syncstages_ff[2]\(27),
      R => '0'
    );
\syncstages_ff_reg[2][28]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(28),
      Q => \syncstages_ff[2]\(28),
      R => '0'
    );
\syncstages_ff_reg[2][29]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(29),
      Q => \syncstages_ff[2]\(29),
      R => '0'
    );
\syncstages_ff_reg[2][2]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(2),
      Q => \syncstages_ff[2]\(2),
      R => '0'
    );
\syncstages_ff_reg[2][30]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(30),
      Q => \syncstages_ff[2]\(30),
      R => '0'
    );
\syncstages_ff_reg[2][31]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(31),
      Q => \syncstages_ff[2]\(31),
      R => '0'
    );
\syncstages_ff_reg[2][32]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(32),
      Q => \syncstages_ff[2]\(32),
      R => '0'
    );
\syncstages_ff_reg[2][33]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(33),
      Q => \syncstages_ff[2]\(33),
      R => '0'
    );
\syncstages_ff_reg[2][34]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(34),
      Q => \syncstages_ff[2]\(34),
      R => '0'
    );
\syncstages_ff_reg[2][35]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(35),
      Q => \syncstages_ff[2]\(35),
      R => '0'
    );
\syncstages_ff_reg[2][36]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(36),
      Q => \syncstages_ff[2]\(36),
      R => '0'
    );
\syncstages_ff_reg[2][37]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(37),
      Q => \syncstages_ff[2]\(37),
      R => '0'
    );
\syncstages_ff_reg[2][38]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(38),
      Q => \syncstages_ff[2]\(38),
      R => '0'
    );
\syncstages_ff_reg[2][39]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(39),
      Q => \syncstages_ff[2]\(39),
      R => '0'
    );
\syncstages_ff_reg[2][3]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(3),
      Q => \syncstages_ff[2]\(3),
      R => '0'
    );
\syncstages_ff_reg[2][40]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(40),
      Q => \syncstages_ff[2]\(40),
      R => '0'
    );
\syncstages_ff_reg[2][41]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(41),
      Q => \syncstages_ff[2]\(41),
      R => '0'
    );
\syncstages_ff_reg[2][42]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(42),
      Q => \syncstages_ff[2]\(42),
      R => '0'
    );
\syncstages_ff_reg[2][43]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(43),
      Q => \syncstages_ff[2]\(43),
      R => '0'
    );
\syncstages_ff_reg[2][44]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(44),
      Q => \syncstages_ff[2]\(44),
      R => '0'
    );
\syncstages_ff_reg[2][45]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(45),
      Q => \syncstages_ff[2]\(45),
      R => '0'
    );
\syncstages_ff_reg[2][46]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(46),
      Q => \syncstages_ff[2]\(46),
      R => '0'
    );
\syncstages_ff_reg[2][47]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(47),
      Q => \syncstages_ff[2]\(47),
      R => '0'
    );
\syncstages_ff_reg[2][48]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(48),
      Q => \syncstages_ff[2]\(48),
      R => '0'
    );
\syncstages_ff_reg[2][49]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(49),
      Q => \syncstages_ff[2]\(49),
      R => '0'
    );
\syncstages_ff_reg[2][4]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(4),
      Q => \syncstages_ff[2]\(4),
      R => '0'
    );
\syncstages_ff_reg[2][50]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(50),
      Q => \syncstages_ff[2]\(50),
      R => '0'
    );
\syncstages_ff_reg[2][51]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(51),
      Q => \syncstages_ff[2]\(51),
      R => '0'
    );
\syncstages_ff_reg[2][52]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(52),
      Q => \syncstages_ff[2]\(52),
      R => '0'
    );
\syncstages_ff_reg[2][53]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(53),
      Q => \syncstages_ff[2]\(53),
      R => '0'
    );
\syncstages_ff_reg[2][54]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(54),
      Q => \syncstages_ff[2]\(54),
      R => '0'
    );
\syncstages_ff_reg[2][55]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(55),
      Q => \syncstages_ff[2]\(55),
      R => '0'
    );
\syncstages_ff_reg[2][56]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(56),
      Q => \syncstages_ff[2]\(56),
      R => '0'
    );
\syncstages_ff_reg[2][57]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(57),
      Q => \syncstages_ff[2]\(57),
      R => '0'
    );
\syncstages_ff_reg[2][58]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(58),
      Q => \syncstages_ff[2]\(58),
      R => '0'
    );
\syncstages_ff_reg[2][59]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(59),
      Q => \syncstages_ff[2]\(59),
      R => '0'
    );
\syncstages_ff_reg[2][5]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(5),
      Q => \syncstages_ff[2]\(5),
      R => '0'
    );
\syncstages_ff_reg[2][60]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(60),
      Q => \syncstages_ff[2]\(60),
      R => '0'
    );
\syncstages_ff_reg[2][61]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(61),
      Q => \syncstages_ff[2]\(61),
      R => '0'
    );
\syncstages_ff_reg[2][62]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(62),
      Q => \syncstages_ff[2]\(62),
      R => '0'
    );
\syncstages_ff_reg[2][63]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(63),
      Q => \syncstages_ff[2]\(63),
      R => '0'
    );
\syncstages_ff_reg[2][64]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(64),
      Q => \syncstages_ff[2]\(64),
      R => '0'
    );
\syncstages_ff_reg[2][65]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(65),
      Q => \syncstages_ff[2]\(65),
      R => '0'
    );
\syncstages_ff_reg[2][66]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(66),
      Q => \syncstages_ff[2]\(66),
      R => '0'
    );
\syncstages_ff_reg[2][67]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(67),
      Q => \syncstages_ff[2]\(67),
      R => '0'
    );
\syncstages_ff_reg[2][68]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(68),
      Q => \syncstages_ff[2]\(68),
      R => '0'
    );
\syncstages_ff_reg[2][69]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(69),
      Q => \syncstages_ff[2]\(69),
      R => '0'
    );
\syncstages_ff_reg[2][6]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(6),
      Q => \syncstages_ff[2]\(6),
      R => '0'
    );
\syncstages_ff_reg[2][70]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(70),
      Q => \syncstages_ff[2]\(70),
      R => '0'
    );
\syncstages_ff_reg[2][71]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(71),
      Q => \syncstages_ff[2]\(71),
      R => '0'
    );
\syncstages_ff_reg[2][72]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(72),
      Q => \syncstages_ff[2]\(72),
      R => '0'
    );
\syncstages_ff_reg[2][73]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(73),
      Q => \syncstages_ff[2]\(73),
      R => '0'
    );
\syncstages_ff_reg[2][74]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(74),
      Q => \syncstages_ff[2]\(74),
      R => '0'
    );
\syncstages_ff_reg[2][75]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(75),
      Q => \syncstages_ff[2]\(75),
      R => '0'
    );
\syncstages_ff_reg[2][76]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(76),
      Q => \syncstages_ff[2]\(76),
      R => '0'
    );
\syncstages_ff_reg[2][77]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(77),
      Q => \syncstages_ff[2]\(77),
      R => '0'
    );
\syncstages_ff_reg[2][78]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(78),
      Q => \syncstages_ff[2]\(78),
      R => '0'
    );
\syncstages_ff_reg[2][79]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(79),
      Q => \syncstages_ff[2]\(79),
      R => '0'
    );
\syncstages_ff_reg[2][7]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(7),
      Q => \syncstages_ff[2]\(7),
      R => '0'
    );
\syncstages_ff_reg[2][80]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(80),
      Q => \syncstages_ff[2]\(80),
      R => '0'
    );
\syncstages_ff_reg[2][81]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(81),
      Q => \syncstages_ff[2]\(81),
      R => '0'
    );
\syncstages_ff_reg[2][82]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(82),
      Q => \syncstages_ff[2]\(82),
      R => '0'
    );
\syncstages_ff_reg[2][83]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(83),
      Q => \syncstages_ff[2]\(83),
      R => '0'
    );
\syncstages_ff_reg[2][84]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(84),
      Q => \syncstages_ff[2]\(84),
      R => '0'
    );
\syncstages_ff_reg[2][85]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(85),
      Q => \syncstages_ff[2]\(85),
      R => '0'
    );
\syncstages_ff_reg[2][86]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(86),
      Q => \syncstages_ff[2]\(86),
      R => '0'
    );
\syncstages_ff_reg[2][87]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(87),
      Q => \syncstages_ff[2]\(87),
      R => '0'
    );
\syncstages_ff_reg[2][88]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(88),
      Q => \syncstages_ff[2]\(88),
      R => '0'
    );
\syncstages_ff_reg[2][89]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(89),
      Q => \syncstages_ff[2]\(89),
      R => '0'
    );
\syncstages_ff_reg[2][8]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(8),
      Q => \syncstages_ff[2]\(8),
      R => '0'
    );
\syncstages_ff_reg[2][90]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(90),
      Q => \syncstages_ff[2]\(90),
      R => '0'
    );
\syncstages_ff_reg[2][91]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(91),
      Q => \syncstages_ff[2]\(91),
      R => '0'
    );
\syncstages_ff_reg[2][92]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(92),
      Q => \syncstages_ff[2]\(92),
      R => '0'
    );
\syncstages_ff_reg[2][93]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(93),
      Q => \syncstages_ff[2]\(93),
      R => '0'
    );
\syncstages_ff_reg[2][94]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(94),
      Q => \syncstages_ff[2]\(94),
      R => '0'
    );
\syncstages_ff_reg[2][95]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(95),
      Q => \syncstages_ff[2]\(95),
      R => '0'
    );
\syncstages_ff_reg[2][96]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(96),
      Q => \syncstages_ff[2]\(96),
      R => '0'
    );
\syncstages_ff_reg[2][9]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(9),
      Q => \syncstages_ff[2]\(9),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized2__2\ is
  port (
    src_clk : in STD_LOGIC;
    src_in : in STD_LOGIC_VECTOR ( 96 downto 0 );
    dest_clk : in STD_LOGIC;
    dest_out : out STD_LOGIC_VECTOR ( 96 downto 0 )
  );
  attribute DEST_SYNC_FF : integer;
  attribute DEST_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized2__2\ : entity is 3;
  attribute INIT_SYNC_FF : integer;
  attribute INIT_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized2__2\ : entity is 0;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized2__2\ : entity is "xpm_cdc_array_single";
  attribute SIM_ASSERT_CHK : integer;
  attribute SIM_ASSERT_CHK of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized2__2\ : entity is 0;
  attribute SRC_INPUT_REG : integer;
  attribute SRC_INPUT_REG of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized2__2\ : entity is 0;
  attribute VERSION : integer;
  attribute VERSION of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized2__2\ : entity is 0;
  attribute WIDTH : integer;
  attribute WIDTH of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized2__2\ : entity is 97;
  attribute XPM_MODULE : string;
  attribute XPM_MODULE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized2__2\ : entity is "TRUE";
  attribute keep_hierarchy : string;
  attribute keep_hierarchy of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized2__2\ : entity is "true";
  attribute xpm_cdc : string;
  attribute xpm_cdc of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized2__2\ : entity is "ARRAY_SINGLE";
end \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized2__2\;

architecture STRUCTURE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized2__2\ is
  signal async_path_bit : STD_LOGIC_VECTOR ( 96 downto 0 );
  signal \syncstages_ff[0]\ : STD_LOGIC_VECTOR ( 96 downto 0 );
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of \syncstages_ff[0]\ : signal is "true";
  attribute async_reg : string;
  attribute async_reg of \syncstages_ff[0]\ : signal is "true";
  attribute xpm_cdc of \syncstages_ff[0]\ : signal is "ARRAY_SINGLE";
  signal \syncstages_ff[1]\ : STD_LOGIC_VECTOR ( 96 downto 0 );
  attribute RTL_KEEP of \syncstages_ff[1]\ : signal is "true";
  attribute async_reg of \syncstages_ff[1]\ : signal is "true";
  attribute xpm_cdc of \syncstages_ff[1]\ : signal is "ARRAY_SINGLE";
  signal \syncstages_ff[2]\ : STD_LOGIC_VECTOR ( 96 downto 0 );
  attribute RTL_KEEP of \syncstages_ff[2]\ : signal is "true";
  attribute async_reg of \syncstages_ff[2]\ : signal is "true";
  attribute xpm_cdc of \syncstages_ff[2]\ : signal is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \syncstages_ff_reg[0][0]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][0]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][10]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][10]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][10]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][11]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][11]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][11]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][12]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][12]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][12]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][13]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][13]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][13]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][14]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][14]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][14]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][15]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][15]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][15]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][16]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][16]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][16]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][17]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][17]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][17]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][18]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][18]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][18]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][19]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][19]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][19]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][1]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][1]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][1]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][20]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][20]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][20]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][21]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][21]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][21]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][22]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][22]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][22]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][23]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][23]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][23]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][24]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][24]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][24]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][25]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][25]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][25]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][26]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][26]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][26]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][27]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][27]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][27]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][28]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][28]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][28]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][29]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][29]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][29]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][2]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][2]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][2]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][30]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][30]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][30]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][31]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][31]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][31]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][32]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][32]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][32]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][33]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][33]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][33]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][34]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][34]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][34]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][35]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][35]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][35]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][36]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][36]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][36]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][37]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][37]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][37]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][38]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][38]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][38]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][39]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][39]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][39]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][3]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][3]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][3]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][40]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][40]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][40]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][41]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][41]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][41]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][42]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][42]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][42]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][43]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][43]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][43]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][44]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][44]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][44]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][45]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][45]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][45]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][46]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][46]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][46]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][47]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][47]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][47]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][48]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][48]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][48]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][49]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][49]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][49]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][4]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][4]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][4]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][50]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][50]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][50]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][51]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][51]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][51]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][52]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][52]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][52]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][53]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][53]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][53]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][54]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][54]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][54]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][55]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][55]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][55]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][56]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][56]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][56]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][57]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][57]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][57]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][58]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][58]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][58]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][59]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][59]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][59]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][5]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][5]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][5]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][60]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][60]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][60]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][61]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][61]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][61]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][62]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][62]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][62]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][63]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][63]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][63]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][64]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][64]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][64]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][65]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][65]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][65]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][66]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][66]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][66]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][67]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][67]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][67]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][68]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][68]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][68]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][69]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][69]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][69]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][6]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][6]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][6]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][70]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][70]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][70]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][71]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][71]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][71]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][72]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][72]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][72]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][73]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][73]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][73]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][74]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][74]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][74]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][75]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][75]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][75]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][76]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][76]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][76]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][77]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][77]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][77]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][78]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][78]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][78]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][79]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][79]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][79]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][7]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][7]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][7]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][80]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][80]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][80]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][81]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][81]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][81]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][82]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][82]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][82]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][83]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][83]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][83]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][84]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][84]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][84]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][85]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][85]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][85]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][86]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][86]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][86]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][87]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][87]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][87]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][88]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][88]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][88]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][89]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][89]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][89]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][8]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][8]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][8]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][90]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][90]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][90]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][91]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][91]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][91]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][92]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][92]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][92]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][93]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][93]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][93]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][94]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][94]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][94]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][95]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][95]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][95]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][96]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][96]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][96]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][9]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][9]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][9]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][0]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][0]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][0]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][10]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][10]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][10]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][11]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][11]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][11]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][12]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][12]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][12]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][13]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][13]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][13]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][14]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][14]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][14]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][15]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][15]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][15]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][16]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][16]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][16]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][17]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][17]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][17]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][18]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][18]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][18]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][19]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][19]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][19]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][1]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][1]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][1]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][20]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][20]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][20]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][21]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][21]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][21]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][22]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][22]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][22]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][23]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][23]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][23]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][24]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][24]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][24]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][25]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][25]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][25]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][26]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][26]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][26]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][27]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][27]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][27]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][28]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][28]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][28]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][29]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][29]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][29]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][2]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][2]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][2]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][30]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][30]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][30]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][31]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][31]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][31]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][32]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][32]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][32]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][33]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][33]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][33]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][34]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][34]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][34]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][35]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][35]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][35]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][36]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][36]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][36]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][37]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][37]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][37]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][38]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][38]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][38]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][39]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][39]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][39]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][3]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][3]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][3]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][40]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][40]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][40]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][41]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][41]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][41]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][42]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][42]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][42]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][43]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][43]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][43]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][44]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][44]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][44]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][45]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][45]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][45]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][46]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][46]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][46]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][47]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][47]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][47]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][48]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][48]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][48]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][49]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][49]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][49]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][4]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][4]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][4]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][50]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][50]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][50]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][51]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][51]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][51]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][52]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][52]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][52]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][53]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][53]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][53]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][54]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][54]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][54]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][55]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][55]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][55]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][56]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][56]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][56]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][57]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][57]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][57]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][58]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][58]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][58]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][59]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][59]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][59]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][5]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][5]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][5]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][60]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][60]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][60]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][61]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][61]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][61]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][62]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][62]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][62]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][63]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][63]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][63]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][64]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][64]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][64]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][65]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][65]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][65]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][66]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][66]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][66]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][67]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][67]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][67]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][68]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][68]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][68]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][69]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][69]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][69]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][6]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][6]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][6]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][70]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][70]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][70]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][71]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][71]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][71]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][72]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][72]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][72]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][73]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][73]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][73]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][74]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][74]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][74]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][75]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][75]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][75]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][76]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][76]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][76]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][77]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][77]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][77]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][78]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][78]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][78]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][79]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][79]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][79]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][7]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][7]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][7]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][80]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][80]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][80]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][81]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][81]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][81]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][82]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][82]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][82]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][83]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][83]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][83]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][84]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][84]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][84]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][85]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][85]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][85]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][86]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][86]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][86]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][87]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][87]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][87]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][88]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][88]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][88]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][89]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][89]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][89]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][8]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][8]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][8]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][90]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][90]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][90]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][91]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][91]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][91]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][92]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][92]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][92]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][93]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][93]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][93]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][94]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][94]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][94]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][95]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][95]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][95]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][96]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][96]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][96]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][9]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][9]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][9]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][0]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][0]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][0]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][10]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][10]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][10]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][11]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][11]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][11]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][12]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][12]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][12]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][13]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][13]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][13]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][14]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][14]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][14]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][15]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][15]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][15]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][16]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][16]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][16]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][17]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][17]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][17]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][18]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][18]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][18]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][19]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][19]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][19]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][1]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][1]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][1]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][20]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][20]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][20]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][21]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][21]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][21]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][22]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][22]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][22]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][23]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][23]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][23]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][24]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][24]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][24]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][25]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][25]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][25]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][26]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][26]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][26]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][27]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][27]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][27]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][28]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][28]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][28]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][29]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][29]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][29]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][2]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][2]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][2]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][30]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][30]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][30]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][31]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][31]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][31]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][32]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][32]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][32]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][33]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][33]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][33]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][34]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][34]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][34]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][35]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][35]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][35]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][36]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][36]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][36]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][37]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][37]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][37]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][38]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][38]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][38]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][39]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][39]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][39]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][3]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][3]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][3]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][40]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][40]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][40]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][41]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][41]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][41]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][42]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][42]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][42]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][43]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][43]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][43]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][44]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][44]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][44]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][45]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][45]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][45]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][46]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][46]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][46]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][47]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][47]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][47]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][48]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][48]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][48]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][49]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][49]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][49]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][4]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][4]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][4]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][50]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][50]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][50]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][51]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][51]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][51]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][52]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][52]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][52]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][53]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][53]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][53]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][54]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][54]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][54]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][55]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][55]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][55]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][56]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][56]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][56]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][57]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][57]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][57]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][58]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][58]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][58]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][59]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][59]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][59]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][5]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][5]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][5]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][60]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][60]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][60]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][61]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][61]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][61]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][62]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][62]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][62]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][63]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][63]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][63]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][64]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][64]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][64]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][65]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][65]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][65]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][66]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][66]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][66]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][67]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][67]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][67]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][68]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][68]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][68]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][69]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][69]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][69]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][6]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][6]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][6]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][70]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][70]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][70]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][71]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][71]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][71]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][72]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][72]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][72]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][73]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][73]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][73]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][74]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][74]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][74]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][75]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][75]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][75]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][76]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][76]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][76]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][77]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][77]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][77]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][78]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][78]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][78]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][79]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][79]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][79]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][7]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][7]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][7]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][80]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][80]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][80]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][81]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][81]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][81]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][82]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][82]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][82]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][83]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][83]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][83]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][84]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][84]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][84]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][85]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][85]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][85]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][86]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][86]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][86]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][87]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][87]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][87]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][88]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][88]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][88]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][89]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][89]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][89]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][8]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][8]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][8]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][90]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][90]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][90]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][91]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][91]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][91]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][92]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][92]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][92]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][93]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][93]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][93]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][94]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][94]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][94]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][95]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][95]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][95]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][96]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][96]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][96]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2][9]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2][9]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2][9]\ : label is "ARRAY_SINGLE";
begin
  async_path_bit(96) <= src_in(96);
  async_path_bit(79 downto 64) <= src_in(79 downto 64);
  async_path_bit(55) <= src_in(63);
  async_path_bit(54 downto 32) <= src_in(54 downto 32);
  async_path_bit(23) <= src_in(31);
  async_path_bit(22 downto 0) <= src_in(22 downto 0);
  dest_out(96 downto 0) <= \syncstages_ff[2]\(96 downto 0);
async_path_bit_inst: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => async_path_bit(55),
      O => async_path_bit(63)
    );
\async_path_bit_inst__0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => async_path_bit(55),
      O => async_path_bit(62)
    );
\async_path_bit_inst__1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => async_path_bit(55),
      O => async_path_bit(61)
    );
\async_path_bit_inst__10\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => async_path_bit(23),
      O => async_path_bit(28)
    );
\async_path_bit_inst__11\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => async_path_bit(23),
      O => async_path_bit(27)
    );
\async_path_bit_inst__12\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => async_path_bit(23),
      O => async_path_bit(26)
    );
\async_path_bit_inst__13\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => async_path_bit(23),
      O => async_path_bit(25)
    );
\async_path_bit_inst__14\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => async_path_bit(23),
      O => async_path_bit(24)
    );
\async_path_bit_inst__2\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => async_path_bit(55),
      O => async_path_bit(60)
    );
\async_path_bit_inst__3\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => async_path_bit(55),
      O => async_path_bit(59)
    );
\async_path_bit_inst__4\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => async_path_bit(55),
      O => async_path_bit(58)
    );
\async_path_bit_inst__5\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => async_path_bit(55),
      O => async_path_bit(57)
    );
\async_path_bit_inst__6\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => async_path_bit(55),
      O => async_path_bit(56)
    );
\async_path_bit_inst__7\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => async_path_bit(23),
      O => async_path_bit(31)
    );
\async_path_bit_inst__8\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => async_path_bit(23),
      O => async_path_bit(30)
    );
\async_path_bit_inst__9\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => async_path_bit(23),
      O => async_path_bit(29)
    );
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => async_path_bit(95)
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => async_path_bit(94)
    );
i_10: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => async_path_bit(85)
    );
i_11: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => async_path_bit(84)
    );
i_12: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => async_path_bit(83)
    );
i_13: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => async_path_bit(82)
    );
i_14: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => async_path_bit(81)
    );
i_15: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => async_path_bit(80)
    );
i_2: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => async_path_bit(93)
    );
i_3: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => async_path_bit(92)
    );
i_4: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => async_path_bit(91)
    );
i_5: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => async_path_bit(90)
    );
i_6: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => async_path_bit(89)
    );
i_7: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => async_path_bit(88)
    );
i_8: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => async_path_bit(87)
    );
i_9: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => async_path_bit(86)
    );
\syncstages_ff_reg[0][0]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(0),
      Q => \syncstages_ff[0]\(0),
      R => '0'
    );
\syncstages_ff_reg[0][10]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(10),
      Q => \syncstages_ff[0]\(10),
      R => '0'
    );
\syncstages_ff_reg[0][11]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(11),
      Q => \syncstages_ff[0]\(11),
      R => '0'
    );
\syncstages_ff_reg[0][12]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(12),
      Q => \syncstages_ff[0]\(12),
      R => '0'
    );
\syncstages_ff_reg[0][13]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(13),
      Q => \syncstages_ff[0]\(13),
      R => '0'
    );
\syncstages_ff_reg[0][14]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(14),
      Q => \syncstages_ff[0]\(14),
      R => '0'
    );
\syncstages_ff_reg[0][15]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(15),
      Q => \syncstages_ff[0]\(15),
      R => '0'
    );
\syncstages_ff_reg[0][16]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(16),
      Q => \syncstages_ff[0]\(16),
      R => '0'
    );
\syncstages_ff_reg[0][17]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(17),
      Q => \syncstages_ff[0]\(17),
      R => '0'
    );
\syncstages_ff_reg[0][18]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(18),
      Q => \syncstages_ff[0]\(18),
      R => '0'
    );
\syncstages_ff_reg[0][19]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(19),
      Q => \syncstages_ff[0]\(19),
      R => '0'
    );
\syncstages_ff_reg[0][1]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(1),
      Q => \syncstages_ff[0]\(1),
      R => '0'
    );
\syncstages_ff_reg[0][20]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(20),
      Q => \syncstages_ff[0]\(20),
      R => '0'
    );
\syncstages_ff_reg[0][21]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(21),
      Q => \syncstages_ff[0]\(21),
      R => '0'
    );
\syncstages_ff_reg[0][22]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(22),
      Q => \syncstages_ff[0]\(22),
      R => '0'
    );
\syncstages_ff_reg[0][23]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(23),
      Q => \syncstages_ff[0]\(23),
      R => '0'
    );
\syncstages_ff_reg[0][24]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(24),
      Q => \syncstages_ff[0]\(24),
      R => '0'
    );
\syncstages_ff_reg[0][25]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(25),
      Q => \syncstages_ff[0]\(25),
      R => '0'
    );
\syncstages_ff_reg[0][26]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(26),
      Q => \syncstages_ff[0]\(26),
      R => '0'
    );
\syncstages_ff_reg[0][27]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(27),
      Q => \syncstages_ff[0]\(27),
      R => '0'
    );
\syncstages_ff_reg[0][28]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(28),
      Q => \syncstages_ff[0]\(28),
      R => '0'
    );
\syncstages_ff_reg[0][29]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(29),
      Q => \syncstages_ff[0]\(29),
      R => '0'
    );
\syncstages_ff_reg[0][2]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(2),
      Q => \syncstages_ff[0]\(2),
      R => '0'
    );
\syncstages_ff_reg[0][30]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(30),
      Q => \syncstages_ff[0]\(30),
      R => '0'
    );
\syncstages_ff_reg[0][31]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(31),
      Q => \syncstages_ff[0]\(31),
      R => '0'
    );
\syncstages_ff_reg[0][32]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(32),
      Q => \syncstages_ff[0]\(32),
      R => '0'
    );
\syncstages_ff_reg[0][33]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(33),
      Q => \syncstages_ff[0]\(33),
      R => '0'
    );
\syncstages_ff_reg[0][34]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(34),
      Q => \syncstages_ff[0]\(34),
      R => '0'
    );
\syncstages_ff_reg[0][35]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(35),
      Q => \syncstages_ff[0]\(35),
      R => '0'
    );
\syncstages_ff_reg[0][36]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(36),
      Q => \syncstages_ff[0]\(36),
      R => '0'
    );
\syncstages_ff_reg[0][37]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(37),
      Q => \syncstages_ff[0]\(37),
      R => '0'
    );
\syncstages_ff_reg[0][38]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(38),
      Q => \syncstages_ff[0]\(38),
      R => '0'
    );
\syncstages_ff_reg[0][39]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(39),
      Q => \syncstages_ff[0]\(39),
      R => '0'
    );
\syncstages_ff_reg[0][3]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(3),
      Q => \syncstages_ff[0]\(3),
      R => '0'
    );
\syncstages_ff_reg[0][40]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(40),
      Q => \syncstages_ff[0]\(40),
      R => '0'
    );
\syncstages_ff_reg[0][41]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(41),
      Q => \syncstages_ff[0]\(41),
      R => '0'
    );
\syncstages_ff_reg[0][42]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(42),
      Q => \syncstages_ff[0]\(42),
      R => '0'
    );
\syncstages_ff_reg[0][43]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(43),
      Q => \syncstages_ff[0]\(43),
      R => '0'
    );
\syncstages_ff_reg[0][44]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(44),
      Q => \syncstages_ff[0]\(44),
      R => '0'
    );
\syncstages_ff_reg[0][45]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(45),
      Q => \syncstages_ff[0]\(45),
      R => '0'
    );
\syncstages_ff_reg[0][46]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(46),
      Q => \syncstages_ff[0]\(46),
      R => '0'
    );
\syncstages_ff_reg[0][47]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(47),
      Q => \syncstages_ff[0]\(47),
      R => '0'
    );
\syncstages_ff_reg[0][48]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(48),
      Q => \syncstages_ff[0]\(48),
      R => '0'
    );
\syncstages_ff_reg[0][49]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(49),
      Q => \syncstages_ff[0]\(49),
      R => '0'
    );
\syncstages_ff_reg[0][4]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(4),
      Q => \syncstages_ff[0]\(4),
      R => '0'
    );
\syncstages_ff_reg[0][50]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(50),
      Q => \syncstages_ff[0]\(50),
      R => '0'
    );
\syncstages_ff_reg[0][51]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(51),
      Q => \syncstages_ff[0]\(51),
      R => '0'
    );
\syncstages_ff_reg[0][52]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(52),
      Q => \syncstages_ff[0]\(52),
      R => '0'
    );
\syncstages_ff_reg[0][53]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(53),
      Q => \syncstages_ff[0]\(53),
      R => '0'
    );
\syncstages_ff_reg[0][54]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(54),
      Q => \syncstages_ff[0]\(54),
      R => '0'
    );
\syncstages_ff_reg[0][55]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(55),
      Q => \syncstages_ff[0]\(55),
      R => '0'
    );
\syncstages_ff_reg[0][56]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(56),
      Q => \syncstages_ff[0]\(56),
      R => '0'
    );
\syncstages_ff_reg[0][57]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(57),
      Q => \syncstages_ff[0]\(57),
      R => '0'
    );
\syncstages_ff_reg[0][58]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(58),
      Q => \syncstages_ff[0]\(58),
      R => '0'
    );
\syncstages_ff_reg[0][59]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(59),
      Q => \syncstages_ff[0]\(59),
      R => '0'
    );
\syncstages_ff_reg[0][5]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(5),
      Q => \syncstages_ff[0]\(5),
      R => '0'
    );
\syncstages_ff_reg[0][60]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(60),
      Q => \syncstages_ff[0]\(60),
      R => '0'
    );
\syncstages_ff_reg[0][61]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(61),
      Q => \syncstages_ff[0]\(61),
      R => '0'
    );
\syncstages_ff_reg[0][62]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(62),
      Q => \syncstages_ff[0]\(62),
      R => '0'
    );
\syncstages_ff_reg[0][63]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(63),
      Q => \syncstages_ff[0]\(63),
      R => '0'
    );
\syncstages_ff_reg[0][64]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(64),
      Q => \syncstages_ff[0]\(64),
      R => '0'
    );
\syncstages_ff_reg[0][65]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(65),
      Q => \syncstages_ff[0]\(65),
      R => '0'
    );
\syncstages_ff_reg[0][66]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(66),
      Q => \syncstages_ff[0]\(66),
      R => '0'
    );
\syncstages_ff_reg[0][67]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(67),
      Q => \syncstages_ff[0]\(67),
      R => '0'
    );
\syncstages_ff_reg[0][68]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(68),
      Q => \syncstages_ff[0]\(68),
      R => '0'
    );
\syncstages_ff_reg[0][69]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(69),
      Q => \syncstages_ff[0]\(69),
      R => '0'
    );
\syncstages_ff_reg[0][6]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(6),
      Q => \syncstages_ff[0]\(6),
      R => '0'
    );
\syncstages_ff_reg[0][70]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(70),
      Q => \syncstages_ff[0]\(70),
      R => '0'
    );
\syncstages_ff_reg[0][71]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(71),
      Q => \syncstages_ff[0]\(71),
      R => '0'
    );
\syncstages_ff_reg[0][72]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(72),
      Q => \syncstages_ff[0]\(72),
      R => '0'
    );
\syncstages_ff_reg[0][73]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(73),
      Q => \syncstages_ff[0]\(73),
      R => '0'
    );
\syncstages_ff_reg[0][74]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(74),
      Q => \syncstages_ff[0]\(74),
      R => '0'
    );
\syncstages_ff_reg[0][75]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(75),
      Q => \syncstages_ff[0]\(75),
      R => '0'
    );
\syncstages_ff_reg[0][76]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(76),
      Q => \syncstages_ff[0]\(76),
      R => '0'
    );
\syncstages_ff_reg[0][77]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(77),
      Q => \syncstages_ff[0]\(77),
      R => '0'
    );
\syncstages_ff_reg[0][78]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(78),
      Q => \syncstages_ff[0]\(78),
      R => '0'
    );
\syncstages_ff_reg[0][79]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(79),
      Q => \syncstages_ff[0]\(79),
      R => '0'
    );
\syncstages_ff_reg[0][7]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(7),
      Q => \syncstages_ff[0]\(7),
      R => '0'
    );
\syncstages_ff_reg[0][80]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(80),
      Q => \syncstages_ff[0]\(80),
      R => '0'
    );
\syncstages_ff_reg[0][81]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(81),
      Q => \syncstages_ff[0]\(81),
      R => '0'
    );
\syncstages_ff_reg[0][82]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(82),
      Q => \syncstages_ff[0]\(82),
      R => '0'
    );
\syncstages_ff_reg[0][83]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(83),
      Q => \syncstages_ff[0]\(83),
      R => '0'
    );
\syncstages_ff_reg[0][84]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(84),
      Q => \syncstages_ff[0]\(84),
      R => '0'
    );
\syncstages_ff_reg[0][85]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(85),
      Q => \syncstages_ff[0]\(85),
      R => '0'
    );
\syncstages_ff_reg[0][86]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(86),
      Q => \syncstages_ff[0]\(86),
      R => '0'
    );
\syncstages_ff_reg[0][87]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(87),
      Q => \syncstages_ff[0]\(87),
      R => '0'
    );
\syncstages_ff_reg[0][88]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(88),
      Q => \syncstages_ff[0]\(88),
      R => '0'
    );
\syncstages_ff_reg[0][89]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(89),
      Q => \syncstages_ff[0]\(89),
      R => '0'
    );
\syncstages_ff_reg[0][8]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(8),
      Q => \syncstages_ff[0]\(8),
      R => '0'
    );
\syncstages_ff_reg[0][90]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(90),
      Q => \syncstages_ff[0]\(90),
      R => '0'
    );
\syncstages_ff_reg[0][91]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(91),
      Q => \syncstages_ff[0]\(91),
      R => '0'
    );
\syncstages_ff_reg[0][92]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(92),
      Q => \syncstages_ff[0]\(92),
      R => '0'
    );
\syncstages_ff_reg[0][93]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(93),
      Q => \syncstages_ff[0]\(93),
      R => '0'
    );
\syncstages_ff_reg[0][94]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(94),
      Q => \syncstages_ff[0]\(94),
      R => '0'
    );
\syncstages_ff_reg[0][95]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(95),
      Q => \syncstages_ff[0]\(95),
      R => '0'
    );
\syncstages_ff_reg[0][96]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(96),
      Q => \syncstages_ff[0]\(96),
      R => '0'
    );
\syncstages_ff_reg[0][9]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(9),
      Q => \syncstages_ff[0]\(9),
      R => '0'
    );
\syncstages_ff_reg[1][0]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(0),
      Q => \syncstages_ff[1]\(0),
      R => '0'
    );
\syncstages_ff_reg[1][10]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(10),
      Q => \syncstages_ff[1]\(10),
      R => '0'
    );
\syncstages_ff_reg[1][11]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(11),
      Q => \syncstages_ff[1]\(11),
      R => '0'
    );
\syncstages_ff_reg[1][12]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(12),
      Q => \syncstages_ff[1]\(12),
      R => '0'
    );
\syncstages_ff_reg[1][13]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(13),
      Q => \syncstages_ff[1]\(13),
      R => '0'
    );
\syncstages_ff_reg[1][14]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(14),
      Q => \syncstages_ff[1]\(14),
      R => '0'
    );
\syncstages_ff_reg[1][15]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(15),
      Q => \syncstages_ff[1]\(15),
      R => '0'
    );
\syncstages_ff_reg[1][16]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(16),
      Q => \syncstages_ff[1]\(16),
      R => '0'
    );
\syncstages_ff_reg[1][17]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(17),
      Q => \syncstages_ff[1]\(17),
      R => '0'
    );
\syncstages_ff_reg[1][18]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(18),
      Q => \syncstages_ff[1]\(18),
      R => '0'
    );
\syncstages_ff_reg[1][19]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(19),
      Q => \syncstages_ff[1]\(19),
      R => '0'
    );
\syncstages_ff_reg[1][1]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(1),
      Q => \syncstages_ff[1]\(1),
      R => '0'
    );
\syncstages_ff_reg[1][20]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(20),
      Q => \syncstages_ff[1]\(20),
      R => '0'
    );
\syncstages_ff_reg[1][21]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(21),
      Q => \syncstages_ff[1]\(21),
      R => '0'
    );
\syncstages_ff_reg[1][22]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(22),
      Q => \syncstages_ff[1]\(22),
      R => '0'
    );
\syncstages_ff_reg[1][23]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(23),
      Q => \syncstages_ff[1]\(23),
      R => '0'
    );
\syncstages_ff_reg[1][24]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(24),
      Q => \syncstages_ff[1]\(24),
      R => '0'
    );
\syncstages_ff_reg[1][25]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(25),
      Q => \syncstages_ff[1]\(25),
      R => '0'
    );
\syncstages_ff_reg[1][26]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(26),
      Q => \syncstages_ff[1]\(26),
      R => '0'
    );
\syncstages_ff_reg[1][27]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(27),
      Q => \syncstages_ff[1]\(27),
      R => '0'
    );
\syncstages_ff_reg[1][28]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(28),
      Q => \syncstages_ff[1]\(28),
      R => '0'
    );
\syncstages_ff_reg[1][29]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(29),
      Q => \syncstages_ff[1]\(29),
      R => '0'
    );
\syncstages_ff_reg[1][2]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(2),
      Q => \syncstages_ff[1]\(2),
      R => '0'
    );
\syncstages_ff_reg[1][30]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(30),
      Q => \syncstages_ff[1]\(30),
      R => '0'
    );
\syncstages_ff_reg[1][31]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(31),
      Q => \syncstages_ff[1]\(31),
      R => '0'
    );
\syncstages_ff_reg[1][32]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(32),
      Q => \syncstages_ff[1]\(32),
      R => '0'
    );
\syncstages_ff_reg[1][33]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(33),
      Q => \syncstages_ff[1]\(33),
      R => '0'
    );
\syncstages_ff_reg[1][34]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(34),
      Q => \syncstages_ff[1]\(34),
      R => '0'
    );
\syncstages_ff_reg[1][35]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(35),
      Q => \syncstages_ff[1]\(35),
      R => '0'
    );
\syncstages_ff_reg[1][36]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(36),
      Q => \syncstages_ff[1]\(36),
      R => '0'
    );
\syncstages_ff_reg[1][37]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(37),
      Q => \syncstages_ff[1]\(37),
      R => '0'
    );
\syncstages_ff_reg[1][38]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(38),
      Q => \syncstages_ff[1]\(38),
      R => '0'
    );
\syncstages_ff_reg[1][39]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(39),
      Q => \syncstages_ff[1]\(39),
      R => '0'
    );
\syncstages_ff_reg[1][3]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(3),
      Q => \syncstages_ff[1]\(3),
      R => '0'
    );
\syncstages_ff_reg[1][40]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(40),
      Q => \syncstages_ff[1]\(40),
      R => '0'
    );
\syncstages_ff_reg[1][41]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(41),
      Q => \syncstages_ff[1]\(41),
      R => '0'
    );
\syncstages_ff_reg[1][42]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(42),
      Q => \syncstages_ff[1]\(42),
      R => '0'
    );
\syncstages_ff_reg[1][43]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(43),
      Q => \syncstages_ff[1]\(43),
      R => '0'
    );
\syncstages_ff_reg[1][44]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(44),
      Q => \syncstages_ff[1]\(44),
      R => '0'
    );
\syncstages_ff_reg[1][45]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(45),
      Q => \syncstages_ff[1]\(45),
      R => '0'
    );
\syncstages_ff_reg[1][46]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(46),
      Q => \syncstages_ff[1]\(46),
      R => '0'
    );
\syncstages_ff_reg[1][47]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(47),
      Q => \syncstages_ff[1]\(47),
      R => '0'
    );
\syncstages_ff_reg[1][48]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(48),
      Q => \syncstages_ff[1]\(48),
      R => '0'
    );
\syncstages_ff_reg[1][49]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(49),
      Q => \syncstages_ff[1]\(49),
      R => '0'
    );
\syncstages_ff_reg[1][4]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(4),
      Q => \syncstages_ff[1]\(4),
      R => '0'
    );
\syncstages_ff_reg[1][50]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(50),
      Q => \syncstages_ff[1]\(50),
      R => '0'
    );
\syncstages_ff_reg[1][51]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(51),
      Q => \syncstages_ff[1]\(51),
      R => '0'
    );
\syncstages_ff_reg[1][52]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(52),
      Q => \syncstages_ff[1]\(52),
      R => '0'
    );
\syncstages_ff_reg[1][53]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(53),
      Q => \syncstages_ff[1]\(53),
      R => '0'
    );
\syncstages_ff_reg[1][54]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(54),
      Q => \syncstages_ff[1]\(54),
      R => '0'
    );
\syncstages_ff_reg[1][55]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(55),
      Q => \syncstages_ff[1]\(55),
      R => '0'
    );
\syncstages_ff_reg[1][56]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(56),
      Q => \syncstages_ff[1]\(56),
      R => '0'
    );
\syncstages_ff_reg[1][57]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(57),
      Q => \syncstages_ff[1]\(57),
      R => '0'
    );
\syncstages_ff_reg[1][58]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(58),
      Q => \syncstages_ff[1]\(58),
      R => '0'
    );
\syncstages_ff_reg[1][59]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(59),
      Q => \syncstages_ff[1]\(59),
      R => '0'
    );
\syncstages_ff_reg[1][5]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(5),
      Q => \syncstages_ff[1]\(5),
      R => '0'
    );
\syncstages_ff_reg[1][60]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(60),
      Q => \syncstages_ff[1]\(60),
      R => '0'
    );
\syncstages_ff_reg[1][61]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(61),
      Q => \syncstages_ff[1]\(61),
      R => '0'
    );
\syncstages_ff_reg[1][62]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(62),
      Q => \syncstages_ff[1]\(62),
      R => '0'
    );
\syncstages_ff_reg[1][63]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(63),
      Q => \syncstages_ff[1]\(63),
      R => '0'
    );
\syncstages_ff_reg[1][64]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(64),
      Q => \syncstages_ff[1]\(64),
      R => '0'
    );
\syncstages_ff_reg[1][65]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(65),
      Q => \syncstages_ff[1]\(65),
      R => '0'
    );
\syncstages_ff_reg[1][66]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(66),
      Q => \syncstages_ff[1]\(66),
      R => '0'
    );
\syncstages_ff_reg[1][67]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(67),
      Q => \syncstages_ff[1]\(67),
      R => '0'
    );
\syncstages_ff_reg[1][68]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(68),
      Q => \syncstages_ff[1]\(68),
      R => '0'
    );
\syncstages_ff_reg[1][69]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(69),
      Q => \syncstages_ff[1]\(69),
      R => '0'
    );
\syncstages_ff_reg[1][6]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(6),
      Q => \syncstages_ff[1]\(6),
      R => '0'
    );
\syncstages_ff_reg[1][70]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(70),
      Q => \syncstages_ff[1]\(70),
      R => '0'
    );
\syncstages_ff_reg[1][71]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(71),
      Q => \syncstages_ff[1]\(71),
      R => '0'
    );
\syncstages_ff_reg[1][72]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(72),
      Q => \syncstages_ff[1]\(72),
      R => '0'
    );
\syncstages_ff_reg[1][73]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(73),
      Q => \syncstages_ff[1]\(73),
      R => '0'
    );
\syncstages_ff_reg[1][74]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(74),
      Q => \syncstages_ff[1]\(74),
      R => '0'
    );
\syncstages_ff_reg[1][75]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(75),
      Q => \syncstages_ff[1]\(75),
      R => '0'
    );
\syncstages_ff_reg[1][76]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(76),
      Q => \syncstages_ff[1]\(76),
      R => '0'
    );
\syncstages_ff_reg[1][77]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(77),
      Q => \syncstages_ff[1]\(77),
      R => '0'
    );
\syncstages_ff_reg[1][78]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(78),
      Q => \syncstages_ff[1]\(78),
      R => '0'
    );
\syncstages_ff_reg[1][79]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(79),
      Q => \syncstages_ff[1]\(79),
      R => '0'
    );
\syncstages_ff_reg[1][7]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(7),
      Q => \syncstages_ff[1]\(7),
      R => '0'
    );
\syncstages_ff_reg[1][80]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(80),
      Q => \syncstages_ff[1]\(80),
      R => '0'
    );
\syncstages_ff_reg[1][81]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(81),
      Q => \syncstages_ff[1]\(81),
      R => '0'
    );
\syncstages_ff_reg[1][82]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(82),
      Q => \syncstages_ff[1]\(82),
      R => '0'
    );
\syncstages_ff_reg[1][83]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(83),
      Q => \syncstages_ff[1]\(83),
      R => '0'
    );
\syncstages_ff_reg[1][84]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(84),
      Q => \syncstages_ff[1]\(84),
      R => '0'
    );
\syncstages_ff_reg[1][85]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(85),
      Q => \syncstages_ff[1]\(85),
      R => '0'
    );
\syncstages_ff_reg[1][86]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(86),
      Q => \syncstages_ff[1]\(86),
      R => '0'
    );
\syncstages_ff_reg[1][87]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(87),
      Q => \syncstages_ff[1]\(87),
      R => '0'
    );
\syncstages_ff_reg[1][88]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(88),
      Q => \syncstages_ff[1]\(88),
      R => '0'
    );
\syncstages_ff_reg[1][89]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(89),
      Q => \syncstages_ff[1]\(89),
      R => '0'
    );
\syncstages_ff_reg[1][8]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(8),
      Q => \syncstages_ff[1]\(8),
      R => '0'
    );
\syncstages_ff_reg[1][90]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(90),
      Q => \syncstages_ff[1]\(90),
      R => '0'
    );
\syncstages_ff_reg[1][91]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(91),
      Q => \syncstages_ff[1]\(91),
      R => '0'
    );
\syncstages_ff_reg[1][92]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(92),
      Q => \syncstages_ff[1]\(92),
      R => '0'
    );
\syncstages_ff_reg[1][93]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(93),
      Q => \syncstages_ff[1]\(93),
      R => '0'
    );
\syncstages_ff_reg[1][94]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(94),
      Q => \syncstages_ff[1]\(94),
      R => '0'
    );
\syncstages_ff_reg[1][95]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(95),
      Q => \syncstages_ff[1]\(95),
      R => '0'
    );
\syncstages_ff_reg[1][96]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(96),
      Q => \syncstages_ff[1]\(96),
      R => '0'
    );
\syncstages_ff_reg[1][9]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(9),
      Q => \syncstages_ff[1]\(9),
      R => '0'
    );
\syncstages_ff_reg[2][0]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(0),
      Q => \syncstages_ff[2]\(0),
      R => '0'
    );
\syncstages_ff_reg[2][10]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(10),
      Q => \syncstages_ff[2]\(10),
      R => '0'
    );
\syncstages_ff_reg[2][11]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(11),
      Q => \syncstages_ff[2]\(11),
      R => '0'
    );
\syncstages_ff_reg[2][12]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(12),
      Q => \syncstages_ff[2]\(12),
      R => '0'
    );
\syncstages_ff_reg[2][13]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(13),
      Q => \syncstages_ff[2]\(13),
      R => '0'
    );
\syncstages_ff_reg[2][14]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(14),
      Q => \syncstages_ff[2]\(14),
      R => '0'
    );
\syncstages_ff_reg[2][15]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(15),
      Q => \syncstages_ff[2]\(15),
      R => '0'
    );
\syncstages_ff_reg[2][16]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(16),
      Q => \syncstages_ff[2]\(16),
      R => '0'
    );
\syncstages_ff_reg[2][17]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(17),
      Q => \syncstages_ff[2]\(17),
      R => '0'
    );
\syncstages_ff_reg[2][18]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(18),
      Q => \syncstages_ff[2]\(18),
      R => '0'
    );
\syncstages_ff_reg[2][19]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(19),
      Q => \syncstages_ff[2]\(19),
      R => '0'
    );
\syncstages_ff_reg[2][1]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(1),
      Q => \syncstages_ff[2]\(1),
      R => '0'
    );
\syncstages_ff_reg[2][20]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(20),
      Q => \syncstages_ff[2]\(20),
      R => '0'
    );
\syncstages_ff_reg[2][21]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(21),
      Q => \syncstages_ff[2]\(21),
      R => '0'
    );
\syncstages_ff_reg[2][22]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(22),
      Q => \syncstages_ff[2]\(22),
      R => '0'
    );
\syncstages_ff_reg[2][23]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(23),
      Q => \syncstages_ff[2]\(23),
      R => '0'
    );
\syncstages_ff_reg[2][24]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(24),
      Q => \syncstages_ff[2]\(24),
      R => '0'
    );
\syncstages_ff_reg[2][25]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(25),
      Q => \syncstages_ff[2]\(25),
      R => '0'
    );
\syncstages_ff_reg[2][26]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(26),
      Q => \syncstages_ff[2]\(26),
      R => '0'
    );
\syncstages_ff_reg[2][27]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(27),
      Q => \syncstages_ff[2]\(27),
      R => '0'
    );
\syncstages_ff_reg[2][28]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(28),
      Q => \syncstages_ff[2]\(28),
      R => '0'
    );
\syncstages_ff_reg[2][29]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(29),
      Q => \syncstages_ff[2]\(29),
      R => '0'
    );
\syncstages_ff_reg[2][2]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(2),
      Q => \syncstages_ff[2]\(2),
      R => '0'
    );
\syncstages_ff_reg[2][30]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(30),
      Q => \syncstages_ff[2]\(30),
      R => '0'
    );
\syncstages_ff_reg[2][31]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(31),
      Q => \syncstages_ff[2]\(31),
      R => '0'
    );
\syncstages_ff_reg[2][32]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(32),
      Q => \syncstages_ff[2]\(32),
      R => '0'
    );
\syncstages_ff_reg[2][33]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(33),
      Q => \syncstages_ff[2]\(33),
      R => '0'
    );
\syncstages_ff_reg[2][34]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(34),
      Q => \syncstages_ff[2]\(34),
      R => '0'
    );
\syncstages_ff_reg[2][35]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(35),
      Q => \syncstages_ff[2]\(35),
      R => '0'
    );
\syncstages_ff_reg[2][36]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(36),
      Q => \syncstages_ff[2]\(36),
      R => '0'
    );
\syncstages_ff_reg[2][37]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(37),
      Q => \syncstages_ff[2]\(37),
      R => '0'
    );
\syncstages_ff_reg[2][38]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(38),
      Q => \syncstages_ff[2]\(38),
      R => '0'
    );
\syncstages_ff_reg[2][39]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(39),
      Q => \syncstages_ff[2]\(39),
      R => '0'
    );
\syncstages_ff_reg[2][3]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(3),
      Q => \syncstages_ff[2]\(3),
      R => '0'
    );
\syncstages_ff_reg[2][40]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(40),
      Q => \syncstages_ff[2]\(40),
      R => '0'
    );
\syncstages_ff_reg[2][41]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(41),
      Q => \syncstages_ff[2]\(41),
      R => '0'
    );
\syncstages_ff_reg[2][42]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(42),
      Q => \syncstages_ff[2]\(42),
      R => '0'
    );
\syncstages_ff_reg[2][43]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(43),
      Q => \syncstages_ff[2]\(43),
      R => '0'
    );
\syncstages_ff_reg[2][44]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(44),
      Q => \syncstages_ff[2]\(44),
      R => '0'
    );
\syncstages_ff_reg[2][45]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(45),
      Q => \syncstages_ff[2]\(45),
      R => '0'
    );
\syncstages_ff_reg[2][46]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(46),
      Q => \syncstages_ff[2]\(46),
      R => '0'
    );
\syncstages_ff_reg[2][47]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(47),
      Q => \syncstages_ff[2]\(47),
      R => '0'
    );
\syncstages_ff_reg[2][48]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(48),
      Q => \syncstages_ff[2]\(48),
      R => '0'
    );
\syncstages_ff_reg[2][49]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(49),
      Q => \syncstages_ff[2]\(49),
      R => '0'
    );
\syncstages_ff_reg[2][4]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(4),
      Q => \syncstages_ff[2]\(4),
      R => '0'
    );
\syncstages_ff_reg[2][50]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(50),
      Q => \syncstages_ff[2]\(50),
      R => '0'
    );
\syncstages_ff_reg[2][51]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(51),
      Q => \syncstages_ff[2]\(51),
      R => '0'
    );
\syncstages_ff_reg[2][52]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(52),
      Q => \syncstages_ff[2]\(52),
      R => '0'
    );
\syncstages_ff_reg[2][53]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(53),
      Q => \syncstages_ff[2]\(53),
      R => '0'
    );
\syncstages_ff_reg[2][54]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(54),
      Q => \syncstages_ff[2]\(54),
      R => '0'
    );
\syncstages_ff_reg[2][55]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(55),
      Q => \syncstages_ff[2]\(55),
      R => '0'
    );
\syncstages_ff_reg[2][56]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(56),
      Q => \syncstages_ff[2]\(56),
      R => '0'
    );
\syncstages_ff_reg[2][57]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(57),
      Q => \syncstages_ff[2]\(57),
      R => '0'
    );
\syncstages_ff_reg[2][58]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(58),
      Q => \syncstages_ff[2]\(58),
      R => '0'
    );
\syncstages_ff_reg[2][59]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(59),
      Q => \syncstages_ff[2]\(59),
      R => '0'
    );
\syncstages_ff_reg[2][5]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(5),
      Q => \syncstages_ff[2]\(5),
      R => '0'
    );
\syncstages_ff_reg[2][60]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(60),
      Q => \syncstages_ff[2]\(60),
      R => '0'
    );
\syncstages_ff_reg[2][61]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(61),
      Q => \syncstages_ff[2]\(61),
      R => '0'
    );
\syncstages_ff_reg[2][62]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(62),
      Q => \syncstages_ff[2]\(62),
      R => '0'
    );
\syncstages_ff_reg[2][63]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(63),
      Q => \syncstages_ff[2]\(63),
      R => '0'
    );
\syncstages_ff_reg[2][64]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(64),
      Q => \syncstages_ff[2]\(64),
      R => '0'
    );
\syncstages_ff_reg[2][65]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(65),
      Q => \syncstages_ff[2]\(65),
      R => '0'
    );
\syncstages_ff_reg[2][66]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(66),
      Q => \syncstages_ff[2]\(66),
      R => '0'
    );
\syncstages_ff_reg[2][67]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(67),
      Q => \syncstages_ff[2]\(67),
      R => '0'
    );
\syncstages_ff_reg[2][68]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(68),
      Q => \syncstages_ff[2]\(68),
      R => '0'
    );
\syncstages_ff_reg[2][69]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(69),
      Q => \syncstages_ff[2]\(69),
      R => '0'
    );
\syncstages_ff_reg[2][6]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(6),
      Q => \syncstages_ff[2]\(6),
      R => '0'
    );
\syncstages_ff_reg[2][70]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(70),
      Q => \syncstages_ff[2]\(70),
      R => '0'
    );
\syncstages_ff_reg[2][71]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(71),
      Q => \syncstages_ff[2]\(71),
      R => '0'
    );
\syncstages_ff_reg[2][72]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(72),
      Q => \syncstages_ff[2]\(72),
      R => '0'
    );
\syncstages_ff_reg[2][73]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(73),
      Q => \syncstages_ff[2]\(73),
      R => '0'
    );
\syncstages_ff_reg[2][74]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(74),
      Q => \syncstages_ff[2]\(74),
      R => '0'
    );
\syncstages_ff_reg[2][75]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(75),
      Q => \syncstages_ff[2]\(75),
      R => '0'
    );
\syncstages_ff_reg[2][76]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(76),
      Q => \syncstages_ff[2]\(76),
      R => '0'
    );
\syncstages_ff_reg[2][77]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(77),
      Q => \syncstages_ff[2]\(77),
      R => '0'
    );
\syncstages_ff_reg[2][78]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(78),
      Q => \syncstages_ff[2]\(78),
      R => '0'
    );
\syncstages_ff_reg[2][79]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(79),
      Q => \syncstages_ff[2]\(79),
      R => '0'
    );
\syncstages_ff_reg[2][7]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(7),
      Q => \syncstages_ff[2]\(7),
      R => '0'
    );
\syncstages_ff_reg[2][80]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(80),
      Q => \syncstages_ff[2]\(80),
      R => '0'
    );
\syncstages_ff_reg[2][81]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(81),
      Q => \syncstages_ff[2]\(81),
      R => '0'
    );
\syncstages_ff_reg[2][82]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(82),
      Q => \syncstages_ff[2]\(82),
      R => '0'
    );
\syncstages_ff_reg[2][83]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(83),
      Q => \syncstages_ff[2]\(83),
      R => '0'
    );
\syncstages_ff_reg[2][84]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(84),
      Q => \syncstages_ff[2]\(84),
      R => '0'
    );
\syncstages_ff_reg[2][85]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(85),
      Q => \syncstages_ff[2]\(85),
      R => '0'
    );
\syncstages_ff_reg[2][86]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(86),
      Q => \syncstages_ff[2]\(86),
      R => '0'
    );
\syncstages_ff_reg[2][87]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(87),
      Q => \syncstages_ff[2]\(87),
      R => '0'
    );
\syncstages_ff_reg[2][88]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(88),
      Q => \syncstages_ff[2]\(88),
      R => '0'
    );
\syncstages_ff_reg[2][89]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(89),
      Q => \syncstages_ff[2]\(89),
      R => '0'
    );
\syncstages_ff_reg[2][8]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(8),
      Q => \syncstages_ff[2]\(8),
      R => '0'
    );
\syncstages_ff_reg[2][90]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(90),
      Q => \syncstages_ff[2]\(90),
      R => '0'
    );
\syncstages_ff_reg[2][91]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(91),
      Q => \syncstages_ff[2]\(91),
      R => '0'
    );
\syncstages_ff_reg[2][92]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(92),
      Q => \syncstages_ff[2]\(92),
      R => '0'
    );
\syncstages_ff_reg[2][93]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(93),
      Q => \syncstages_ff[2]\(93),
      R => '0'
    );
\syncstages_ff_reg[2][94]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(94),
      Q => \syncstages_ff[2]\(94),
      R => '0'
    );
\syncstages_ff_reg[2][95]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(95),
      Q => \syncstages_ff[2]\(95),
      R => '0'
    );
\syncstages_ff_reg[2][96]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(96),
      Q => \syncstages_ff[2]\(96),
      R => '0'
    );
\syncstages_ff_reg[2][9]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[1]\(9),
      Q => \syncstages_ff[2]\(9),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized3\ is
  port (
    src_clk : in STD_LOGIC;
    src_in : in STD_LOGIC_VECTOR ( 96 downto 0 );
    dest_clk : in STD_LOGIC;
    dest_out : out STD_LOGIC_VECTOR ( 96 downto 0 )
  );
  attribute DEST_SYNC_FF : integer;
  attribute DEST_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized3\ : entity is 2;
  attribute INIT_SYNC_FF : integer;
  attribute INIT_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized3\ : entity is 0;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized3\ : entity is "xpm_cdc_array_single";
  attribute SIM_ASSERT_CHK : integer;
  attribute SIM_ASSERT_CHK of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized3\ : entity is 0;
  attribute SRC_INPUT_REG : integer;
  attribute SRC_INPUT_REG of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized3\ : entity is 0;
  attribute VERSION : integer;
  attribute VERSION of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized3\ : entity is 0;
  attribute WIDTH : integer;
  attribute WIDTH of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized3\ : entity is 97;
  attribute XPM_MODULE : string;
  attribute XPM_MODULE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized3\ : entity is "TRUE";
  attribute keep_hierarchy : string;
  attribute keep_hierarchy of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized3\ : entity is "true";
  attribute xpm_cdc : string;
  attribute xpm_cdc of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized3\ : entity is "ARRAY_SINGLE";
end \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized3\;

architecture STRUCTURE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized3\ is
  signal async_path_bit : STD_LOGIC_VECTOR ( 96 downto 0 );
  signal \syncstages_ff[0]\ : STD_LOGIC_VECTOR ( 96 downto 0 );
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of \syncstages_ff[0]\ : signal is "true";
  attribute async_reg : string;
  attribute async_reg of \syncstages_ff[0]\ : signal is "true";
  attribute xpm_cdc of \syncstages_ff[0]\ : signal is "ARRAY_SINGLE";
  signal \syncstages_ff[1]\ : STD_LOGIC_VECTOR ( 96 downto 0 );
  attribute RTL_KEEP of \syncstages_ff[1]\ : signal is "true";
  attribute async_reg of \syncstages_ff[1]\ : signal is "true";
  attribute xpm_cdc of \syncstages_ff[1]\ : signal is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \syncstages_ff_reg[0][0]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][0]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][10]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][10]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][10]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][11]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][11]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][11]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][12]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][12]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][12]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][13]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][13]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][13]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][14]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][14]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][14]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][15]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][15]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][15]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][16]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][16]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][16]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][17]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][17]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][17]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][18]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][18]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][18]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][19]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][19]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][19]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][1]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][1]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][1]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][20]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][20]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][20]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][21]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][21]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][21]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][22]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][22]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][22]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][23]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][23]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][23]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][24]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][24]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][24]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][25]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][25]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][25]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][26]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][26]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][26]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][27]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][27]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][27]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][28]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][28]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][28]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][29]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][29]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][29]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][2]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][2]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][2]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][30]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][30]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][30]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][31]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][31]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][31]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][32]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][32]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][32]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][33]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][33]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][33]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][34]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][34]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][34]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][35]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][35]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][35]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][36]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][36]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][36]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][37]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][37]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][37]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][38]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][38]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][38]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][39]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][39]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][39]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][3]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][3]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][3]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][40]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][40]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][40]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][41]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][41]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][41]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][42]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][42]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][42]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][43]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][43]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][43]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][44]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][44]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][44]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][45]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][45]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][45]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][46]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][46]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][46]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][47]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][47]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][47]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][48]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][48]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][48]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][49]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][49]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][49]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][4]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][4]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][4]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][50]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][50]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][50]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][51]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][51]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][51]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][52]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][52]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][52]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][53]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][53]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][53]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][54]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][54]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][54]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][55]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][55]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][55]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][56]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][56]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][56]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][57]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][57]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][57]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][58]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][58]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][58]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][59]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][59]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][59]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][5]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][5]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][5]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][60]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][60]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][60]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][61]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][61]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][61]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][62]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][62]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][62]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][63]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][63]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][63]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][64]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][64]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][64]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][65]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][65]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][65]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][66]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][66]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][66]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][67]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][67]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][67]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][68]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][68]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][68]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][69]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][69]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][69]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][6]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][6]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][6]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][70]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][70]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][70]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][71]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][71]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][71]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][72]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][72]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][72]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][73]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][73]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][73]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][74]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][74]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][74]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][75]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][75]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][75]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][76]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][76]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][76]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][77]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][77]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][77]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][78]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][78]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][78]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][79]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][79]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][79]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][7]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][7]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][7]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][80]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][80]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][80]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][81]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][81]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][81]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][82]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][82]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][82]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][83]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][83]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][83]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][84]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][84]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][84]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][85]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][85]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][85]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][86]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][86]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][86]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][87]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][87]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][87]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][88]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][88]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][88]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][89]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][89]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][89]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][8]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][8]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][8]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][90]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][90]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][90]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][91]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][91]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][91]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][92]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][92]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][92]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][93]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][93]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][93]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][94]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][94]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][94]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][95]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][95]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][95]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][96]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][96]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][96]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0][9]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[0][9]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0][9]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][0]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][0]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][0]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][10]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][10]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][10]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][11]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][11]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][11]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][12]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][12]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][12]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][13]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][13]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][13]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][14]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][14]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][14]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][15]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][15]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][15]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][16]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][16]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][16]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][17]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][17]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][17]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][18]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][18]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][18]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][19]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][19]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][19]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][1]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][1]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][1]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][20]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][20]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][20]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][21]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][21]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][21]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][22]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][22]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][22]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][23]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][23]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][23]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][24]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][24]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][24]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][25]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][25]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][25]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][26]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][26]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][26]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][27]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][27]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][27]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][28]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][28]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][28]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][29]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][29]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][29]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][2]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][2]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][2]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][30]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][30]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][30]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][31]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][31]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][31]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][32]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][32]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][32]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][33]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][33]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][33]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][34]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][34]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][34]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][35]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][35]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][35]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][36]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][36]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][36]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][37]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][37]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][37]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][38]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][38]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][38]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][39]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][39]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][39]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][3]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][3]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][3]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][40]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][40]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][40]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][41]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][41]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][41]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][42]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][42]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][42]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][43]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][43]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][43]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][44]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][44]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][44]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][45]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][45]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][45]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][46]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][46]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][46]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][47]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][47]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][47]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][48]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][48]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][48]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][49]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][49]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][49]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][4]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][4]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][4]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][50]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][50]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][50]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][51]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][51]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][51]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][52]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][52]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][52]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][53]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][53]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][53]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][54]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][54]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][54]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][55]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][55]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][55]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][56]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][56]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][56]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][57]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][57]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][57]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][58]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][58]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][58]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][59]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][59]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][59]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][5]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][5]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][5]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][60]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][60]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][60]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][61]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][61]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][61]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][62]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][62]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][62]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][63]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][63]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][63]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][64]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][64]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][64]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][65]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][65]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][65]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][66]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][66]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][66]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][67]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][67]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][67]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][68]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][68]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][68]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][69]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][69]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][69]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][6]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][6]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][6]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][70]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][70]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][70]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][71]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][71]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][71]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][72]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][72]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][72]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][73]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][73]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][73]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][74]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][74]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][74]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][75]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][75]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][75]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][76]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][76]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][76]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][77]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][77]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][77]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][78]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][78]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][78]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][79]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][79]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][79]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][7]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][7]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][7]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][80]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][80]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][80]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][81]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][81]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][81]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][82]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][82]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][82]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][83]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][83]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][83]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][84]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][84]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][84]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][85]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][85]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][85]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][86]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][86]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][86]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][87]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][87]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][87]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][88]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][88]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][88]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][89]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][89]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][89]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][8]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][8]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][8]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][90]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][90]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][90]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][91]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][91]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][91]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][92]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][92]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][92]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][93]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][93]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][93]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][94]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][94]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][94]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][95]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][95]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][95]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][96]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][96]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][96]\ : label is "ARRAY_SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1][9]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1][9]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1][9]\ : label is "ARRAY_SINGLE";
begin
  async_path_bit(96) <= src_in(96);
  async_path_bit(79 downto 64) <= src_in(79 downto 64);
  async_path_bit(55) <= src_in(63);
  async_path_bit(54 downto 32) <= src_in(54 downto 32);
  async_path_bit(23) <= src_in(31);
  async_path_bit(22 downto 0) <= src_in(22 downto 0);
  dest_out(96 downto 0) <= \syncstages_ff[1]\(96 downto 0);
async_path_bit_inst: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => async_path_bit(55),
      O => async_path_bit(63)
    );
\async_path_bit_inst__0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => async_path_bit(55),
      O => async_path_bit(62)
    );
\async_path_bit_inst__1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => async_path_bit(55),
      O => async_path_bit(61)
    );
\async_path_bit_inst__10\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => async_path_bit(23),
      O => async_path_bit(28)
    );
\async_path_bit_inst__11\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => async_path_bit(23),
      O => async_path_bit(27)
    );
\async_path_bit_inst__12\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => async_path_bit(23),
      O => async_path_bit(26)
    );
\async_path_bit_inst__13\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => async_path_bit(23),
      O => async_path_bit(25)
    );
\async_path_bit_inst__14\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => async_path_bit(23),
      O => async_path_bit(24)
    );
\async_path_bit_inst__2\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => async_path_bit(55),
      O => async_path_bit(60)
    );
\async_path_bit_inst__3\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => async_path_bit(55),
      O => async_path_bit(59)
    );
\async_path_bit_inst__4\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => async_path_bit(55),
      O => async_path_bit(58)
    );
\async_path_bit_inst__5\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => async_path_bit(55),
      O => async_path_bit(57)
    );
\async_path_bit_inst__6\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => async_path_bit(55),
      O => async_path_bit(56)
    );
\async_path_bit_inst__7\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => async_path_bit(23),
      O => async_path_bit(31)
    );
\async_path_bit_inst__8\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => async_path_bit(23),
      O => async_path_bit(30)
    );
\async_path_bit_inst__9\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => async_path_bit(23),
      O => async_path_bit(29)
    );
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => async_path_bit(95)
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => async_path_bit(94)
    );
i_10: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => async_path_bit(85)
    );
i_11: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => async_path_bit(84)
    );
i_12: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => async_path_bit(83)
    );
i_13: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => async_path_bit(82)
    );
i_14: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => async_path_bit(81)
    );
i_15: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => async_path_bit(80)
    );
i_2: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => async_path_bit(93)
    );
i_3: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => async_path_bit(92)
    );
i_4: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => async_path_bit(91)
    );
i_5: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => async_path_bit(90)
    );
i_6: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => async_path_bit(89)
    );
i_7: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => async_path_bit(88)
    );
i_8: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => async_path_bit(87)
    );
i_9: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => async_path_bit(86)
    );
\syncstages_ff_reg[0][0]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(0),
      Q => \syncstages_ff[0]\(0),
      R => '0'
    );
\syncstages_ff_reg[0][10]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(10),
      Q => \syncstages_ff[0]\(10),
      R => '0'
    );
\syncstages_ff_reg[0][11]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(11),
      Q => \syncstages_ff[0]\(11),
      R => '0'
    );
\syncstages_ff_reg[0][12]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(12),
      Q => \syncstages_ff[0]\(12),
      R => '0'
    );
\syncstages_ff_reg[0][13]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(13),
      Q => \syncstages_ff[0]\(13),
      R => '0'
    );
\syncstages_ff_reg[0][14]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(14),
      Q => \syncstages_ff[0]\(14),
      R => '0'
    );
\syncstages_ff_reg[0][15]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(15),
      Q => \syncstages_ff[0]\(15),
      R => '0'
    );
\syncstages_ff_reg[0][16]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(16),
      Q => \syncstages_ff[0]\(16),
      R => '0'
    );
\syncstages_ff_reg[0][17]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(17),
      Q => \syncstages_ff[0]\(17),
      R => '0'
    );
\syncstages_ff_reg[0][18]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(18),
      Q => \syncstages_ff[0]\(18),
      R => '0'
    );
\syncstages_ff_reg[0][19]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(19),
      Q => \syncstages_ff[0]\(19),
      R => '0'
    );
\syncstages_ff_reg[0][1]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(1),
      Q => \syncstages_ff[0]\(1),
      R => '0'
    );
\syncstages_ff_reg[0][20]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(20),
      Q => \syncstages_ff[0]\(20),
      R => '0'
    );
\syncstages_ff_reg[0][21]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(21),
      Q => \syncstages_ff[0]\(21),
      R => '0'
    );
\syncstages_ff_reg[0][22]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(22),
      Q => \syncstages_ff[0]\(22),
      R => '0'
    );
\syncstages_ff_reg[0][23]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(23),
      Q => \syncstages_ff[0]\(23),
      R => '0'
    );
\syncstages_ff_reg[0][24]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(24),
      Q => \syncstages_ff[0]\(24),
      R => '0'
    );
\syncstages_ff_reg[0][25]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(25),
      Q => \syncstages_ff[0]\(25),
      R => '0'
    );
\syncstages_ff_reg[0][26]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(26),
      Q => \syncstages_ff[0]\(26),
      R => '0'
    );
\syncstages_ff_reg[0][27]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(27),
      Q => \syncstages_ff[0]\(27),
      R => '0'
    );
\syncstages_ff_reg[0][28]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(28),
      Q => \syncstages_ff[0]\(28),
      R => '0'
    );
\syncstages_ff_reg[0][29]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(29),
      Q => \syncstages_ff[0]\(29),
      R => '0'
    );
\syncstages_ff_reg[0][2]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(2),
      Q => \syncstages_ff[0]\(2),
      R => '0'
    );
\syncstages_ff_reg[0][30]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(30),
      Q => \syncstages_ff[0]\(30),
      R => '0'
    );
\syncstages_ff_reg[0][31]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(31),
      Q => \syncstages_ff[0]\(31),
      R => '0'
    );
\syncstages_ff_reg[0][32]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(32),
      Q => \syncstages_ff[0]\(32),
      R => '0'
    );
\syncstages_ff_reg[0][33]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(33),
      Q => \syncstages_ff[0]\(33),
      R => '0'
    );
\syncstages_ff_reg[0][34]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(34),
      Q => \syncstages_ff[0]\(34),
      R => '0'
    );
\syncstages_ff_reg[0][35]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(35),
      Q => \syncstages_ff[0]\(35),
      R => '0'
    );
\syncstages_ff_reg[0][36]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(36),
      Q => \syncstages_ff[0]\(36),
      R => '0'
    );
\syncstages_ff_reg[0][37]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(37),
      Q => \syncstages_ff[0]\(37),
      R => '0'
    );
\syncstages_ff_reg[0][38]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(38),
      Q => \syncstages_ff[0]\(38),
      R => '0'
    );
\syncstages_ff_reg[0][39]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(39),
      Q => \syncstages_ff[0]\(39),
      R => '0'
    );
\syncstages_ff_reg[0][3]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(3),
      Q => \syncstages_ff[0]\(3),
      R => '0'
    );
\syncstages_ff_reg[0][40]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(40),
      Q => \syncstages_ff[0]\(40),
      R => '0'
    );
\syncstages_ff_reg[0][41]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(41),
      Q => \syncstages_ff[0]\(41),
      R => '0'
    );
\syncstages_ff_reg[0][42]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(42),
      Q => \syncstages_ff[0]\(42),
      R => '0'
    );
\syncstages_ff_reg[0][43]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(43),
      Q => \syncstages_ff[0]\(43),
      R => '0'
    );
\syncstages_ff_reg[0][44]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(44),
      Q => \syncstages_ff[0]\(44),
      R => '0'
    );
\syncstages_ff_reg[0][45]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(45),
      Q => \syncstages_ff[0]\(45),
      R => '0'
    );
\syncstages_ff_reg[0][46]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(46),
      Q => \syncstages_ff[0]\(46),
      R => '0'
    );
\syncstages_ff_reg[0][47]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(47),
      Q => \syncstages_ff[0]\(47),
      R => '0'
    );
\syncstages_ff_reg[0][48]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(48),
      Q => \syncstages_ff[0]\(48),
      R => '0'
    );
\syncstages_ff_reg[0][49]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(49),
      Q => \syncstages_ff[0]\(49),
      R => '0'
    );
\syncstages_ff_reg[0][4]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(4),
      Q => \syncstages_ff[0]\(4),
      R => '0'
    );
\syncstages_ff_reg[0][50]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(50),
      Q => \syncstages_ff[0]\(50),
      R => '0'
    );
\syncstages_ff_reg[0][51]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(51),
      Q => \syncstages_ff[0]\(51),
      R => '0'
    );
\syncstages_ff_reg[0][52]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(52),
      Q => \syncstages_ff[0]\(52),
      R => '0'
    );
\syncstages_ff_reg[0][53]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(53),
      Q => \syncstages_ff[0]\(53),
      R => '0'
    );
\syncstages_ff_reg[0][54]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(54),
      Q => \syncstages_ff[0]\(54),
      R => '0'
    );
\syncstages_ff_reg[0][55]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(55),
      Q => \syncstages_ff[0]\(55),
      R => '0'
    );
\syncstages_ff_reg[0][56]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(56),
      Q => \syncstages_ff[0]\(56),
      R => '0'
    );
\syncstages_ff_reg[0][57]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(57),
      Q => \syncstages_ff[0]\(57),
      R => '0'
    );
\syncstages_ff_reg[0][58]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(58),
      Q => \syncstages_ff[0]\(58),
      R => '0'
    );
\syncstages_ff_reg[0][59]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(59),
      Q => \syncstages_ff[0]\(59),
      R => '0'
    );
\syncstages_ff_reg[0][5]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(5),
      Q => \syncstages_ff[0]\(5),
      R => '0'
    );
\syncstages_ff_reg[0][60]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(60),
      Q => \syncstages_ff[0]\(60),
      R => '0'
    );
\syncstages_ff_reg[0][61]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(61),
      Q => \syncstages_ff[0]\(61),
      R => '0'
    );
\syncstages_ff_reg[0][62]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(62),
      Q => \syncstages_ff[0]\(62),
      R => '0'
    );
\syncstages_ff_reg[0][63]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(63),
      Q => \syncstages_ff[0]\(63),
      R => '0'
    );
\syncstages_ff_reg[0][64]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(64),
      Q => \syncstages_ff[0]\(64),
      R => '0'
    );
\syncstages_ff_reg[0][65]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(65),
      Q => \syncstages_ff[0]\(65),
      R => '0'
    );
\syncstages_ff_reg[0][66]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(66),
      Q => \syncstages_ff[0]\(66),
      R => '0'
    );
\syncstages_ff_reg[0][67]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(67),
      Q => \syncstages_ff[0]\(67),
      R => '0'
    );
\syncstages_ff_reg[0][68]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(68),
      Q => \syncstages_ff[0]\(68),
      R => '0'
    );
\syncstages_ff_reg[0][69]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(69),
      Q => \syncstages_ff[0]\(69),
      R => '0'
    );
\syncstages_ff_reg[0][6]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(6),
      Q => \syncstages_ff[0]\(6),
      R => '0'
    );
\syncstages_ff_reg[0][70]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(70),
      Q => \syncstages_ff[0]\(70),
      R => '0'
    );
\syncstages_ff_reg[0][71]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(71),
      Q => \syncstages_ff[0]\(71),
      R => '0'
    );
\syncstages_ff_reg[0][72]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(72),
      Q => \syncstages_ff[0]\(72),
      R => '0'
    );
\syncstages_ff_reg[0][73]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(73),
      Q => \syncstages_ff[0]\(73),
      R => '0'
    );
\syncstages_ff_reg[0][74]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(74),
      Q => \syncstages_ff[0]\(74),
      R => '0'
    );
\syncstages_ff_reg[0][75]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(75),
      Q => \syncstages_ff[0]\(75),
      R => '0'
    );
\syncstages_ff_reg[0][76]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(76),
      Q => \syncstages_ff[0]\(76),
      R => '0'
    );
\syncstages_ff_reg[0][77]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(77),
      Q => \syncstages_ff[0]\(77),
      R => '0'
    );
\syncstages_ff_reg[0][78]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(78),
      Q => \syncstages_ff[0]\(78),
      R => '0'
    );
\syncstages_ff_reg[0][79]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(79),
      Q => \syncstages_ff[0]\(79),
      R => '0'
    );
\syncstages_ff_reg[0][7]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(7),
      Q => \syncstages_ff[0]\(7),
      R => '0'
    );
\syncstages_ff_reg[0][80]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(80),
      Q => \syncstages_ff[0]\(80),
      R => '0'
    );
\syncstages_ff_reg[0][81]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(81),
      Q => \syncstages_ff[0]\(81),
      R => '0'
    );
\syncstages_ff_reg[0][82]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(82),
      Q => \syncstages_ff[0]\(82),
      R => '0'
    );
\syncstages_ff_reg[0][83]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(83),
      Q => \syncstages_ff[0]\(83),
      R => '0'
    );
\syncstages_ff_reg[0][84]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(84),
      Q => \syncstages_ff[0]\(84),
      R => '0'
    );
\syncstages_ff_reg[0][85]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(85),
      Q => \syncstages_ff[0]\(85),
      R => '0'
    );
\syncstages_ff_reg[0][86]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(86),
      Q => \syncstages_ff[0]\(86),
      R => '0'
    );
\syncstages_ff_reg[0][87]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(87),
      Q => \syncstages_ff[0]\(87),
      R => '0'
    );
\syncstages_ff_reg[0][88]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(88),
      Q => \syncstages_ff[0]\(88),
      R => '0'
    );
\syncstages_ff_reg[0][89]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(89),
      Q => \syncstages_ff[0]\(89),
      R => '0'
    );
\syncstages_ff_reg[0][8]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(8),
      Q => \syncstages_ff[0]\(8),
      R => '0'
    );
\syncstages_ff_reg[0][90]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(90),
      Q => \syncstages_ff[0]\(90),
      R => '0'
    );
\syncstages_ff_reg[0][91]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(91),
      Q => \syncstages_ff[0]\(91),
      R => '0'
    );
\syncstages_ff_reg[0][92]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(92),
      Q => \syncstages_ff[0]\(92),
      R => '0'
    );
\syncstages_ff_reg[0][93]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(93),
      Q => \syncstages_ff[0]\(93),
      R => '0'
    );
\syncstages_ff_reg[0][94]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(94),
      Q => \syncstages_ff[0]\(94),
      R => '0'
    );
\syncstages_ff_reg[0][95]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(95),
      Q => \syncstages_ff[0]\(95),
      R => '0'
    );
\syncstages_ff_reg[0][96]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(96),
      Q => \syncstages_ff[0]\(96),
      R => '0'
    );
\syncstages_ff_reg[0][9]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => async_path_bit(9),
      Q => \syncstages_ff[0]\(9),
      R => '0'
    );
\syncstages_ff_reg[1][0]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(0),
      Q => \syncstages_ff[1]\(0),
      R => '0'
    );
\syncstages_ff_reg[1][10]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(10),
      Q => \syncstages_ff[1]\(10),
      R => '0'
    );
\syncstages_ff_reg[1][11]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(11),
      Q => \syncstages_ff[1]\(11),
      R => '0'
    );
\syncstages_ff_reg[1][12]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(12),
      Q => \syncstages_ff[1]\(12),
      R => '0'
    );
\syncstages_ff_reg[1][13]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(13),
      Q => \syncstages_ff[1]\(13),
      R => '0'
    );
\syncstages_ff_reg[1][14]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(14),
      Q => \syncstages_ff[1]\(14),
      R => '0'
    );
\syncstages_ff_reg[1][15]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(15),
      Q => \syncstages_ff[1]\(15),
      R => '0'
    );
\syncstages_ff_reg[1][16]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(16),
      Q => \syncstages_ff[1]\(16),
      R => '0'
    );
\syncstages_ff_reg[1][17]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(17),
      Q => \syncstages_ff[1]\(17),
      R => '0'
    );
\syncstages_ff_reg[1][18]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(18),
      Q => \syncstages_ff[1]\(18),
      R => '0'
    );
\syncstages_ff_reg[1][19]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(19),
      Q => \syncstages_ff[1]\(19),
      R => '0'
    );
\syncstages_ff_reg[1][1]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(1),
      Q => \syncstages_ff[1]\(1),
      R => '0'
    );
\syncstages_ff_reg[1][20]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(20),
      Q => \syncstages_ff[1]\(20),
      R => '0'
    );
\syncstages_ff_reg[1][21]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(21),
      Q => \syncstages_ff[1]\(21),
      R => '0'
    );
\syncstages_ff_reg[1][22]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(22),
      Q => \syncstages_ff[1]\(22),
      R => '0'
    );
\syncstages_ff_reg[1][23]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(23),
      Q => \syncstages_ff[1]\(23),
      R => '0'
    );
\syncstages_ff_reg[1][24]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(24),
      Q => \syncstages_ff[1]\(24),
      R => '0'
    );
\syncstages_ff_reg[1][25]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(25),
      Q => \syncstages_ff[1]\(25),
      R => '0'
    );
\syncstages_ff_reg[1][26]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(26),
      Q => \syncstages_ff[1]\(26),
      R => '0'
    );
\syncstages_ff_reg[1][27]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(27),
      Q => \syncstages_ff[1]\(27),
      R => '0'
    );
\syncstages_ff_reg[1][28]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(28),
      Q => \syncstages_ff[1]\(28),
      R => '0'
    );
\syncstages_ff_reg[1][29]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(29),
      Q => \syncstages_ff[1]\(29),
      R => '0'
    );
\syncstages_ff_reg[1][2]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(2),
      Q => \syncstages_ff[1]\(2),
      R => '0'
    );
\syncstages_ff_reg[1][30]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(30),
      Q => \syncstages_ff[1]\(30),
      R => '0'
    );
\syncstages_ff_reg[1][31]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(31),
      Q => \syncstages_ff[1]\(31),
      R => '0'
    );
\syncstages_ff_reg[1][32]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(32),
      Q => \syncstages_ff[1]\(32),
      R => '0'
    );
\syncstages_ff_reg[1][33]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(33),
      Q => \syncstages_ff[1]\(33),
      R => '0'
    );
\syncstages_ff_reg[1][34]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(34),
      Q => \syncstages_ff[1]\(34),
      R => '0'
    );
\syncstages_ff_reg[1][35]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(35),
      Q => \syncstages_ff[1]\(35),
      R => '0'
    );
\syncstages_ff_reg[1][36]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(36),
      Q => \syncstages_ff[1]\(36),
      R => '0'
    );
\syncstages_ff_reg[1][37]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(37),
      Q => \syncstages_ff[1]\(37),
      R => '0'
    );
\syncstages_ff_reg[1][38]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(38),
      Q => \syncstages_ff[1]\(38),
      R => '0'
    );
\syncstages_ff_reg[1][39]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(39),
      Q => \syncstages_ff[1]\(39),
      R => '0'
    );
\syncstages_ff_reg[1][3]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(3),
      Q => \syncstages_ff[1]\(3),
      R => '0'
    );
\syncstages_ff_reg[1][40]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(40),
      Q => \syncstages_ff[1]\(40),
      R => '0'
    );
\syncstages_ff_reg[1][41]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(41),
      Q => \syncstages_ff[1]\(41),
      R => '0'
    );
\syncstages_ff_reg[1][42]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(42),
      Q => \syncstages_ff[1]\(42),
      R => '0'
    );
\syncstages_ff_reg[1][43]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(43),
      Q => \syncstages_ff[1]\(43),
      R => '0'
    );
\syncstages_ff_reg[1][44]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(44),
      Q => \syncstages_ff[1]\(44),
      R => '0'
    );
\syncstages_ff_reg[1][45]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(45),
      Q => \syncstages_ff[1]\(45),
      R => '0'
    );
\syncstages_ff_reg[1][46]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(46),
      Q => \syncstages_ff[1]\(46),
      R => '0'
    );
\syncstages_ff_reg[1][47]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(47),
      Q => \syncstages_ff[1]\(47),
      R => '0'
    );
\syncstages_ff_reg[1][48]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(48),
      Q => \syncstages_ff[1]\(48),
      R => '0'
    );
\syncstages_ff_reg[1][49]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(49),
      Q => \syncstages_ff[1]\(49),
      R => '0'
    );
\syncstages_ff_reg[1][4]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(4),
      Q => \syncstages_ff[1]\(4),
      R => '0'
    );
\syncstages_ff_reg[1][50]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(50),
      Q => \syncstages_ff[1]\(50),
      R => '0'
    );
\syncstages_ff_reg[1][51]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(51),
      Q => \syncstages_ff[1]\(51),
      R => '0'
    );
\syncstages_ff_reg[1][52]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(52),
      Q => \syncstages_ff[1]\(52),
      R => '0'
    );
\syncstages_ff_reg[1][53]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(53),
      Q => \syncstages_ff[1]\(53),
      R => '0'
    );
\syncstages_ff_reg[1][54]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(54),
      Q => \syncstages_ff[1]\(54),
      R => '0'
    );
\syncstages_ff_reg[1][55]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(55),
      Q => \syncstages_ff[1]\(55),
      R => '0'
    );
\syncstages_ff_reg[1][56]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(56),
      Q => \syncstages_ff[1]\(56),
      R => '0'
    );
\syncstages_ff_reg[1][57]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(57),
      Q => \syncstages_ff[1]\(57),
      R => '0'
    );
\syncstages_ff_reg[1][58]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(58),
      Q => \syncstages_ff[1]\(58),
      R => '0'
    );
\syncstages_ff_reg[1][59]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(59),
      Q => \syncstages_ff[1]\(59),
      R => '0'
    );
\syncstages_ff_reg[1][5]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(5),
      Q => \syncstages_ff[1]\(5),
      R => '0'
    );
\syncstages_ff_reg[1][60]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(60),
      Q => \syncstages_ff[1]\(60),
      R => '0'
    );
\syncstages_ff_reg[1][61]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(61),
      Q => \syncstages_ff[1]\(61),
      R => '0'
    );
\syncstages_ff_reg[1][62]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(62),
      Q => \syncstages_ff[1]\(62),
      R => '0'
    );
\syncstages_ff_reg[1][63]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(63),
      Q => \syncstages_ff[1]\(63),
      R => '0'
    );
\syncstages_ff_reg[1][64]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(64),
      Q => \syncstages_ff[1]\(64),
      R => '0'
    );
\syncstages_ff_reg[1][65]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(65),
      Q => \syncstages_ff[1]\(65),
      R => '0'
    );
\syncstages_ff_reg[1][66]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(66),
      Q => \syncstages_ff[1]\(66),
      R => '0'
    );
\syncstages_ff_reg[1][67]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(67),
      Q => \syncstages_ff[1]\(67),
      R => '0'
    );
\syncstages_ff_reg[1][68]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(68),
      Q => \syncstages_ff[1]\(68),
      R => '0'
    );
\syncstages_ff_reg[1][69]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(69),
      Q => \syncstages_ff[1]\(69),
      R => '0'
    );
\syncstages_ff_reg[1][6]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(6),
      Q => \syncstages_ff[1]\(6),
      R => '0'
    );
\syncstages_ff_reg[1][70]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(70),
      Q => \syncstages_ff[1]\(70),
      R => '0'
    );
\syncstages_ff_reg[1][71]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(71),
      Q => \syncstages_ff[1]\(71),
      R => '0'
    );
\syncstages_ff_reg[1][72]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(72),
      Q => \syncstages_ff[1]\(72),
      R => '0'
    );
\syncstages_ff_reg[1][73]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(73),
      Q => \syncstages_ff[1]\(73),
      R => '0'
    );
\syncstages_ff_reg[1][74]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(74),
      Q => \syncstages_ff[1]\(74),
      R => '0'
    );
\syncstages_ff_reg[1][75]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(75),
      Q => \syncstages_ff[1]\(75),
      R => '0'
    );
\syncstages_ff_reg[1][76]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(76),
      Q => \syncstages_ff[1]\(76),
      R => '0'
    );
\syncstages_ff_reg[1][77]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(77),
      Q => \syncstages_ff[1]\(77),
      R => '0'
    );
\syncstages_ff_reg[1][78]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(78),
      Q => \syncstages_ff[1]\(78),
      R => '0'
    );
\syncstages_ff_reg[1][79]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(79),
      Q => \syncstages_ff[1]\(79),
      R => '0'
    );
\syncstages_ff_reg[1][7]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(7),
      Q => \syncstages_ff[1]\(7),
      R => '0'
    );
\syncstages_ff_reg[1][80]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(80),
      Q => \syncstages_ff[1]\(80),
      R => '0'
    );
\syncstages_ff_reg[1][81]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(81),
      Q => \syncstages_ff[1]\(81),
      R => '0'
    );
\syncstages_ff_reg[1][82]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(82),
      Q => \syncstages_ff[1]\(82),
      R => '0'
    );
\syncstages_ff_reg[1][83]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(83),
      Q => \syncstages_ff[1]\(83),
      R => '0'
    );
\syncstages_ff_reg[1][84]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(84),
      Q => \syncstages_ff[1]\(84),
      R => '0'
    );
\syncstages_ff_reg[1][85]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(85),
      Q => \syncstages_ff[1]\(85),
      R => '0'
    );
\syncstages_ff_reg[1][86]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(86),
      Q => \syncstages_ff[1]\(86),
      R => '0'
    );
\syncstages_ff_reg[1][87]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(87),
      Q => \syncstages_ff[1]\(87),
      R => '0'
    );
\syncstages_ff_reg[1][88]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(88),
      Q => \syncstages_ff[1]\(88),
      R => '0'
    );
\syncstages_ff_reg[1][89]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(89),
      Q => \syncstages_ff[1]\(89),
      R => '0'
    );
\syncstages_ff_reg[1][8]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(8),
      Q => \syncstages_ff[1]\(8),
      R => '0'
    );
\syncstages_ff_reg[1][90]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(90),
      Q => \syncstages_ff[1]\(90),
      R => '0'
    );
\syncstages_ff_reg[1][91]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(91),
      Q => \syncstages_ff[1]\(91),
      R => '0'
    );
\syncstages_ff_reg[1][92]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(92),
      Q => \syncstages_ff[1]\(92),
      R => '0'
    );
\syncstages_ff_reg[1][93]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(93),
      Q => \syncstages_ff[1]\(93),
      R => '0'
    );
\syncstages_ff_reg[1][94]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(94),
      Q => \syncstages_ff[1]\(94),
      R => '0'
    );
\syncstages_ff_reg[1][95]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(95),
      Q => \syncstages_ff[1]\(95),
      R => '0'
    );
\syncstages_ff_reg[1][96]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(96),
      Q => \syncstages_ff[1]\(96),
      R => '0'
    );
\syncstages_ff_reg[1][9]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => \syncstages_ff[0]\(9),
      Q => \syncstages_ff[1]\(9),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst is
  port (
    src_arst : in STD_LOGIC;
    dest_clk : in STD_LOGIC;
    dest_arst : out STD_LOGIC
  );
  attribute DEF_VAL : string;
  attribute DEF_VAL of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst : entity is "1'b1";
  attribute DEST_SYNC_FF : integer;
  attribute DEST_SYNC_FF of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst : entity is 4;
  attribute INIT_SYNC_FF : integer;
  attribute INIT_SYNC_FF of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst : entity is 1;
  attribute INV_DEF_VAL : string;
  attribute INV_DEF_VAL of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst : entity is "1'b0";
  attribute RST_ACTIVE_HIGH : integer;
  attribute RST_ACTIVE_HIGH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst : entity is 0;
  attribute VERSION : integer;
  attribute VERSION of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst : entity is 0;
  attribute XPM_MODULE : string;
  attribute XPM_MODULE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst : entity is "TRUE";
  attribute keep_hierarchy : string;
  attribute keep_hierarchy of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst : entity is "true";
  attribute xpm_cdc : string;
  attribute xpm_cdc of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst : entity is "ASYNC_RST";
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst is
  signal arststages_ff : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of arststages_ff : signal is "true";
  attribute async_reg : string;
  attribute async_reg of arststages_ff : signal is "true";
  attribute xpm_cdc of arststages_ff : signal is "ASYNC_RST";
  signal reset_pol : STD_LOGIC;
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \arststages_ff_reg[0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \arststages_ff_reg[0]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[0]\ : label is "ASYNC_RST";
  attribute ASYNC_REG_boolean of \arststages_ff_reg[1]\ : label is std.standard.true;
  attribute KEEP of \arststages_ff_reg[1]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[1]\ : label is "ASYNC_RST";
  attribute ASYNC_REG_boolean of \arststages_ff_reg[2]\ : label is std.standard.true;
  attribute KEEP of \arststages_ff_reg[2]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[2]\ : label is "ASYNC_RST";
  attribute ASYNC_REG_boolean of \arststages_ff_reg[3]\ : label is std.standard.true;
  attribute KEEP of \arststages_ff_reg[3]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[3]\ : label is "ASYNC_RST";
begin
  dest_arst <= arststages_ff(3);
\arststages_ff[3]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => src_arst,
      O => reset_pol
    );
\arststages_ff_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '1'
    )
        port map (
      C => dest_clk,
      CE => '1',
      CLR => reset_pol,
      D => '1',
      Q => arststages_ff(0)
    );
\arststages_ff_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '1'
    )
        port map (
      C => dest_clk,
      CE => '1',
      CLR => reset_pol,
      D => arststages_ff(0),
      Q => arststages_ff(1)
    );
\arststages_ff_reg[2]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '1'
    )
        port map (
      C => dest_clk,
      CE => '1',
      CLR => reset_pol,
      D => arststages_ff(1),
      Q => arststages_ff(2)
    );
\arststages_ff_reg[3]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '1'
    )
        port map (
      C => dest_clk,
      CE => '1',
      CLR => reset_pol,
      D => arststages_ff(2),
      Q => arststages_ff(3)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__2\ is
  port (
    src_arst : in STD_LOGIC;
    dest_clk : in STD_LOGIC;
    dest_arst : out STD_LOGIC
  );
  attribute DEF_VAL : string;
  attribute DEF_VAL of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__2\ : entity is "1'b1";
  attribute DEST_SYNC_FF : integer;
  attribute DEST_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__2\ : entity is 4;
  attribute INIT_SYNC_FF : integer;
  attribute INIT_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__2\ : entity is 1;
  attribute INV_DEF_VAL : string;
  attribute INV_DEF_VAL of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__2\ : entity is "1'b0";
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__2\ : entity is "xpm_cdc_async_rst";
  attribute RST_ACTIVE_HIGH : integer;
  attribute RST_ACTIVE_HIGH of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__2\ : entity is 0;
  attribute VERSION : integer;
  attribute VERSION of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__2\ : entity is 0;
  attribute XPM_MODULE : string;
  attribute XPM_MODULE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__2\ : entity is "TRUE";
  attribute keep_hierarchy : string;
  attribute keep_hierarchy of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__2\ : entity is "true";
  attribute xpm_cdc : string;
  attribute xpm_cdc of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__2\ : entity is "ASYNC_RST";
end \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__2\;

architecture STRUCTURE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__2\ is
  signal arststages_ff : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of arststages_ff : signal is "true";
  attribute async_reg : string;
  attribute async_reg of arststages_ff : signal is "true";
  attribute xpm_cdc of arststages_ff : signal is "ASYNC_RST";
  signal reset_pol : STD_LOGIC;
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \arststages_ff_reg[0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \arststages_ff_reg[0]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[0]\ : label is "ASYNC_RST";
  attribute ASYNC_REG_boolean of \arststages_ff_reg[1]\ : label is std.standard.true;
  attribute KEEP of \arststages_ff_reg[1]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[1]\ : label is "ASYNC_RST";
  attribute ASYNC_REG_boolean of \arststages_ff_reg[2]\ : label is std.standard.true;
  attribute KEEP of \arststages_ff_reg[2]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[2]\ : label is "ASYNC_RST";
  attribute ASYNC_REG_boolean of \arststages_ff_reg[3]\ : label is std.standard.true;
  attribute KEEP of \arststages_ff_reg[3]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[3]\ : label is "ASYNC_RST";
begin
  dest_arst <= arststages_ff(3);
\arststages_ff[3]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => src_arst,
      O => reset_pol
    );
\arststages_ff_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '1'
    )
        port map (
      C => dest_clk,
      CE => '1',
      CLR => reset_pol,
      D => '1',
      Q => arststages_ff(0)
    );
\arststages_ff_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '1'
    )
        port map (
      C => dest_clk,
      CE => '1',
      CLR => reset_pol,
      D => arststages_ff(0),
      Q => arststages_ff(1)
    );
\arststages_ff_reg[2]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '1'
    )
        port map (
      C => dest_clk,
      CE => '1',
      CLR => reset_pol,
      D => arststages_ff(1),
      Q => arststages_ff(2)
    );
\arststages_ff_reg[3]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '1'
    )
        port map (
      C => dest_clk,
      CE => '1',
      CLR => reset_pol,
      D => arststages_ff(2),
      Q => arststages_ff(3)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__3\ is
  port (
    src_arst : in STD_LOGIC;
    dest_clk : in STD_LOGIC;
    dest_arst : out STD_LOGIC
  );
  attribute DEF_VAL : string;
  attribute DEF_VAL of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__3\ : entity is "1'b1";
  attribute DEST_SYNC_FF : integer;
  attribute DEST_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__3\ : entity is 4;
  attribute INIT_SYNC_FF : integer;
  attribute INIT_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__3\ : entity is 1;
  attribute INV_DEF_VAL : string;
  attribute INV_DEF_VAL of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__3\ : entity is "1'b0";
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__3\ : entity is "xpm_cdc_async_rst";
  attribute RST_ACTIVE_HIGH : integer;
  attribute RST_ACTIVE_HIGH of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__3\ : entity is 0;
  attribute VERSION : integer;
  attribute VERSION of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__3\ : entity is 0;
  attribute XPM_MODULE : string;
  attribute XPM_MODULE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__3\ : entity is "TRUE";
  attribute keep_hierarchy : string;
  attribute keep_hierarchy of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__3\ : entity is "true";
  attribute xpm_cdc : string;
  attribute xpm_cdc of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__3\ : entity is "ASYNC_RST";
end \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__3\;

architecture STRUCTURE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__3\ is
  signal arststages_ff : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of arststages_ff : signal is "true";
  attribute async_reg : string;
  attribute async_reg of arststages_ff : signal is "true";
  attribute xpm_cdc of arststages_ff : signal is "ASYNC_RST";
  signal reset_pol : STD_LOGIC;
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \arststages_ff_reg[0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \arststages_ff_reg[0]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[0]\ : label is "ASYNC_RST";
  attribute ASYNC_REG_boolean of \arststages_ff_reg[1]\ : label is std.standard.true;
  attribute KEEP of \arststages_ff_reg[1]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[1]\ : label is "ASYNC_RST";
  attribute ASYNC_REG_boolean of \arststages_ff_reg[2]\ : label is std.standard.true;
  attribute KEEP of \arststages_ff_reg[2]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[2]\ : label is "ASYNC_RST";
  attribute ASYNC_REG_boolean of \arststages_ff_reg[3]\ : label is std.standard.true;
  attribute KEEP of \arststages_ff_reg[3]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[3]\ : label is "ASYNC_RST";
begin
  dest_arst <= arststages_ff(3);
\arststages_ff[3]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => src_arst,
      O => reset_pol
    );
\arststages_ff_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '1'
    )
        port map (
      C => dest_clk,
      CE => '1',
      CLR => reset_pol,
      D => '1',
      Q => arststages_ff(0)
    );
\arststages_ff_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '1'
    )
        port map (
      C => dest_clk,
      CE => '1',
      CLR => reset_pol,
      D => arststages_ff(0),
      Q => arststages_ff(1)
    );
\arststages_ff_reg[2]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '1'
    )
        port map (
      C => dest_clk,
      CE => '1',
      CLR => reset_pol,
      D => arststages_ff(1),
      Q => arststages_ff(2)
    );
\arststages_ff_reg[3]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '1'
    )
        port map (
      C => dest_clk,
      CE => '1',
      CLR => reset_pol,
      D => arststages_ff(2),
      Q => arststages_ff(3)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__4\ is
  port (
    src_arst : in STD_LOGIC;
    dest_clk : in STD_LOGIC;
    dest_arst : out STD_LOGIC
  );
  attribute DEF_VAL : string;
  attribute DEF_VAL of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__4\ : entity is "1'b1";
  attribute DEST_SYNC_FF : integer;
  attribute DEST_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__4\ : entity is 4;
  attribute INIT_SYNC_FF : integer;
  attribute INIT_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__4\ : entity is 1;
  attribute INV_DEF_VAL : string;
  attribute INV_DEF_VAL of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__4\ : entity is "1'b0";
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__4\ : entity is "xpm_cdc_async_rst";
  attribute RST_ACTIVE_HIGH : integer;
  attribute RST_ACTIVE_HIGH of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__4\ : entity is 0;
  attribute VERSION : integer;
  attribute VERSION of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__4\ : entity is 0;
  attribute XPM_MODULE : string;
  attribute XPM_MODULE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__4\ : entity is "TRUE";
  attribute keep_hierarchy : string;
  attribute keep_hierarchy of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__4\ : entity is "true";
  attribute xpm_cdc : string;
  attribute xpm_cdc of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__4\ : entity is "ASYNC_RST";
end \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__4\;

architecture STRUCTURE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__4\ is
  signal arststages_ff : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of arststages_ff : signal is "true";
  attribute async_reg : string;
  attribute async_reg of arststages_ff : signal is "true";
  attribute xpm_cdc of arststages_ff : signal is "ASYNC_RST";
  signal reset_pol : STD_LOGIC;
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \arststages_ff_reg[0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \arststages_ff_reg[0]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[0]\ : label is "ASYNC_RST";
  attribute ASYNC_REG_boolean of \arststages_ff_reg[1]\ : label is std.standard.true;
  attribute KEEP of \arststages_ff_reg[1]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[1]\ : label is "ASYNC_RST";
  attribute ASYNC_REG_boolean of \arststages_ff_reg[2]\ : label is std.standard.true;
  attribute KEEP of \arststages_ff_reg[2]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[2]\ : label is "ASYNC_RST";
  attribute ASYNC_REG_boolean of \arststages_ff_reg[3]\ : label is std.standard.true;
  attribute KEEP of \arststages_ff_reg[3]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[3]\ : label is "ASYNC_RST";
begin
  dest_arst <= arststages_ff(3);
\arststages_ff[3]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => src_arst,
      O => reset_pol
    );
\arststages_ff_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '1'
    )
        port map (
      C => dest_clk,
      CE => '1',
      CLR => reset_pol,
      D => '1',
      Q => arststages_ff(0)
    );
\arststages_ff_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '1'
    )
        port map (
      C => dest_clk,
      CE => '1',
      CLR => reset_pol,
      D => arststages_ff(0),
      Q => arststages_ff(1)
    );
\arststages_ff_reg[2]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '1'
    )
        port map (
      C => dest_clk,
      CE => '1',
      CLR => reset_pol,
      D => arststages_ff(1),
      Q => arststages_ff(2)
    );
\arststages_ff_reg[3]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '1'
    )
        port map (
      C => dest_clk,
      CE => '1',
      CLR => reset_pol,
      D => arststages_ff(2),
      Q => arststages_ff(3)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__5\ is
  port (
    src_arst : in STD_LOGIC;
    dest_clk : in STD_LOGIC;
    dest_arst : out STD_LOGIC
  );
  attribute DEF_VAL : string;
  attribute DEF_VAL of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__5\ : entity is "1'b1";
  attribute DEST_SYNC_FF : integer;
  attribute DEST_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__5\ : entity is 4;
  attribute INIT_SYNC_FF : integer;
  attribute INIT_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__5\ : entity is 1;
  attribute INV_DEF_VAL : string;
  attribute INV_DEF_VAL of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__5\ : entity is "1'b0";
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__5\ : entity is "xpm_cdc_async_rst";
  attribute RST_ACTIVE_HIGH : integer;
  attribute RST_ACTIVE_HIGH of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__5\ : entity is 0;
  attribute VERSION : integer;
  attribute VERSION of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__5\ : entity is 0;
  attribute XPM_MODULE : string;
  attribute XPM_MODULE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__5\ : entity is "TRUE";
  attribute keep_hierarchy : string;
  attribute keep_hierarchy of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__5\ : entity is "true";
  attribute xpm_cdc : string;
  attribute xpm_cdc of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__5\ : entity is "ASYNC_RST";
end \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__5\;

architecture STRUCTURE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__5\ is
  signal arststages_ff : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of arststages_ff : signal is "true";
  attribute async_reg : string;
  attribute async_reg of arststages_ff : signal is "true";
  attribute xpm_cdc of arststages_ff : signal is "ASYNC_RST";
  signal reset_pol : STD_LOGIC;
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \arststages_ff_reg[0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \arststages_ff_reg[0]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[0]\ : label is "ASYNC_RST";
  attribute ASYNC_REG_boolean of \arststages_ff_reg[1]\ : label is std.standard.true;
  attribute KEEP of \arststages_ff_reg[1]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[1]\ : label is "ASYNC_RST";
  attribute ASYNC_REG_boolean of \arststages_ff_reg[2]\ : label is std.standard.true;
  attribute KEEP of \arststages_ff_reg[2]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[2]\ : label is "ASYNC_RST";
  attribute ASYNC_REG_boolean of \arststages_ff_reg[3]\ : label is std.standard.true;
  attribute KEEP of \arststages_ff_reg[3]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[3]\ : label is "ASYNC_RST";
begin
  dest_arst <= arststages_ff(3);
\arststages_ff[3]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => src_arst,
      O => reset_pol
    );
\arststages_ff_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '1'
    )
        port map (
      C => dest_clk,
      CE => '1',
      CLR => reset_pol,
      D => '1',
      Q => arststages_ff(0)
    );
\arststages_ff_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '1'
    )
        port map (
      C => dest_clk,
      CE => '1',
      CLR => reset_pol,
      D => arststages_ff(0),
      Q => arststages_ff(1)
    );
\arststages_ff_reg[2]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '1'
    )
        port map (
      C => dest_clk,
      CE => '1',
      CLR => reset_pol,
      D => arststages_ff(1),
      Q => arststages_ff(2)
    );
\arststages_ff_reg[3]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '1'
    )
        port map (
      C => dest_clk,
      CE => '1',
      CLR => reset_pol,
      D => arststages_ff(2),
      Q => arststages_ff(3)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__6\ is
  port (
    src_arst : in STD_LOGIC;
    dest_clk : in STD_LOGIC;
    dest_arst : out STD_LOGIC
  );
  attribute DEF_VAL : string;
  attribute DEF_VAL of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__6\ : entity is "1'b1";
  attribute DEST_SYNC_FF : integer;
  attribute DEST_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__6\ : entity is 4;
  attribute INIT_SYNC_FF : integer;
  attribute INIT_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__6\ : entity is 1;
  attribute INV_DEF_VAL : string;
  attribute INV_DEF_VAL of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__6\ : entity is "1'b0";
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__6\ : entity is "xpm_cdc_async_rst";
  attribute RST_ACTIVE_HIGH : integer;
  attribute RST_ACTIVE_HIGH of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__6\ : entity is 0;
  attribute VERSION : integer;
  attribute VERSION of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__6\ : entity is 0;
  attribute XPM_MODULE : string;
  attribute XPM_MODULE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__6\ : entity is "TRUE";
  attribute keep_hierarchy : string;
  attribute keep_hierarchy of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__6\ : entity is "true";
  attribute xpm_cdc : string;
  attribute xpm_cdc of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__6\ : entity is "ASYNC_RST";
end \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__6\;

architecture STRUCTURE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__6\ is
  signal arststages_ff : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of arststages_ff : signal is "true";
  attribute async_reg : string;
  attribute async_reg of arststages_ff : signal is "true";
  attribute xpm_cdc of arststages_ff : signal is "ASYNC_RST";
  signal reset_pol : STD_LOGIC;
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \arststages_ff_reg[0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \arststages_ff_reg[0]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[0]\ : label is "ASYNC_RST";
  attribute ASYNC_REG_boolean of \arststages_ff_reg[1]\ : label is std.standard.true;
  attribute KEEP of \arststages_ff_reg[1]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[1]\ : label is "ASYNC_RST";
  attribute ASYNC_REG_boolean of \arststages_ff_reg[2]\ : label is std.standard.true;
  attribute KEEP of \arststages_ff_reg[2]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[2]\ : label is "ASYNC_RST";
  attribute ASYNC_REG_boolean of \arststages_ff_reg[3]\ : label is std.standard.true;
  attribute KEEP of \arststages_ff_reg[3]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[3]\ : label is "ASYNC_RST";
begin
  dest_arst <= arststages_ff(3);
\arststages_ff[3]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => src_arst,
      O => reset_pol
    );
\arststages_ff_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '1'
    )
        port map (
      C => dest_clk,
      CE => '1',
      CLR => reset_pol,
      D => '1',
      Q => arststages_ff(0)
    );
\arststages_ff_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '1'
    )
        port map (
      C => dest_clk,
      CE => '1',
      CLR => reset_pol,
      D => arststages_ff(0),
      Q => arststages_ff(1)
    );
\arststages_ff_reg[2]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '1'
    )
        port map (
      C => dest_clk,
      CE => '1',
      CLR => reset_pol,
      D => arststages_ff(1),
      Q => arststages_ff(2)
    );
\arststages_ff_reg[3]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '1'
    )
        port map (
      C => dest_clk,
      CE => '1',
      CLR => reset_pol,
      D => arststages_ff(2),
      Q => arststages_ff(3)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__7\ is
  port (
    src_arst : in STD_LOGIC;
    dest_clk : in STD_LOGIC;
    dest_arst : out STD_LOGIC
  );
  attribute DEF_VAL : string;
  attribute DEF_VAL of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__7\ : entity is "1'b1";
  attribute DEST_SYNC_FF : integer;
  attribute DEST_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__7\ : entity is 4;
  attribute INIT_SYNC_FF : integer;
  attribute INIT_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__7\ : entity is 1;
  attribute INV_DEF_VAL : string;
  attribute INV_DEF_VAL of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__7\ : entity is "1'b0";
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__7\ : entity is "xpm_cdc_async_rst";
  attribute RST_ACTIVE_HIGH : integer;
  attribute RST_ACTIVE_HIGH of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__7\ : entity is 0;
  attribute VERSION : integer;
  attribute VERSION of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__7\ : entity is 0;
  attribute XPM_MODULE : string;
  attribute XPM_MODULE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__7\ : entity is "TRUE";
  attribute keep_hierarchy : string;
  attribute keep_hierarchy of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__7\ : entity is "true";
  attribute xpm_cdc : string;
  attribute xpm_cdc of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__7\ : entity is "ASYNC_RST";
end \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__7\;

architecture STRUCTURE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__7\ is
  signal arststages_ff : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of arststages_ff : signal is "true";
  attribute async_reg : string;
  attribute async_reg of arststages_ff : signal is "true";
  attribute xpm_cdc of arststages_ff : signal is "ASYNC_RST";
  signal reset_pol : STD_LOGIC;
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \arststages_ff_reg[0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \arststages_ff_reg[0]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[0]\ : label is "ASYNC_RST";
  attribute ASYNC_REG_boolean of \arststages_ff_reg[1]\ : label is std.standard.true;
  attribute KEEP of \arststages_ff_reg[1]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[1]\ : label is "ASYNC_RST";
  attribute ASYNC_REG_boolean of \arststages_ff_reg[2]\ : label is std.standard.true;
  attribute KEEP of \arststages_ff_reg[2]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[2]\ : label is "ASYNC_RST";
  attribute ASYNC_REG_boolean of \arststages_ff_reg[3]\ : label is std.standard.true;
  attribute KEEP of \arststages_ff_reg[3]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[3]\ : label is "ASYNC_RST";
begin
  dest_arst <= arststages_ff(3);
\arststages_ff[3]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => src_arst,
      O => reset_pol
    );
\arststages_ff_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '1'
    )
        port map (
      C => dest_clk,
      CE => '1',
      CLR => reset_pol,
      D => '1',
      Q => arststages_ff(0)
    );
\arststages_ff_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '1'
    )
        port map (
      C => dest_clk,
      CE => '1',
      CLR => reset_pol,
      D => arststages_ff(0),
      Q => arststages_ff(1)
    );
\arststages_ff_reg[2]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '1'
    )
        port map (
      C => dest_clk,
      CE => '1',
      CLR => reset_pol,
      D => arststages_ff(1),
      Q => arststages_ff(2)
    );
\arststages_ff_reg[3]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '1'
    )
        port map (
      C => dest_clk,
      CE => '1',
      CLR => reset_pol,
      D => arststages_ff(2),
      Q => arststages_ff(3)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__8\ is
  port (
    src_arst : in STD_LOGIC;
    dest_clk : in STD_LOGIC;
    dest_arst : out STD_LOGIC
  );
  attribute DEF_VAL : string;
  attribute DEF_VAL of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__8\ : entity is "1'b1";
  attribute DEST_SYNC_FF : integer;
  attribute DEST_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__8\ : entity is 4;
  attribute INIT_SYNC_FF : integer;
  attribute INIT_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__8\ : entity is 1;
  attribute INV_DEF_VAL : string;
  attribute INV_DEF_VAL of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__8\ : entity is "1'b0";
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__8\ : entity is "xpm_cdc_async_rst";
  attribute RST_ACTIVE_HIGH : integer;
  attribute RST_ACTIVE_HIGH of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__8\ : entity is 0;
  attribute VERSION : integer;
  attribute VERSION of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__8\ : entity is 0;
  attribute XPM_MODULE : string;
  attribute XPM_MODULE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__8\ : entity is "TRUE";
  attribute keep_hierarchy : string;
  attribute keep_hierarchy of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__8\ : entity is "true";
  attribute xpm_cdc : string;
  attribute xpm_cdc of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__8\ : entity is "ASYNC_RST";
end \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__8\;

architecture STRUCTURE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__8\ is
  signal arststages_ff : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of arststages_ff : signal is "true";
  attribute async_reg : string;
  attribute async_reg of arststages_ff : signal is "true";
  attribute xpm_cdc of arststages_ff : signal is "ASYNC_RST";
  signal reset_pol : STD_LOGIC;
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \arststages_ff_reg[0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \arststages_ff_reg[0]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[0]\ : label is "ASYNC_RST";
  attribute ASYNC_REG_boolean of \arststages_ff_reg[1]\ : label is std.standard.true;
  attribute KEEP of \arststages_ff_reg[1]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[1]\ : label is "ASYNC_RST";
  attribute ASYNC_REG_boolean of \arststages_ff_reg[2]\ : label is std.standard.true;
  attribute KEEP of \arststages_ff_reg[2]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[2]\ : label is "ASYNC_RST";
  attribute ASYNC_REG_boolean of \arststages_ff_reg[3]\ : label is std.standard.true;
  attribute KEEP of \arststages_ff_reg[3]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[3]\ : label is "ASYNC_RST";
begin
  dest_arst <= arststages_ff(3);
\arststages_ff[3]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => src_arst,
      O => reset_pol
    );
\arststages_ff_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '1'
    )
        port map (
      C => dest_clk,
      CE => '1',
      CLR => reset_pol,
      D => '1',
      Q => arststages_ff(0)
    );
\arststages_ff_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '1'
    )
        port map (
      C => dest_clk,
      CE => '1',
      CLR => reset_pol,
      D => arststages_ff(0),
      Q => arststages_ff(1)
    );
\arststages_ff_reg[2]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '1'
    )
        port map (
      C => dest_clk,
      CE => '1',
      CLR => reset_pol,
      D => arststages_ff(1),
      Q => arststages_ff(2)
    );
\arststages_ff_reg[3]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '1'
    )
        port map (
      C => dest_clk,
      CE => '1',
      CLR => reset_pol,
      D => arststages_ff(2),
      Q => arststages_ff(3)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1\ is
  port (
    src_arst : in STD_LOGIC;
    dest_clk : in STD_LOGIC;
    dest_arst : out STD_LOGIC
  );
  attribute DEF_VAL : string;
  attribute DEF_VAL of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1\ : entity is "1'b0";
  attribute DEST_SYNC_FF : integer;
  attribute DEST_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1\ : entity is 3;
  attribute INIT_SYNC_FF : integer;
  attribute INIT_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1\ : entity is 0;
  attribute INV_DEF_VAL : string;
  attribute INV_DEF_VAL of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1\ : entity is "1'b1";
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1\ : entity is "xpm_cdc_async_rst";
  attribute RST_ACTIVE_HIGH : integer;
  attribute RST_ACTIVE_HIGH of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1\ : entity is 1;
  attribute VERSION : integer;
  attribute VERSION of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1\ : entity is 0;
  attribute XPM_MODULE : string;
  attribute XPM_MODULE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1\ : entity is "TRUE";
  attribute keep_hierarchy : string;
  attribute keep_hierarchy of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1\ : entity is "true";
  attribute xpm_cdc : string;
  attribute xpm_cdc of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1\ : entity is "ASYNC_RST";
end \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1\;

architecture STRUCTURE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1\ is
  signal arststages_ff : STD_LOGIC_VECTOR ( 2 downto 0 );
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of arststages_ff : signal is "true";
  attribute async_reg : string;
  attribute async_reg of arststages_ff : signal is "true";
  attribute xpm_cdc of arststages_ff : signal is "ASYNC_RST";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \arststages_ff_reg[0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \arststages_ff_reg[0]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[0]\ : label is "ASYNC_RST";
  attribute ASYNC_REG_boolean of \arststages_ff_reg[1]\ : label is std.standard.true;
  attribute KEEP of \arststages_ff_reg[1]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[1]\ : label is "ASYNC_RST";
  attribute ASYNC_REG_boolean of \arststages_ff_reg[2]\ : label is std.standard.true;
  attribute KEEP of \arststages_ff_reg[2]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[2]\ : label is "ASYNC_RST";
begin
  dest_arst <= arststages_ff(2);
\arststages_ff_reg[0]\: unisim.vcomponents.FDPE
    generic map(
      INIT => '0'
    )
        port map (
      C => dest_clk,
      CE => '1',
      D => '0',
      PRE => src_arst,
      Q => arststages_ff(0)
    );
\arststages_ff_reg[1]\: unisim.vcomponents.FDPE
    generic map(
      INIT => '0'
    )
        port map (
      C => dest_clk,
      CE => '1',
      D => arststages_ff(0),
      PRE => src_arst,
      Q => arststages_ff(1)
    );
\arststages_ff_reg[2]\: unisim.vcomponents.FDPE
    generic map(
      INIT => '0'
    )
        port map (
      C => dest_clk,
      CE => '1',
      D => arststages_ff(1),
      PRE => src_arst,
      Q => arststages_ff(2)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__2\ is
  port (
    src_arst : in STD_LOGIC;
    dest_clk : in STD_LOGIC;
    dest_arst : out STD_LOGIC
  );
  attribute DEF_VAL : string;
  attribute DEF_VAL of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__2\ : entity is "1'b0";
  attribute DEST_SYNC_FF : integer;
  attribute DEST_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__2\ : entity is 3;
  attribute INIT_SYNC_FF : integer;
  attribute INIT_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__2\ : entity is 0;
  attribute INV_DEF_VAL : string;
  attribute INV_DEF_VAL of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__2\ : entity is "1'b1";
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__2\ : entity is "xpm_cdc_async_rst";
  attribute RST_ACTIVE_HIGH : integer;
  attribute RST_ACTIVE_HIGH of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__2\ : entity is 1;
  attribute VERSION : integer;
  attribute VERSION of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__2\ : entity is 0;
  attribute XPM_MODULE : string;
  attribute XPM_MODULE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__2\ : entity is "TRUE";
  attribute keep_hierarchy : string;
  attribute keep_hierarchy of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__2\ : entity is "true";
  attribute xpm_cdc : string;
  attribute xpm_cdc of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__2\ : entity is "ASYNC_RST";
end \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__2\;

architecture STRUCTURE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__2\ is
  signal arststages_ff : STD_LOGIC_VECTOR ( 2 downto 0 );
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of arststages_ff : signal is "true";
  attribute async_reg : string;
  attribute async_reg of arststages_ff : signal is "true";
  attribute xpm_cdc of arststages_ff : signal is "ASYNC_RST";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \arststages_ff_reg[0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \arststages_ff_reg[0]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[0]\ : label is "ASYNC_RST";
  attribute ASYNC_REG_boolean of \arststages_ff_reg[1]\ : label is std.standard.true;
  attribute KEEP of \arststages_ff_reg[1]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[1]\ : label is "ASYNC_RST";
  attribute ASYNC_REG_boolean of \arststages_ff_reg[2]\ : label is std.standard.true;
  attribute KEEP of \arststages_ff_reg[2]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[2]\ : label is "ASYNC_RST";
begin
  dest_arst <= arststages_ff(2);
\arststages_ff_reg[0]\: unisim.vcomponents.FDPE
    generic map(
      INIT => '0'
    )
        port map (
      C => dest_clk,
      CE => '1',
      D => '0',
      PRE => src_arst,
      Q => arststages_ff(0)
    );
\arststages_ff_reg[1]\: unisim.vcomponents.FDPE
    generic map(
      INIT => '0'
    )
        port map (
      C => dest_clk,
      CE => '1',
      D => arststages_ff(0),
      PRE => src_arst,
      Q => arststages_ff(1)
    );
\arststages_ff_reg[2]\: unisim.vcomponents.FDPE
    generic map(
      INIT => '0'
    )
        port map (
      C => dest_clk,
      CE => '1',
      D => arststages_ff(1),
      PRE => src_arst,
      Q => arststages_ff(2)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__3\ is
  port (
    src_arst : in STD_LOGIC;
    dest_clk : in STD_LOGIC;
    dest_arst : out STD_LOGIC
  );
  attribute DEF_VAL : string;
  attribute DEF_VAL of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__3\ : entity is "1'b0";
  attribute DEST_SYNC_FF : integer;
  attribute DEST_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__3\ : entity is 3;
  attribute INIT_SYNC_FF : integer;
  attribute INIT_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__3\ : entity is 0;
  attribute INV_DEF_VAL : string;
  attribute INV_DEF_VAL of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__3\ : entity is "1'b1";
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__3\ : entity is "xpm_cdc_async_rst";
  attribute RST_ACTIVE_HIGH : integer;
  attribute RST_ACTIVE_HIGH of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__3\ : entity is 1;
  attribute VERSION : integer;
  attribute VERSION of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__3\ : entity is 0;
  attribute XPM_MODULE : string;
  attribute XPM_MODULE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__3\ : entity is "TRUE";
  attribute keep_hierarchy : string;
  attribute keep_hierarchy of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__3\ : entity is "true";
  attribute xpm_cdc : string;
  attribute xpm_cdc of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__3\ : entity is "ASYNC_RST";
end \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__3\;

architecture STRUCTURE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__3\ is
  signal arststages_ff : STD_LOGIC_VECTOR ( 2 downto 0 );
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of arststages_ff : signal is "true";
  attribute async_reg : string;
  attribute async_reg of arststages_ff : signal is "true";
  attribute xpm_cdc of arststages_ff : signal is "ASYNC_RST";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \arststages_ff_reg[0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \arststages_ff_reg[0]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[0]\ : label is "ASYNC_RST";
  attribute ASYNC_REG_boolean of \arststages_ff_reg[1]\ : label is std.standard.true;
  attribute KEEP of \arststages_ff_reg[1]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[1]\ : label is "ASYNC_RST";
  attribute ASYNC_REG_boolean of \arststages_ff_reg[2]\ : label is std.standard.true;
  attribute KEEP of \arststages_ff_reg[2]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[2]\ : label is "ASYNC_RST";
begin
  dest_arst <= arststages_ff(2);
\arststages_ff_reg[0]\: unisim.vcomponents.FDPE
    generic map(
      INIT => '0'
    )
        port map (
      C => dest_clk,
      CE => '1',
      D => '0',
      PRE => src_arst,
      Q => arststages_ff(0)
    );
\arststages_ff_reg[1]\: unisim.vcomponents.FDPE
    generic map(
      INIT => '0'
    )
        port map (
      C => dest_clk,
      CE => '1',
      D => arststages_ff(0),
      PRE => src_arst,
      Q => arststages_ff(1)
    );
\arststages_ff_reg[2]\: unisim.vcomponents.FDPE
    generic map(
      INIT => '0'
    )
        port map (
      C => dest_clk,
      CE => '1',
      D => arststages_ff(1),
      PRE => src_arst,
      Q => arststages_ff(2)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__4\ is
  port (
    src_arst : in STD_LOGIC;
    dest_clk : in STD_LOGIC;
    dest_arst : out STD_LOGIC
  );
  attribute DEF_VAL : string;
  attribute DEF_VAL of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__4\ : entity is "1'b0";
  attribute DEST_SYNC_FF : integer;
  attribute DEST_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__4\ : entity is 3;
  attribute INIT_SYNC_FF : integer;
  attribute INIT_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__4\ : entity is 0;
  attribute INV_DEF_VAL : string;
  attribute INV_DEF_VAL of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__4\ : entity is "1'b1";
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__4\ : entity is "xpm_cdc_async_rst";
  attribute RST_ACTIVE_HIGH : integer;
  attribute RST_ACTIVE_HIGH of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__4\ : entity is 1;
  attribute VERSION : integer;
  attribute VERSION of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__4\ : entity is 0;
  attribute XPM_MODULE : string;
  attribute XPM_MODULE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__4\ : entity is "TRUE";
  attribute keep_hierarchy : string;
  attribute keep_hierarchy of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__4\ : entity is "true";
  attribute xpm_cdc : string;
  attribute xpm_cdc of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__4\ : entity is "ASYNC_RST";
end \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__4\;

architecture STRUCTURE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__4\ is
  signal arststages_ff : STD_LOGIC_VECTOR ( 2 downto 0 );
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of arststages_ff : signal is "true";
  attribute async_reg : string;
  attribute async_reg of arststages_ff : signal is "true";
  attribute xpm_cdc of arststages_ff : signal is "ASYNC_RST";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \arststages_ff_reg[0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \arststages_ff_reg[0]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[0]\ : label is "ASYNC_RST";
  attribute ASYNC_REG_boolean of \arststages_ff_reg[1]\ : label is std.standard.true;
  attribute KEEP of \arststages_ff_reg[1]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[1]\ : label is "ASYNC_RST";
  attribute ASYNC_REG_boolean of \arststages_ff_reg[2]\ : label is std.standard.true;
  attribute KEEP of \arststages_ff_reg[2]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[2]\ : label is "ASYNC_RST";
begin
  dest_arst <= arststages_ff(2);
\arststages_ff_reg[0]\: unisim.vcomponents.FDPE
    generic map(
      INIT => '0'
    )
        port map (
      C => dest_clk,
      CE => '1',
      D => '0',
      PRE => src_arst,
      Q => arststages_ff(0)
    );
\arststages_ff_reg[1]\: unisim.vcomponents.FDPE
    generic map(
      INIT => '0'
    )
        port map (
      C => dest_clk,
      CE => '1',
      D => arststages_ff(0),
      PRE => src_arst,
      Q => arststages_ff(1)
    );
\arststages_ff_reg[2]\: unisim.vcomponents.FDPE
    generic map(
      INIT => '0'
    )
        port map (
      C => dest_clk,
      CE => '1',
      D => arststages_ff(1),
      PRE => src_arst,
      Q => arststages_ff(2)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__5\ is
  port (
    src_arst : in STD_LOGIC;
    dest_clk : in STD_LOGIC;
    dest_arst : out STD_LOGIC
  );
  attribute DEF_VAL : string;
  attribute DEF_VAL of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__5\ : entity is "1'b0";
  attribute DEST_SYNC_FF : integer;
  attribute DEST_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__5\ : entity is 3;
  attribute INIT_SYNC_FF : integer;
  attribute INIT_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__5\ : entity is 0;
  attribute INV_DEF_VAL : string;
  attribute INV_DEF_VAL of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__5\ : entity is "1'b1";
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__5\ : entity is "xpm_cdc_async_rst";
  attribute RST_ACTIVE_HIGH : integer;
  attribute RST_ACTIVE_HIGH of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__5\ : entity is 1;
  attribute VERSION : integer;
  attribute VERSION of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__5\ : entity is 0;
  attribute XPM_MODULE : string;
  attribute XPM_MODULE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__5\ : entity is "TRUE";
  attribute keep_hierarchy : string;
  attribute keep_hierarchy of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__5\ : entity is "true";
  attribute xpm_cdc : string;
  attribute xpm_cdc of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__5\ : entity is "ASYNC_RST";
end \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__5\;

architecture STRUCTURE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__5\ is
  signal arststages_ff : STD_LOGIC_VECTOR ( 2 downto 0 );
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of arststages_ff : signal is "true";
  attribute async_reg : string;
  attribute async_reg of arststages_ff : signal is "true";
  attribute xpm_cdc of arststages_ff : signal is "ASYNC_RST";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \arststages_ff_reg[0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \arststages_ff_reg[0]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[0]\ : label is "ASYNC_RST";
  attribute ASYNC_REG_boolean of \arststages_ff_reg[1]\ : label is std.standard.true;
  attribute KEEP of \arststages_ff_reg[1]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[1]\ : label is "ASYNC_RST";
  attribute ASYNC_REG_boolean of \arststages_ff_reg[2]\ : label is std.standard.true;
  attribute KEEP of \arststages_ff_reg[2]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[2]\ : label is "ASYNC_RST";
begin
  dest_arst <= arststages_ff(2);
\arststages_ff_reg[0]\: unisim.vcomponents.FDPE
    generic map(
      INIT => '0'
    )
        port map (
      C => dest_clk,
      CE => '1',
      D => '0',
      PRE => src_arst,
      Q => arststages_ff(0)
    );
\arststages_ff_reg[1]\: unisim.vcomponents.FDPE
    generic map(
      INIT => '0'
    )
        port map (
      C => dest_clk,
      CE => '1',
      D => arststages_ff(0),
      PRE => src_arst,
      Q => arststages_ff(1)
    );
\arststages_ff_reg[2]\: unisim.vcomponents.FDPE
    generic map(
      INIT => '0'
    )
        port map (
      C => dest_clk,
      CE => '1',
      D => arststages_ff(1),
      PRE => src_arst,
      Q => arststages_ff(2)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__6\ is
  port (
    src_arst : in STD_LOGIC;
    dest_clk : in STD_LOGIC;
    dest_arst : out STD_LOGIC
  );
  attribute DEF_VAL : string;
  attribute DEF_VAL of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__6\ : entity is "1'b0";
  attribute DEST_SYNC_FF : integer;
  attribute DEST_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__6\ : entity is 3;
  attribute INIT_SYNC_FF : integer;
  attribute INIT_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__6\ : entity is 0;
  attribute INV_DEF_VAL : string;
  attribute INV_DEF_VAL of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__6\ : entity is "1'b1";
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__6\ : entity is "xpm_cdc_async_rst";
  attribute RST_ACTIVE_HIGH : integer;
  attribute RST_ACTIVE_HIGH of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__6\ : entity is 1;
  attribute VERSION : integer;
  attribute VERSION of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__6\ : entity is 0;
  attribute XPM_MODULE : string;
  attribute XPM_MODULE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__6\ : entity is "TRUE";
  attribute keep_hierarchy : string;
  attribute keep_hierarchy of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__6\ : entity is "true";
  attribute xpm_cdc : string;
  attribute xpm_cdc of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__6\ : entity is "ASYNC_RST";
end \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__6\;

architecture STRUCTURE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__6\ is
  signal arststages_ff : STD_LOGIC_VECTOR ( 2 downto 0 );
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of arststages_ff : signal is "true";
  attribute async_reg : string;
  attribute async_reg of arststages_ff : signal is "true";
  attribute xpm_cdc of arststages_ff : signal is "ASYNC_RST";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \arststages_ff_reg[0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \arststages_ff_reg[0]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[0]\ : label is "ASYNC_RST";
  attribute ASYNC_REG_boolean of \arststages_ff_reg[1]\ : label is std.standard.true;
  attribute KEEP of \arststages_ff_reg[1]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[1]\ : label is "ASYNC_RST";
  attribute ASYNC_REG_boolean of \arststages_ff_reg[2]\ : label is std.standard.true;
  attribute KEEP of \arststages_ff_reg[2]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[2]\ : label is "ASYNC_RST";
begin
  dest_arst <= arststages_ff(2);
\arststages_ff_reg[0]\: unisim.vcomponents.FDPE
    generic map(
      INIT => '0'
    )
        port map (
      C => dest_clk,
      CE => '1',
      D => '0',
      PRE => src_arst,
      Q => arststages_ff(0)
    );
\arststages_ff_reg[1]\: unisim.vcomponents.FDPE
    generic map(
      INIT => '0'
    )
        port map (
      C => dest_clk,
      CE => '1',
      D => arststages_ff(0),
      PRE => src_arst,
      Q => arststages_ff(1)
    );
\arststages_ff_reg[2]\: unisim.vcomponents.FDPE
    generic map(
      INIT => '0'
    )
        port map (
      C => dest_clk,
      CE => '1',
      D => arststages_ff(1),
      PRE => src_arst,
      Q => arststages_ff(2)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__7\ is
  port (
    src_arst : in STD_LOGIC;
    dest_clk : in STD_LOGIC;
    dest_arst : out STD_LOGIC
  );
  attribute DEF_VAL : string;
  attribute DEF_VAL of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__7\ : entity is "1'b0";
  attribute DEST_SYNC_FF : integer;
  attribute DEST_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__7\ : entity is 3;
  attribute INIT_SYNC_FF : integer;
  attribute INIT_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__7\ : entity is 0;
  attribute INV_DEF_VAL : string;
  attribute INV_DEF_VAL of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__7\ : entity is "1'b1";
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__7\ : entity is "xpm_cdc_async_rst";
  attribute RST_ACTIVE_HIGH : integer;
  attribute RST_ACTIVE_HIGH of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__7\ : entity is 1;
  attribute VERSION : integer;
  attribute VERSION of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__7\ : entity is 0;
  attribute XPM_MODULE : string;
  attribute XPM_MODULE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__7\ : entity is "TRUE";
  attribute keep_hierarchy : string;
  attribute keep_hierarchy of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__7\ : entity is "true";
  attribute xpm_cdc : string;
  attribute xpm_cdc of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__7\ : entity is "ASYNC_RST";
end \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__7\;

architecture STRUCTURE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__7\ is
  signal arststages_ff : STD_LOGIC_VECTOR ( 2 downto 0 );
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of arststages_ff : signal is "true";
  attribute async_reg : string;
  attribute async_reg of arststages_ff : signal is "true";
  attribute xpm_cdc of arststages_ff : signal is "ASYNC_RST";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \arststages_ff_reg[0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \arststages_ff_reg[0]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[0]\ : label is "ASYNC_RST";
  attribute ASYNC_REG_boolean of \arststages_ff_reg[1]\ : label is std.standard.true;
  attribute KEEP of \arststages_ff_reg[1]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[1]\ : label is "ASYNC_RST";
  attribute ASYNC_REG_boolean of \arststages_ff_reg[2]\ : label is std.standard.true;
  attribute KEEP of \arststages_ff_reg[2]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[2]\ : label is "ASYNC_RST";
begin
  dest_arst <= arststages_ff(2);
\arststages_ff_reg[0]\: unisim.vcomponents.FDPE
    generic map(
      INIT => '0'
    )
        port map (
      C => dest_clk,
      CE => '1',
      D => '0',
      PRE => src_arst,
      Q => arststages_ff(0)
    );
\arststages_ff_reg[1]\: unisim.vcomponents.FDPE
    generic map(
      INIT => '0'
    )
        port map (
      C => dest_clk,
      CE => '1',
      D => arststages_ff(0),
      PRE => src_arst,
      Q => arststages_ff(1)
    );
\arststages_ff_reg[2]\: unisim.vcomponents.FDPE
    generic map(
      INIT => '0'
    )
        port map (
      C => dest_clk,
      CE => '1',
      D => arststages_ff(1),
      PRE => src_arst,
      Q => arststages_ff(2)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__8\ is
  port (
    src_arst : in STD_LOGIC;
    dest_clk : in STD_LOGIC;
    dest_arst : out STD_LOGIC
  );
  attribute DEF_VAL : string;
  attribute DEF_VAL of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__8\ : entity is "1'b0";
  attribute DEST_SYNC_FF : integer;
  attribute DEST_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__8\ : entity is 3;
  attribute INIT_SYNC_FF : integer;
  attribute INIT_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__8\ : entity is 0;
  attribute INV_DEF_VAL : string;
  attribute INV_DEF_VAL of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__8\ : entity is "1'b1";
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__8\ : entity is "xpm_cdc_async_rst";
  attribute RST_ACTIVE_HIGH : integer;
  attribute RST_ACTIVE_HIGH of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__8\ : entity is 1;
  attribute VERSION : integer;
  attribute VERSION of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__8\ : entity is 0;
  attribute XPM_MODULE : string;
  attribute XPM_MODULE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__8\ : entity is "TRUE";
  attribute keep_hierarchy : string;
  attribute keep_hierarchy of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__8\ : entity is "true";
  attribute xpm_cdc : string;
  attribute xpm_cdc of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__8\ : entity is "ASYNC_RST";
end \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__8\;

architecture STRUCTURE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__8\ is
  signal arststages_ff : STD_LOGIC_VECTOR ( 2 downto 0 );
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of arststages_ff : signal is "true";
  attribute async_reg : string;
  attribute async_reg of arststages_ff : signal is "true";
  attribute xpm_cdc of arststages_ff : signal is "ASYNC_RST";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \arststages_ff_reg[0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \arststages_ff_reg[0]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[0]\ : label is "ASYNC_RST";
  attribute ASYNC_REG_boolean of \arststages_ff_reg[1]\ : label is std.standard.true;
  attribute KEEP of \arststages_ff_reg[1]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[1]\ : label is "ASYNC_RST";
  attribute ASYNC_REG_boolean of \arststages_ff_reg[2]\ : label is std.standard.true;
  attribute KEEP of \arststages_ff_reg[2]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[2]\ : label is "ASYNC_RST";
begin
  dest_arst <= arststages_ff(2);
\arststages_ff_reg[0]\: unisim.vcomponents.FDPE
    generic map(
      INIT => '0'
    )
        port map (
      C => dest_clk,
      CE => '1',
      D => '0',
      PRE => src_arst,
      Q => arststages_ff(0)
    );
\arststages_ff_reg[1]\: unisim.vcomponents.FDPE
    generic map(
      INIT => '0'
    )
        port map (
      C => dest_clk,
      CE => '1',
      D => arststages_ff(0),
      PRE => src_arst,
      Q => arststages_ff(1)
    );
\arststages_ff_reg[2]\: unisim.vcomponents.FDPE
    generic map(
      INIT => '0'
    )
        port map (
      C => dest_clk,
      CE => '1',
      D => arststages_ff(1),
      PRE => src_arst,
      Q => arststages_ff(2)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__9\ is
  port (
    src_arst : in STD_LOGIC;
    dest_clk : in STD_LOGIC;
    dest_arst : out STD_LOGIC
  );
  attribute DEF_VAL : string;
  attribute DEF_VAL of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__9\ : entity is "1'b0";
  attribute DEST_SYNC_FF : integer;
  attribute DEST_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__9\ : entity is 3;
  attribute INIT_SYNC_FF : integer;
  attribute INIT_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__9\ : entity is 0;
  attribute INV_DEF_VAL : string;
  attribute INV_DEF_VAL of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__9\ : entity is "1'b1";
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__9\ : entity is "xpm_cdc_async_rst";
  attribute RST_ACTIVE_HIGH : integer;
  attribute RST_ACTIVE_HIGH of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__9\ : entity is 1;
  attribute VERSION : integer;
  attribute VERSION of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__9\ : entity is 0;
  attribute XPM_MODULE : string;
  attribute XPM_MODULE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__9\ : entity is "TRUE";
  attribute keep_hierarchy : string;
  attribute keep_hierarchy of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__9\ : entity is "true";
  attribute xpm_cdc : string;
  attribute xpm_cdc of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__9\ : entity is "ASYNC_RST";
end \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__9\;

architecture STRUCTURE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__9\ is
  signal arststages_ff : STD_LOGIC_VECTOR ( 2 downto 0 );
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of arststages_ff : signal is "true";
  attribute async_reg : string;
  attribute async_reg of arststages_ff : signal is "true";
  attribute xpm_cdc of arststages_ff : signal is "ASYNC_RST";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \arststages_ff_reg[0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \arststages_ff_reg[0]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[0]\ : label is "ASYNC_RST";
  attribute ASYNC_REG_boolean of \arststages_ff_reg[1]\ : label is std.standard.true;
  attribute KEEP of \arststages_ff_reg[1]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[1]\ : label is "ASYNC_RST";
  attribute ASYNC_REG_boolean of \arststages_ff_reg[2]\ : label is std.standard.true;
  attribute KEEP of \arststages_ff_reg[2]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[2]\ : label is "ASYNC_RST";
begin
  dest_arst <= arststages_ff(2);
\arststages_ff_reg[0]\: unisim.vcomponents.FDPE
    generic map(
      INIT => '0'
    )
        port map (
      C => dest_clk,
      CE => '1',
      D => '0',
      PRE => src_arst,
      Q => arststages_ff(0)
    );
\arststages_ff_reg[1]\: unisim.vcomponents.FDPE
    generic map(
      INIT => '0'
    )
        port map (
      C => dest_clk,
      CE => '1',
      D => arststages_ff(0),
      PRE => src_arst,
      Q => arststages_ff(1)
    );
\arststages_ff_reg[2]\: unisim.vcomponents.FDPE
    generic map(
      INIT => '0'
    )
        port map (
      C => dest_clk,
      CE => '1',
      D => arststages_ff(1),
      PRE => src_arst,
      Q => arststages_ff(2)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized2\ is
  port (
    src_arst : in STD_LOGIC;
    dest_clk : in STD_LOGIC;
    dest_arst : out STD_LOGIC
  );
  attribute DEF_VAL : string;
  attribute DEF_VAL of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized2\ : entity is "1'b1";
  attribute DEST_SYNC_FF : integer;
  attribute DEST_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized2\ : entity is 3;
  attribute INIT_SYNC_FF : integer;
  attribute INIT_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized2\ : entity is 0;
  attribute INV_DEF_VAL : string;
  attribute INV_DEF_VAL of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized2\ : entity is "1'b0";
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized2\ : entity is "xpm_cdc_async_rst";
  attribute RST_ACTIVE_HIGH : integer;
  attribute RST_ACTIVE_HIGH of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized2\ : entity is 0;
  attribute VERSION : integer;
  attribute VERSION of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized2\ : entity is 0;
  attribute XPM_MODULE : string;
  attribute XPM_MODULE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized2\ : entity is "TRUE";
  attribute keep_hierarchy : string;
  attribute keep_hierarchy of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized2\ : entity is "true";
  attribute xpm_cdc : string;
  attribute xpm_cdc of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized2\ : entity is "ASYNC_RST";
end \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized2\;

architecture STRUCTURE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized2\ is
  signal arststages_ff : STD_LOGIC_VECTOR ( 2 downto 0 );
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of arststages_ff : signal is "true";
  attribute async_reg : string;
  attribute async_reg of arststages_ff : signal is "true";
  attribute xpm_cdc of arststages_ff : signal is "ASYNC_RST";
  signal reset_pol : STD_LOGIC;
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \arststages_ff_reg[0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \arststages_ff_reg[0]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[0]\ : label is "ASYNC_RST";
  attribute ASYNC_REG_boolean of \arststages_ff_reg[1]\ : label is std.standard.true;
  attribute KEEP of \arststages_ff_reg[1]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[1]\ : label is "ASYNC_RST";
  attribute ASYNC_REG_boolean of \arststages_ff_reg[2]\ : label is std.standard.true;
  attribute KEEP of \arststages_ff_reg[2]\ : label is "true";
  attribute XPM_CDC of \arststages_ff_reg[2]\ : label is "ASYNC_RST";
begin
  dest_arst <= arststages_ff(2);
\arststages_ff[2]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => src_arst,
      O => reset_pol
    );
\arststages_ff_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '1'
    )
        port map (
      C => dest_clk,
      CE => '1',
      CLR => reset_pol,
      D => '1',
      Q => arststages_ff(0)
    );
\arststages_ff_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '1'
    )
        port map (
      C => dest_clk,
      CE => '1',
      CLR => reset_pol,
      D => arststages_ff(0),
      Q => arststages_ff(1)
    );
\arststages_ff_reg[2]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '1'
    )
        port map (
      C => dest_clk,
      CE => '1',
      CLR => reset_pol,
      D => arststages_ff(1),
      Q => arststages_ff(2)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single is
  port (
    src_clk : in STD_LOGIC;
    src_in : in STD_LOGIC;
    dest_clk : in STD_LOGIC;
    dest_out : out STD_LOGIC
  );
  attribute DEST_SYNC_FF : integer;
  attribute DEST_SYNC_FF of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single : entity is 4;
  attribute INIT_SYNC_FF : integer;
  attribute INIT_SYNC_FF of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single : entity is 0;
  attribute SIM_ASSERT_CHK : integer;
  attribute SIM_ASSERT_CHK of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single : entity is 0;
  attribute SRC_INPUT_REG : integer;
  attribute SRC_INPUT_REG of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single : entity is 0;
  attribute VERSION : integer;
  attribute VERSION of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single : entity is 0;
  attribute XPM_MODULE : string;
  attribute XPM_MODULE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single : entity is "TRUE";
  attribute keep_hierarchy : string;
  attribute keep_hierarchy of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single : entity is "true";
  attribute xpm_cdc : string;
  attribute xpm_cdc of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single : entity is "SINGLE";
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single is
  signal syncstages_ff : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of syncstages_ff : signal is "true";
  attribute async_reg : string;
  attribute async_reg of syncstages_ff : signal is "true";
  attribute xpm_cdc of syncstages_ff : signal is "SINGLE";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \syncstages_ff_reg[0]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0]\ : label is "SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1]\ : label is "SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2]\ : label is "SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[3]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[3]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[3]\ : label is "SINGLE";
begin
  dest_out <= syncstages_ff(3);
\syncstages_ff_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => src_in,
      Q => syncstages_ff(0),
      R => '0'
    );
\syncstages_ff_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => syncstages_ff(0),
      Q => syncstages_ff(1),
      R => '0'
    );
\syncstages_ff_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => syncstages_ff(1),
      Q => syncstages_ff(2),
      R => '0'
    );
\syncstages_ff_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => syncstages_ff(2),
      Q => syncstages_ff(3),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__10\ is
  port (
    src_clk : in STD_LOGIC;
    src_in : in STD_LOGIC;
    dest_clk : in STD_LOGIC;
    dest_out : out STD_LOGIC
  );
  attribute DEST_SYNC_FF : integer;
  attribute DEST_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__10\ : entity is 4;
  attribute INIT_SYNC_FF : integer;
  attribute INIT_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__10\ : entity is 0;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__10\ : entity is "xpm_cdc_single";
  attribute SIM_ASSERT_CHK : integer;
  attribute SIM_ASSERT_CHK of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__10\ : entity is 0;
  attribute SRC_INPUT_REG : integer;
  attribute SRC_INPUT_REG of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__10\ : entity is 0;
  attribute VERSION : integer;
  attribute VERSION of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__10\ : entity is 0;
  attribute XPM_MODULE : string;
  attribute XPM_MODULE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__10\ : entity is "TRUE";
  attribute keep_hierarchy : string;
  attribute keep_hierarchy of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__10\ : entity is "true";
  attribute xpm_cdc : string;
  attribute xpm_cdc of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__10\ : entity is "SINGLE";
end \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__10\;

architecture STRUCTURE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__10\ is
  signal syncstages_ff : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of syncstages_ff : signal is "true";
  attribute async_reg : string;
  attribute async_reg of syncstages_ff : signal is "true";
  attribute xpm_cdc of syncstages_ff : signal is "SINGLE";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \syncstages_ff_reg[0]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0]\ : label is "SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1]\ : label is "SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2]\ : label is "SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[3]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[3]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[3]\ : label is "SINGLE";
begin
  dest_out <= syncstages_ff(3);
\syncstages_ff_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => src_in,
      Q => syncstages_ff(0),
      R => '0'
    );
\syncstages_ff_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => syncstages_ff(0),
      Q => syncstages_ff(1),
      R => '0'
    );
\syncstages_ff_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => syncstages_ff(1),
      Q => syncstages_ff(2),
      R => '0'
    );
\syncstages_ff_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => syncstages_ff(2),
      Q => syncstages_ff(3),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__11\ is
  port (
    src_clk : in STD_LOGIC;
    src_in : in STD_LOGIC;
    dest_clk : in STD_LOGIC;
    dest_out : out STD_LOGIC
  );
  attribute DEST_SYNC_FF : integer;
  attribute DEST_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__11\ : entity is 4;
  attribute INIT_SYNC_FF : integer;
  attribute INIT_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__11\ : entity is 0;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__11\ : entity is "xpm_cdc_single";
  attribute SIM_ASSERT_CHK : integer;
  attribute SIM_ASSERT_CHK of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__11\ : entity is 0;
  attribute SRC_INPUT_REG : integer;
  attribute SRC_INPUT_REG of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__11\ : entity is 0;
  attribute VERSION : integer;
  attribute VERSION of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__11\ : entity is 0;
  attribute XPM_MODULE : string;
  attribute XPM_MODULE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__11\ : entity is "TRUE";
  attribute keep_hierarchy : string;
  attribute keep_hierarchy of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__11\ : entity is "true";
  attribute xpm_cdc : string;
  attribute xpm_cdc of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__11\ : entity is "SINGLE";
end \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__11\;

architecture STRUCTURE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__11\ is
  signal syncstages_ff : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of syncstages_ff : signal is "true";
  attribute async_reg : string;
  attribute async_reg of syncstages_ff : signal is "true";
  attribute xpm_cdc of syncstages_ff : signal is "SINGLE";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \syncstages_ff_reg[0]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0]\ : label is "SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1]\ : label is "SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2]\ : label is "SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[3]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[3]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[3]\ : label is "SINGLE";
begin
  dest_out <= syncstages_ff(3);
\syncstages_ff_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => src_in,
      Q => syncstages_ff(0),
      R => '0'
    );
\syncstages_ff_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => syncstages_ff(0),
      Q => syncstages_ff(1),
      R => '0'
    );
\syncstages_ff_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => syncstages_ff(1),
      Q => syncstages_ff(2),
      R => '0'
    );
\syncstages_ff_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => syncstages_ff(2),
      Q => syncstages_ff(3),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__12\ is
  port (
    src_clk : in STD_LOGIC;
    src_in : in STD_LOGIC;
    dest_clk : in STD_LOGIC;
    dest_out : out STD_LOGIC
  );
  attribute DEST_SYNC_FF : integer;
  attribute DEST_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__12\ : entity is 4;
  attribute INIT_SYNC_FF : integer;
  attribute INIT_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__12\ : entity is 0;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__12\ : entity is "xpm_cdc_single";
  attribute SIM_ASSERT_CHK : integer;
  attribute SIM_ASSERT_CHK of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__12\ : entity is 0;
  attribute SRC_INPUT_REG : integer;
  attribute SRC_INPUT_REG of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__12\ : entity is 0;
  attribute VERSION : integer;
  attribute VERSION of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__12\ : entity is 0;
  attribute XPM_MODULE : string;
  attribute XPM_MODULE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__12\ : entity is "TRUE";
  attribute keep_hierarchy : string;
  attribute keep_hierarchy of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__12\ : entity is "true";
  attribute xpm_cdc : string;
  attribute xpm_cdc of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__12\ : entity is "SINGLE";
end \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__12\;

architecture STRUCTURE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__12\ is
  signal syncstages_ff : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of syncstages_ff : signal is "true";
  attribute async_reg : string;
  attribute async_reg of syncstages_ff : signal is "true";
  attribute xpm_cdc of syncstages_ff : signal is "SINGLE";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \syncstages_ff_reg[0]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0]\ : label is "SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1]\ : label is "SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2]\ : label is "SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[3]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[3]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[3]\ : label is "SINGLE";
begin
  dest_out <= syncstages_ff(3);
\syncstages_ff_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => src_in,
      Q => syncstages_ff(0),
      R => '0'
    );
\syncstages_ff_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => syncstages_ff(0),
      Q => syncstages_ff(1),
      R => '0'
    );
\syncstages_ff_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => syncstages_ff(1),
      Q => syncstages_ff(2),
      R => '0'
    );
\syncstages_ff_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => syncstages_ff(2),
      Q => syncstages_ff(3),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__7\ is
  port (
    src_clk : in STD_LOGIC;
    src_in : in STD_LOGIC;
    dest_clk : in STD_LOGIC;
    dest_out : out STD_LOGIC
  );
  attribute DEST_SYNC_FF : integer;
  attribute DEST_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__7\ : entity is 4;
  attribute INIT_SYNC_FF : integer;
  attribute INIT_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__7\ : entity is 0;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__7\ : entity is "xpm_cdc_single";
  attribute SIM_ASSERT_CHK : integer;
  attribute SIM_ASSERT_CHK of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__7\ : entity is 0;
  attribute SRC_INPUT_REG : integer;
  attribute SRC_INPUT_REG of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__7\ : entity is 0;
  attribute VERSION : integer;
  attribute VERSION of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__7\ : entity is 0;
  attribute XPM_MODULE : string;
  attribute XPM_MODULE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__7\ : entity is "TRUE";
  attribute keep_hierarchy : string;
  attribute keep_hierarchy of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__7\ : entity is "true";
  attribute xpm_cdc : string;
  attribute xpm_cdc of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__7\ : entity is "SINGLE";
end \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__7\;

architecture STRUCTURE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__7\ is
  signal syncstages_ff : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of syncstages_ff : signal is "true";
  attribute async_reg : string;
  attribute async_reg of syncstages_ff : signal is "true";
  attribute xpm_cdc of syncstages_ff : signal is "SINGLE";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \syncstages_ff_reg[0]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0]\ : label is "SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1]\ : label is "SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2]\ : label is "SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[3]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[3]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[3]\ : label is "SINGLE";
begin
  dest_out <= syncstages_ff(3);
\syncstages_ff_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => src_in,
      Q => syncstages_ff(0),
      R => '0'
    );
\syncstages_ff_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => syncstages_ff(0),
      Q => syncstages_ff(1),
      R => '0'
    );
\syncstages_ff_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => syncstages_ff(1),
      Q => syncstages_ff(2),
      R => '0'
    );
\syncstages_ff_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => syncstages_ff(2),
      Q => syncstages_ff(3),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__8\ is
  port (
    src_clk : in STD_LOGIC;
    src_in : in STD_LOGIC;
    dest_clk : in STD_LOGIC;
    dest_out : out STD_LOGIC
  );
  attribute DEST_SYNC_FF : integer;
  attribute DEST_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__8\ : entity is 4;
  attribute INIT_SYNC_FF : integer;
  attribute INIT_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__8\ : entity is 0;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__8\ : entity is "xpm_cdc_single";
  attribute SIM_ASSERT_CHK : integer;
  attribute SIM_ASSERT_CHK of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__8\ : entity is 0;
  attribute SRC_INPUT_REG : integer;
  attribute SRC_INPUT_REG of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__8\ : entity is 0;
  attribute VERSION : integer;
  attribute VERSION of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__8\ : entity is 0;
  attribute XPM_MODULE : string;
  attribute XPM_MODULE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__8\ : entity is "TRUE";
  attribute keep_hierarchy : string;
  attribute keep_hierarchy of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__8\ : entity is "true";
  attribute xpm_cdc : string;
  attribute xpm_cdc of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__8\ : entity is "SINGLE";
end \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__8\;

architecture STRUCTURE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__8\ is
  signal syncstages_ff : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of syncstages_ff : signal is "true";
  attribute async_reg : string;
  attribute async_reg of syncstages_ff : signal is "true";
  attribute xpm_cdc of syncstages_ff : signal is "SINGLE";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \syncstages_ff_reg[0]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0]\ : label is "SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1]\ : label is "SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2]\ : label is "SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[3]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[3]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[3]\ : label is "SINGLE";
begin
  dest_out <= syncstages_ff(3);
\syncstages_ff_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => src_in,
      Q => syncstages_ff(0),
      R => '0'
    );
\syncstages_ff_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => syncstages_ff(0),
      Q => syncstages_ff(1),
      R => '0'
    );
\syncstages_ff_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => syncstages_ff(1),
      Q => syncstages_ff(2),
      R => '0'
    );
\syncstages_ff_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => syncstages_ff(2),
      Q => syncstages_ff(3),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__9\ is
  port (
    src_clk : in STD_LOGIC;
    src_in : in STD_LOGIC;
    dest_clk : in STD_LOGIC;
    dest_out : out STD_LOGIC
  );
  attribute DEST_SYNC_FF : integer;
  attribute DEST_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__9\ : entity is 4;
  attribute INIT_SYNC_FF : integer;
  attribute INIT_SYNC_FF of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__9\ : entity is 0;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__9\ : entity is "xpm_cdc_single";
  attribute SIM_ASSERT_CHK : integer;
  attribute SIM_ASSERT_CHK of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__9\ : entity is 0;
  attribute SRC_INPUT_REG : integer;
  attribute SRC_INPUT_REG of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__9\ : entity is 0;
  attribute VERSION : integer;
  attribute VERSION of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__9\ : entity is 0;
  attribute XPM_MODULE : string;
  attribute XPM_MODULE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__9\ : entity is "TRUE";
  attribute keep_hierarchy : string;
  attribute keep_hierarchy of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__9\ : entity is "true";
  attribute xpm_cdc : string;
  attribute xpm_cdc of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__9\ : entity is "SINGLE";
end \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__9\;

architecture STRUCTURE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__9\ is
  signal syncstages_ff : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of syncstages_ff : signal is "true";
  attribute async_reg : string;
  attribute async_reg of syncstages_ff : signal is "true";
  attribute xpm_cdc of syncstages_ff : signal is "SINGLE";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \syncstages_ff_reg[0]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[0]\ : label is "SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[1]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[1]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[1]\ : label is "SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[2]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[2]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[2]\ : label is "SINGLE";
  attribute ASYNC_REG_boolean of \syncstages_ff_reg[3]\ : label is std.standard.true;
  attribute KEEP of \syncstages_ff_reg[3]\ : label is "true";
  attribute XPM_CDC of \syncstages_ff_reg[3]\ : label is "SINGLE";
begin
  dest_out <= syncstages_ff(3);
\syncstages_ff_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => src_in,
      Q => syncstages_ff(0),
      R => '0'
    );
\syncstages_ff_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => syncstages_ff(0),
      Q => syncstages_ff(1),
      R => '0'
    );
\syncstages_ff_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => syncstages_ff(1),
      Q => syncstages_ff(2),
      R => '0'
    );
\syncstages_ff_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => dest_clk,
      CE => '1',
      D => syncstages_ff(2),
      Q => syncstages_ff(3),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_shell_utils_ucc_v1_0_0_clock_throttling is
  port (
    ICCLK_0 : out STD_LOGIC;
    aclk_kernel_cont_01 : out STD_LOGIC;
    aclk_kernel_01 : out STD_LOGIC;
    rst_async_kernel_01 : out STD_LOGIC;
    ext_tog_ctrl_kernel_01_out : out STD_LOGIC;
    power_down_out_d1 : out STD_LOGIC;
    \syncstages_ff_reg[0]\ : in STD_LOGIC;
    p_6_in : in STD_LOGIC_VECTOR ( 8 downto 0 );
    src_in : in STD_LOGIC;
    aresetn_ctrl : in STD_LOGIC;
    \arststages_ff_reg[0]\ : in STD_LOGIC;
    \arststages_ff_reg[0]_0\ : in STD_LOGIC;
    shutdown_latch : in STD_LOGIC;
    clk_in_kernel_01 : in STD_LOGIC;
    ext_tog_ctrl_kernel_01_in : in STD_LOGIC;
    ext_tog_ctrl_kernel_01_enable : in STD_LOGIC
  );
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_shell_utils_ucc_v1_0_0_clock_throttling;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_shell_utils_ucc_v1_0_0_clock_throttling is
  signal Ext_Tog_En_SW_cdc : STD_LOGIC;
  signal Ext_Tog_En_SW_ret : STD_LOGIC;
  signal \Ext_Tog_Out_int_i_1__0_n_0\ : STD_LOGIC;
  signal Gate_Div : STD_LOGIC;
  attribute DONT_TOUCH : boolean;
  attribute DONT_TOUCH of Gate_Div : signal is std.standard.true;
  signal Gate_Div_d1 : STD_LOGIC;
  attribute DONT_TOUCH of Gate_Div_d1 : signal is std.standard.true;
  signal \Gate_Div_i_1__0_n_0\ : STD_LOGIC;
  signal Gate_Fast : STD_LOGIC;
  attribute DONT_TOUCH of Gate_Fast : signal is std.standard.true;
  signal Gate_Fast_d1 : STD_LOGIC;
  attribute DONT_TOUCH of Gate_Fast_d1 : signal is std.standard.true;
  signal \Gate_Fast_i_1__0_n_0\ : STD_LOGIC;
  signal \^icclk_0\ : STD_LOGIC;
  signal Last_Ext_Tog_In : STD_LOGIC;
  signal Last_Rate_Upd_Tog_CDC : STD_LOGIC;
  signal Locked_cdc : STD_LOGIC;
  signal Locked_ret : STD_LOGIC;
  signal \Mbufg_Clrb_SR_reg_n_0_[1]\ : STD_LOGIC;
  signal \Mbufg_Clrb_SR_reg_n_0_[2]\ : STD_LOGIC;
  signal \Mbufg_Clrb_SR_reg_n_0_[3]\ : STD_LOGIC;
  signal \Mbufg_Clrb_SR_reg_n_0_[4]\ : STD_LOGIC;
  signal \Mbufg_Clrb_SR_reg_n_0_[5]\ : STD_LOGIC;
  signal \Mbufg_Clrb_SR_reg_n_0_[6]\ : STD_LOGIC;
  signal \Mbufg_Clrb_SR_reg_n_0_[7]\ : STD_LOGIC;
  signal \Mbufg_Clrb_SR_reg_n_0_[8]\ : STD_LOGIC;
  signal Rate_In_CDC : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal Rate_Lim0 : STD_LOGIC;
  signal \Rate_Lim_reg_n_0_[0]\ : STD_LOGIC;
  signal \Rate_Lim_reg_n_0_[1]\ : STD_LOGIC;
  signal \Rate_Lim_reg_n_0_[2]\ : STD_LOGIC;
  signal \Rate_Lim_reg_n_0_[3]\ : STD_LOGIC;
  signal \Rate_Lim_reg_n_0_[4]\ : STD_LOGIC;
  signal \Rate_Lim_reg_n_0_[5]\ : STD_LOGIC;
  signal \Rate_Lim_reg_n_0_[6]\ : STD_LOGIC;
  signal \Rate_Lim_reg_n_0_[7]\ : STD_LOGIC;
  signal Rate_Upd0 : STD_LOGIC;
  signal Rate_Upd_reg_n_0 : STD_LOGIC;
  signal \Rate_int[7]_i_1__0_n_0\ : STD_LOGIC;
  signal \Rate_int_reg_n_0_[0]\ : STD_LOGIC;
  signal \Rate_int_reg_n_0_[1]\ : STD_LOGIC;
  signal \Rate_int_reg_n_0_[2]\ : STD_LOGIC;
  signal \Rate_int_reg_n_0_[3]\ : STD_LOGIC;
  signal \Rate_int_reg_n_0_[4]\ : STD_LOGIC;
  signal \Rate_int_reg_n_0_[5]\ : STD_LOGIC;
  signal \Rate_int_reg_n_0_[6]\ : STD_LOGIC;
  signal \Rate_int_reg_n_0_[7]\ : STD_LOGIC;
  signal Rst_In_ret : STD_LOGIC;
  signal \Rst_Int0__0\ : STD_LOGIC;
  signal Shutdown_Latch_CDC : STD_LOGIC;
  signal Startup_Done_cdc : STD_LOGIC;
  signal Startup_Done_ret : STD_LOGIC;
  signal \Synth_reg[0]_i_1_n_0\ : STD_LOGIC;
  signal \Synth_reg[0]_i_1_n_1\ : STD_LOGIC;
  signal \Synth_reg[0]_i_1_n_2\ : STD_LOGIC;
  signal \Synth_reg[0]_i_1_n_3\ : STD_LOGIC;
  signal \Synth_reg[1]_i_1_n_0\ : STD_LOGIC;
  signal \Synth_reg[1]_i_1_n_1\ : STD_LOGIC;
  signal \Synth_reg[1]_i_1_n_2\ : STD_LOGIC;
  signal \Synth_reg[1]_i_1_n_3\ : STD_LOGIC;
  signal \Synth_reg[2]_i_1_n_0\ : STD_LOGIC;
  signal \Synth_reg[2]_i_1_n_1\ : STD_LOGIC;
  signal \Synth_reg[2]_i_1_n_2\ : STD_LOGIC;
  signal \Synth_reg[2]_i_1_n_3\ : STD_LOGIC;
  signal \Synth_reg[3]_i_1_n_0\ : STD_LOGIC;
  signal \Synth_reg[3]_i_1_n_1\ : STD_LOGIC;
  signal \Synth_reg[3]_i_1_n_2\ : STD_LOGIC;
  signal \Synth_reg[3]_i_1_n_3\ : STD_LOGIC;
  signal \Synth_reg[4]_i_1_n_0\ : STD_LOGIC;
  signal \Synth_reg[4]_i_1_n_1\ : STD_LOGIC;
  signal \Synth_reg[4]_i_1_n_2\ : STD_LOGIC;
  signal \Synth_reg[4]_i_1_n_3\ : STD_LOGIC;
  signal \Synth_reg[5]_i_1_n_0\ : STD_LOGIC;
  signal \Synth_reg[5]_i_1_n_1\ : STD_LOGIC;
  signal \Synth_reg[5]_i_1_n_2\ : STD_LOGIC;
  signal \Synth_reg[5]_i_1_n_3\ : STD_LOGIC;
  signal \Synth_reg[6]_i_1_n_0\ : STD_LOGIC;
  signal \Synth_reg[6]_i_1_n_1\ : STD_LOGIC;
  signal \Synth_reg[6]_i_1_n_2\ : STD_LOGIC;
  signal \Synth_reg[6]_i_1_n_3\ : STD_LOGIC;
  signal \Synth_reg[6]_i_2__0_n_0\ : STD_LOGIC;
  signal \Synth_reg[6]_i_2__0_n_1\ : STD_LOGIC;
  signal \Synth_reg[6]_i_2__0_n_2\ : STD_LOGIC;
  signal \Synth_reg[6]_i_2__0_n_3\ : STD_LOGIC;
  signal \Synth_reg[7]_i_1_n_0\ : STD_LOGIC;
  signal \Synth_reg[7]_i_1_n_1\ : STD_LOGIC;
  signal \Synth_reg[7]_i_1_n_2\ : STD_LOGIC;
  signal \Synth_reg[7]_i_1_n_3\ : STD_LOGIC;
  signal \Synth_reg_n_0_[0]\ : STD_LOGIC;
  signal \Synth_reg_n_0_[1]\ : STD_LOGIC;
  signal \Synth_reg_n_0_[2]\ : STD_LOGIC;
  signal \Synth_reg_n_0_[3]\ : STD_LOGIC;
  signal \Synth_reg_n_0_[4]\ : STD_LOGIC;
  signal \Synth_reg_n_0_[5]\ : STD_LOGIC;
  signal \Synth_reg_n_0_[6]\ : STD_LOGIC;
  signal dest_arst : STD_LOGIC;
  signal dest_out : STD_LOGIC;
  signal \^ext_tog_ctrl_kernel_01_out\ : STD_LOGIC;
  signal p_0_in : STD_LOGIC;
  signal power_down_in_cdc : STD_LOGIC;
  signal power_down_in_ret_reg_n_0 : STD_LOGIC;
  signal \^power_down_out_d1\ : STD_LOGIC;
  signal \power_down_out_d1_i_1__0_n_0\ : STD_LOGIC;
  signal \^rst_async_kernel_01\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of ECCLK : label is "PRIMITIVE";
  attribute DEST_SYNC_FF : integer;
  attribute DEST_SYNC_FF of \ETG.ETSE_CDC\ : label is 4;
  attribute INIT_SYNC_FF : integer;
  attribute INIT_SYNC_FF of \ETG.ETSE_CDC\ : label is 0;
  attribute SIM_ASSERT_CHK : integer;
  attribute SIM_ASSERT_CHK of \ETG.ETSE_CDC\ : label is 0;
  attribute SRC_INPUT_REG : integer;
  attribute SRC_INPUT_REG of \ETG.ETSE_CDC\ : label is 0;
  attribute VERSION : integer;
  attribute VERSION of \ETG.ETSE_CDC\ : label is 0;
  attribute XPM_CDC : string;
  attribute XPM_CDC of \ETG.ETSE_CDC\ : label is "SINGLE";
  attribute XPM_MODULE : string;
  attribute XPM_MODULE of \ETG.ETSE_CDC\ : label is "TRUE";
  attribute DONT_TOUCH of Gate_Div_reg : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of Gate_Div_reg : label is "yes";
  attribute equivalent_register_removal : string;
  attribute equivalent_register_removal of Gate_Div_reg : label is "no";
  attribute DONT_TOUCH of Gate_Fast_reg : label is std.standard.true;
  attribute KEEP of Gate_Fast_reg : label is "yes";
  attribute equivalent_register_removal of Gate_Fast_reg : label is "no";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of ICCLK : label is "BUFG";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of ICCLK : label is "VCC:CE";
  attribute box_type of ICCLK : label is "PRIMITIVE";
  attribute DEST_SYNC_FF of LA_CDC : label is 4;
  attribute INIT_SYNC_FF of LA_CDC : label is 0;
  attribute SIM_ASSERT_CHK of LA_CDC : label is 0;
  attribute SRC_INPUT_REG of LA_CDC : label is 0;
  attribute VERSION of LA_CDC : label is 0;
  attribute XPM_CDC of LA_CDC : label is "SINGLE";
  attribute XPM_MODULE of LA_CDC : label is "TRUE";
  attribute DEF_VAL : string;
  attribute DEF_VAL of LCK_CDC : label is "1'b1";
  attribute DEST_SYNC_FF of LCK_CDC : label is 4;
  attribute INIT_SYNC_FF of LCK_CDC : label is 1;
  attribute INV_DEF_VAL : string;
  attribute INV_DEF_VAL of LCK_CDC : label is "1'b0";
  attribute RST_ACTIVE_HIGH : integer;
  attribute RST_ACTIVE_HIGH of LCK_CDC : label is 0;
  attribute VERSION of LCK_CDC : label is 0;
  attribute XPM_CDC of LCK_CDC : label is "ASYNC_RST";
  attribute XPM_MODULE of LCK_CDC : label is "TRUE";
  attribute DEF_VAL of PD_CDC : label is "1'b1";
  attribute DEST_SYNC_FF of PD_CDC : label is 4;
  attribute INIT_SYNC_FF of PD_CDC : label is 1;
  attribute INV_DEF_VAL of PD_CDC : label is "1'b0";
  attribute RST_ACTIVE_HIGH of PD_CDC : label is 0;
  attribute VERSION of PD_CDC : label is 0;
  attribute XPM_CDC of PD_CDC : label is "ASYNC_RST";
  attribute XPM_MODULE of PD_CDC : label is "TRUE";
  attribute DEST_SYNC_FF of RATE_CDC : label is 2;
  attribute INIT_SYNC_FF of RATE_CDC : label is 0;
  attribute SIM_ASSERT_CHK of RATE_CDC : label is 0;
  attribute SRC_INPUT_REG of RATE_CDC : label is 0;
  attribute VERSION of RATE_CDC : label is 0;
  attribute WIDTH : integer;
  attribute WIDTH of RATE_CDC : label is 8;
  attribute XPM_CDC of RATE_CDC : label is "ARRAY_SINGLE";
  attribute XPM_MODULE of RATE_CDC : label is "TRUE";
  attribute DEF_VAL of RST_CDC : label is "1'b1";
  attribute DEST_SYNC_FF of RST_CDC : label is 4;
  attribute INIT_SYNC_FF of RST_CDC : label is 1;
  attribute INV_DEF_VAL of RST_CDC : label is "1'b0";
  attribute RST_ACTIVE_HIGH of RST_CDC : label is 0;
  attribute VERSION of RST_CDC : label is 0;
  attribute XPM_CDC of RST_CDC : label is "ASYNC_RST";
  attribute XPM_MODULE of RST_CDC : label is "TRUE";
  attribute DEF_VAL of SRT_CDC : label is "1'b1";
  attribute DEST_SYNC_FF of SRT_CDC : label is 4;
  attribute INIT_SYNC_FF of SRT_CDC : label is 1;
  attribute INV_DEF_VAL of SRT_CDC : label is "1'b0";
  attribute RST_ACTIVE_HIGH of SRT_CDC : label is 0;
  attribute VERSION of SRT_CDC : label is 0;
  attribute XPM_CDC of SRT_CDC : label is "ASYNC_RST";
  attribute XPM_MODULE of SRT_CDC : label is "TRUE";
  attribute DEST_SYNC_FF of UP_CDC : label is 4;
  attribute INIT_SYNC_FF of UP_CDC : label is 0;
  attribute SIM_ASSERT_CHK of UP_CDC : label is 0;
  attribute SRC_INPUT_REG of UP_CDC : label is 0;
  attribute VERSION of UP_CDC : label is 0;
  attribute XPM_CDC of UP_CDC : label is "SINGLE";
  attribute XPM_MODULE of UP_CDC : label is "TRUE";
  attribute box_type of \VGC.FCLK\ : label is "PRIMITIVE";
begin
  ICCLK_0 <= \^icclk_0\;
  ext_tog_ctrl_kernel_01_out <= \^ext_tog_ctrl_kernel_01_out\;
  power_down_out_d1 <= \^power_down_out_d1\;
  rst_async_kernel_01 <= \^rst_async_kernel_01\;
ECCLK: unisim.vcomponents.BUFGCE
    generic map(
      CE_TYPE => "HARDSYNC",
      IS_CE_INVERTED => '0',
      IS_I_INVERTED => '0',
      SIM_DEVICE => "VERSAL_AI_CORE",
      STARTUP_SYNC => "FALSE"
    )
        port map (
      CE => Startup_Done_cdc,
      I => clk_in_kernel_01,
      O => aclk_kernel_cont_01
    );
\ETG.ETSE_CDC\: entity work.\decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__12\
     port map (
      dest_clk => \^icclk_0\,
      dest_out => Ext_Tog_En_SW_cdc,
      src_clk => '0',
      src_in => p_6_in(8)
    );
Ext_Tog_En_SW_ret_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => Ext_Tog_En_SW_cdc,
      Q => Ext_Tog_En_SW_ret,
      R => '0'
    );
\Ext_Tog_Out_int_i_1__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0880"
    )
        port map (
      I0 => Ext_Tog_En_SW_ret,
      I1 => ext_tog_ctrl_kernel_01_enable,
      I2 => p_0_in,
      I3 => \^ext_tog_ctrl_kernel_01_out\,
      O => \Ext_Tog_Out_int_i_1__0_n_0\
    );
Ext_Tog_Out_int_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => \Ext_Tog_Out_int_i_1__0_n_0\,
      Q => \^ext_tog_ctrl_kernel_01_out\,
      R => '0'
    );
\Gate_Div_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"6FFF600000000000"
    )
        port map (
      I0 => ext_tog_ctrl_kernel_01_in,
      I1 => Last_Ext_Tog_In,
      I2 => ext_tog_ctrl_kernel_01_enable,
      I3 => Ext_Tog_En_SW_ret,
      I4 => p_0_in,
      I5 => \Mbufg_Clrb_SR_reg_n_0_[8]\,
      O => \Gate_Div_i_1__0_n_0\
    );
Gate_Div_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => \Gate_Div_i_1__0_n_0\,
      Q => Gate_Div,
      R => \Rate_int[7]_i_1__0_n_0\
    );
\Gate_Fast_i_1__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"6FFF6000"
    )
        port map (
      I0 => Last_Ext_Tog_In,
      I1 => ext_tog_ctrl_kernel_01_in,
      I2 => ext_tog_ctrl_kernel_01_enable,
      I3 => Ext_Tog_En_SW_ret,
      I4 => p_0_in,
      O => \Gate_Fast_i_1__0_n_0\
    );
Gate_Fast_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => \Gate_Fast_i_1__0_n_0\,
      Q => Gate_Fast,
      R => \Rate_int[7]_i_1__0_n_0\
    );
ICCLK: unisim.vcomponents.BUFGCE
    generic map(
      CE_TYPE => "ASYNC",
      SIM_DEVICE => "VERSAL_AI_CORE"
    )
        port map (
      CE => '1',
      I => clk_in_kernel_01,
      O => \^icclk_0\
    );
LA_CDC: entity work.\decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__11\
     port map (
      dest_clk => \^icclk_0\,
      dest_out => Shutdown_Latch_CDC,
      src_clk => '0',
      src_in => src_in
    );
LCK_CDC: entity work.\decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__7\
     port map (
      dest_arst => Locked_cdc,
      dest_clk => \^icclk_0\,
      src_arst => \arststages_ff_reg[0]\
    );
Last_Ext_Tog_In_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => ext_tog_ctrl_kernel_01_in,
      Q => Last_Ext_Tog_In,
      R => '0'
    );
Last_Rate_Upd_Tog_CDC_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => dest_out,
      Q => Last_Rate_Upd_Tog_CDC,
      R => '0'
    );
Locked_ret_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => Locked_cdc,
      Q => Locked_ret,
      R => '0'
    );
\Mbufg_Clrb_SR_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => '1',
      Q => \Mbufg_Clrb_SR_reg_n_0_[1]\,
      R => \Rate_int[7]_i_1__0_n_0\
    );
\Mbufg_Clrb_SR_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => \Mbufg_Clrb_SR_reg_n_0_[1]\,
      Q => \Mbufg_Clrb_SR_reg_n_0_[2]\,
      R => \Rate_int[7]_i_1__0_n_0\
    );
\Mbufg_Clrb_SR_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => \Mbufg_Clrb_SR_reg_n_0_[2]\,
      Q => \Mbufg_Clrb_SR_reg_n_0_[3]\,
      R => \Rate_int[7]_i_1__0_n_0\
    );
\Mbufg_Clrb_SR_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => \Mbufg_Clrb_SR_reg_n_0_[3]\,
      Q => \Mbufg_Clrb_SR_reg_n_0_[4]\,
      R => \Rate_int[7]_i_1__0_n_0\
    );
\Mbufg_Clrb_SR_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => \Mbufg_Clrb_SR_reg_n_0_[4]\,
      Q => \Mbufg_Clrb_SR_reg_n_0_[5]\,
      R => \Rate_int[7]_i_1__0_n_0\
    );
\Mbufg_Clrb_SR_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => \Mbufg_Clrb_SR_reg_n_0_[5]\,
      Q => \Mbufg_Clrb_SR_reg_n_0_[6]\,
      R => \Rate_int[7]_i_1__0_n_0\
    );
\Mbufg_Clrb_SR_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => \Mbufg_Clrb_SR_reg_n_0_[6]\,
      Q => \Mbufg_Clrb_SR_reg_n_0_[7]\,
      R => \Rate_int[7]_i_1__0_n_0\
    );
\Mbufg_Clrb_SR_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => \Mbufg_Clrb_SR_reg_n_0_[7]\,
      Q => \Mbufg_Clrb_SR_reg_n_0_[8]\,
      R => \Rate_int[7]_i_1__0_n_0\
    );
PD_CDC: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst
     port map (
      dest_arst => power_down_in_cdc,
      dest_clk => \^icclk_0\,
      src_arst => shutdown_latch
    );
RATE_CDC: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single
     port map (
      dest_clk => \^icclk_0\,
      dest_out(7 downto 0) => Rate_In_CDC(7 downto 0),
      src_clk => '0',
      src_in(7 downto 0) => p_6_in(7 downto 0)
    );
RST_CDC: entity work.\decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__6\
     port map (
      dest_arst => dest_arst,
      dest_clk => \^icclk_0\,
      src_arst => aresetn_ctrl
    );
\Rate_Lim[7]_i_1__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AAA8"
    )
        port map (
      I0 => Shutdown_Latch_CDC,
      I1 => \Rate_int_reg_n_0_[6]\,
      I2 => \Rate_int_reg_n_0_[7]\,
      I3 => \Rate_int_reg_n_0_[5]\,
      O => Rate_Lim0
    );
\Rate_Lim_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => \Rate_int_reg_n_0_[0]\,
      Q => \Rate_Lim_reg_n_0_[0]\,
      R => Rate_Lim0
    );
\Rate_Lim_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => \Rate_int_reg_n_0_[1]\,
      Q => \Rate_Lim_reg_n_0_[1]\,
      R => Rate_Lim0
    );
\Rate_Lim_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => \Rate_int_reg_n_0_[2]\,
      Q => \Rate_Lim_reg_n_0_[2]\,
      R => Rate_Lim0
    );
\Rate_Lim_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => \Rate_int_reg_n_0_[3]\,
      Q => \Rate_Lim_reg_n_0_[3]\,
      R => Rate_Lim0
    );
\Rate_Lim_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => \Rate_int_reg_n_0_[4]\,
      Q => \Rate_Lim_reg_n_0_[4]\,
      R => Rate_Lim0
    );
\Rate_Lim_reg[5]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => \Rate_int_reg_n_0_[5]\,
      Q => \Rate_Lim_reg_n_0_[5]\,
      S => Rate_Lim0
    );
\Rate_Lim_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => \Rate_int_reg_n_0_[6]\,
      Q => \Rate_Lim_reg_n_0_[6]\,
      R => Rate_Lim0
    );
\Rate_Lim_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => \Rate_int_reg_n_0_[7]\,
      Q => \Rate_Lim_reg_n_0_[7]\,
      R => Rate_Lim0
    );
\Rate_Upd_i_1__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => Last_Rate_Upd_Tog_CDC,
      I1 => dest_out,
      O => Rate_Upd0
    );
Rate_Upd_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => Rate_Upd0,
      Q => Rate_Upd_reg_n_0,
      R => '0'
    );
\Rate_int[7]_i_1__0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^rst_async_kernel_01\,
      O => \Rate_int[7]_i_1__0_n_0\
    );
\Rate_int_reg[0]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => \^icclk_0\,
      CE => Rate_Upd_reg_n_0,
      D => Rate_In_CDC(0),
      Q => \Rate_int_reg_n_0_[0]\,
      S => \Rate_int[7]_i_1__0_n_0\
    );
\Rate_int_reg[1]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => \^icclk_0\,
      CE => Rate_Upd_reg_n_0,
      D => Rate_In_CDC(1),
      Q => \Rate_int_reg_n_0_[1]\,
      S => \Rate_int[7]_i_1__0_n_0\
    );
\Rate_int_reg[2]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => \^icclk_0\,
      CE => Rate_Upd_reg_n_0,
      D => Rate_In_CDC(2),
      Q => \Rate_int_reg_n_0_[2]\,
      S => \Rate_int[7]_i_1__0_n_0\
    );
\Rate_int_reg[3]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => \^icclk_0\,
      CE => Rate_Upd_reg_n_0,
      D => Rate_In_CDC(3),
      Q => \Rate_int_reg_n_0_[3]\,
      S => \Rate_int[7]_i_1__0_n_0\
    );
\Rate_int_reg[4]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => \^icclk_0\,
      CE => Rate_Upd_reg_n_0,
      D => Rate_In_CDC(4),
      Q => \Rate_int_reg_n_0_[4]\,
      S => \Rate_int[7]_i_1__0_n_0\
    );
\Rate_int_reg[5]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => \^icclk_0\,
      CE => Rate_Upd_reg_n_0,
      D => Rate_In_CDC(5),
      Q => \Rate_int_reg_n_0_[5]\,
      S => \Rate_int[7]_i_1__0_n_0\
    );
\Rate_int_reg[6]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => \^icclk_0\,
      CE => Rate_Upd_reg_n_0,
      D => Rate_In_CDC(6),
      Q => \Rate_int_reg_n_0_[6]\,
      S => \Rate_int[7]_i_1__0_n_0\
    );
\Rate_int_reg[7]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => \^icclk_0\,
      CE => Rate_Upd_reg_n_0,
      D => Rate_In_CDC(7),
      Q => \Rate_int_reg_n_0_[7]\,
      S => \Rate_int[7]_i_1__0_n_0\
    );
Rst_In_ret_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => dest_arst,
      Q => Rst_In_ret,
      R => '0'
    );
Rst_Int0: unisim.vcomponents.LUT3
    generic map(
      INIT => X"80"
    )
        port map (
      I0 => Rst_In_ret,
      I1 => Locked_ret,
      I2 => Startup_Done_ret,
      O => \Rst_Int0__0\
    );
Rst_Int_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => \Rst_Int0__0\,
      Q => \^rst_async_kernel_01\,
      R => '0'
    );
SRT_CDC: entity work.\decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__8\
     port map (
      dest_arst => Startup_Done_cdc,
      dest_clk => \^icclk_0\,
      src_arst => \arststages_ff_reg[0]_0\
    );
Startup_Done_ret_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => Startup_Done_cdc,
      Q => Startup_Done_ret,
      R => '0'
    );
\Synth_reg[0]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => \Synth_reg[0]_i_1_n_1\,
      Q => \Synth_reg_n_0_[0]\,
      S => \Rate_int[7]_i_1__0_n_0\
    );
\Synth_reg[0]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"CFCC0C003C33C3CC"
    )
        port map (
      GE => \Synth_reg[0]_i_1_n_0\,
      I0 => '1',
      I1 => \Synth_reg_n_0_[0]\,
      I2 => \Rate_int_reg_n_0_[7]\,
      I3 => \Rate_Lim_reg_n_0_[0]\,
      I4 => '0',
      O51 => \Synth_reg[0]_i_1_n_1\,
      O52 => \Synth_reg[0]_i_1_n_2\,
      PROP => \Synth_reg[0]_i_1_n_3\
    );
\Synth_reg[1]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => \Synth_reg[1]_i_1_n_1\,
      Q => \Synth_reg_n_0_[1]\,
      S => \Rate_int[7]_i_1__0_n_0\
    );
\Synth_reg[1]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"CFCC0C003C33C3CC"
    )
        port map (
      GE => \Synth_reg[1]_i_1_n_0\,
      I0 => '1',
      I1 => \Synth_reg_n_0_[1]\,
      I2 => \Rate_int_reg_n_0_[7]\,
      I3 => \Rate_Lim_reg_n_0_[1]\,
      I4 => \Synth_reg[0]_i_1_n_2\,
      O51 => \Synth_reg[1]_i_1_n_1\,
      O52 => \Synth_reg[1]_i_1_n_2\,
      PROP => \Synth_reg[1]_i_1_n_3\
    );
\Synth_reg[2]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => \Synth_reg[2]_i_1_n_1\,
      Q => \Synth_reg_n_0_[2]\,
      S => \Rate_int[7]_i_1__0_n_0\
    );
\Synth_reg[2]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"CFCC0C003C33C3CC"
    )
        port map (
      GE => \Synth_reg[2]_i_1_n_0\,
      I0 => '1',
      I1 => \Synth_reg_n_0_[2]\,
      I2 => \Rate_int_reg_n_0_[7]\,
      I3 => \Rate_Lim_reg_n_0_[2]\,
      I4 => \Synth_reg[6]_i_2__0_n_0\,
      O51 => \Synth_reg[2]_i_1_n_1\,
      O52 => \Synth_reg[2]_i_1_n_2\,
      PROP => \Synth_reg[2]_i_1_n_3\
    );
\Synth_reg[3]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => \Synth_reg[3]_i_1_n_1\,
      Q => \Synth_reg_n_0_[3]\,
      S => \Rate_int[7]_i_1__0_n_0\
    );
\Synth_reg[3]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"CFCC0C003C33C3CC"
    )
        port map (
      GE => \Synth_reg[3]_i_1_n_0\,
      I0 => '1',
      I1 => \Synth_reg_n_0_[3]\,
      I2 => \Rate_int_reg_n_0_[7]\,
      I3 => \Rate_Lim_reg_n_0_[3]\,
      I4 => \Synth_reg[2]_i_1_n_2\,
      O51 => \Synth_reg[3]_i_1_n_1\,
      O52 => \Synth_reg[3]_i_1_n_2\,
      PROP => \Synth_reg[3]_i_1_n_3\
    );
\Synth_reg[4]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => \Synth_reg[4]_i_1_n_1\,
      Q => \Synth_reg_n_0_[4]\,
      S => \Rate_int[7]_i_1__0_n_0\
    );
\Synth_reg[4]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"CFCC0C003C33C3CC"
    )
        port map (
      GE => \Synth_reg[4]_i_1_n_0\,
      I0 => '1',
      I1 => \Synth_reg_n_0_[4]\,
      I2 => \Rate_int_reg_n_0_[7]\,
      I3 => \Rate_Lim_reg_n_0_[4]\,
      I4 => \Synth_reg[6]_i_2__0_n_1\,
      O51 => \Synth_reg[4]_i_1_n_1\,
      O52 => \Synth_reg[4]_i_1_n_2\,
      PROP => \Synth_reg[4]_i_1_n_3\
    );
\Synth_reg[5]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => \Synth_reg[5]_i_1_n_1\,
      Q => \Synth_reg_n_0_[5]\,
      S => \Rate_int[7]_i_1__0_n_0\
    );
\Synth_reg[5]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"CFCC0C003C33C3CC"
    )
        port map (
      GE => \Synth_reg[5]_i_1_n_0\,
      I0 => '1',
      I1 => \Synth_reg_n_0_[5]\,
      I2 => \Rate_int_reg_n_0_[7]\,
      I3 => \Rate_Lim_reg_n_0_[5]\,
      I4 => \Synth_reg[4]_i_1_n_2\,
      O51 => \Synth_reg[5]_i_1_n_1\,
      O52 => \Synth_reg[5]_i_1_n_2\,
      PROP => \Synth_reg[5]_i_1_n_3\
    );
\Synth_reg[6]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => \Synth_reg[6]_i_1_n_1\,
      Q => \Synth_reg_n_0_[6]\,
      S => \Rate_int[7]_i_1__0_n_0\
    );
\Synth_reg[6]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"CFCC0C003C33C3CC"
    )
        port map (
      GE => \Synth_reg[6]_i_1_n_0\,
      I0 => '1',
      I1 => \Synth_reg_n_0_[6]\,
      I2 => \Rate_int_reg_n_0_[7]\,
      I3 => \Rate_Lim_reg_n_0_[6]\,
      I4 => \Synth_reg[6]_i_2__0_n_2\,
      O51 => \Synth_reg[6]_i_1_n_1\,
      O52 => \Synth_reg[6]_i_1_n_2\,
      PROP => \Synth_reg[6]_i_1_n_3\
    );
\Synth_reg[6]_i_2__0\: unisim.vcomponents.LOOKAHEAD8
    generic map(
      LOOKB => "FALSE",
      LOOKD => "TRUE",
      LOOKF => "TRUE",
      LOOKH => "TRUE"
    )
        port map (
      CIN => '0',
      COUTB => \Synth_reg[6]_i_2__0_n_0\,
      COUTD => \Synth_reg[6]_i_2__0_n_1\,
      COUTF => \Synth_reg[6]_i_2__0_n_2\,
      COUTH => \Synth_reg[6]_i_2__0_n_3\,
      CYA => \Synth_reg[0]_i_1_n_2\,
      CYB => \Synth_reg[1]_i_1_n_2\,
      CYC => \Synth_reg[2]_i_1_n_2\,
      CYD => \Synth_reg[3]_i_1_n_2\,
      CYE => \Synth_reg[4]_i_1_n_2\,
      CYF => \Synth_reg[5]_i_1_n_2\,
      CYG => \Synth_reg[6]_i_1_n_2\,
      CYH => \Synth_reg[7]_i_1_n_2\,
      GEA => \Synth_reg[0]_i_1_n_0\,
      GEB => \Synth_reg[1]_i_1_n_0\,
      GEC => \Synth_reg[2]_i_1_n_0\,
      GED => \Synth_reg[3]_i_1_n_0\,
      GEE => \Synth_reg[4]_i_1_n_0\,
      GEF => \Synth_reg[5]_i_1_n_0\,
      GEG => \Synth_reg[6]_i_1_n_0\,
      GEH => \Synth_reg[7]_i_1_n_0\,
      PROPA => \Synth_reg[0]_i_1_n_3\,
      PROPB => \Synth_reg[1]_i_1_n_3\,
      PROPC => \Synth_reg[2]_i_1_n_3\,
      PROPD => \Synth_reg[3]_i_1_n_3\,
      PROPE => \Synth_reg[4]_i_1_n_3\,
      PROPF => \Synth_reg[5]_i_1_n_3\,
      PROPG => \Synth_reg[6]_i_1_n_3\,
      PROPH => \Synth_reg[7]_i_1_n_3\
    );
\Synth_reg[7]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => \Synth_reg[7]_i_1_n_1\,
      Q => p_0_in,
      S => \Rate_int[7]_i_1__0_n_0\
    );
\Synth_reg[7]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FFF0FFF0000FFFF0"
    )
        port map (
      GE => \Synth_reg[7]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => \Rate_int_reg_n_0_[7]\,
      I3 => \Rate_Lim_reg_n_0_[7]\,
      I4 => \Synth_reg[6]_i_1_n_2\,
      O51 => \Synth_reg[7]_i_1_n_1\,
      O52 => \Synth_reg[7]_i_1_n_2\,
      PROP => \Synth_reg[7]_i_1_n_3\
    );
UP_CDC: entity work.\decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__10\
     port map (
      dest_clk => \^icclk_0\,
      dest_out => dest_out,
      src_clk => '0',
      src_in => \syncstages_ff_reg[0]\
    );
\VGC.FCLK\: unisim.vcomponents.BUFGCE
    generic map(
      CE_TYPE => "HARDSYNC",
      IS_CE_INVERTED => '0',
      IS_I_INVERTED => '0',
      SIM_DEVICE => "VERSAL_AI_CORE",
      STARTUP_SYNC => "FALSE"
    )
        port map (
      CE => Gate_Fast,
      I => clk_in_kernel_01,
      O => aclk_kernel_01
    );
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => Gate_Fast_d1
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => Gate_Div_d1
    );
power_down_in_ret_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => power_down_in_cdc,
      Q => power_down_in_ret_reg_n_0,
      R => '0'
    );
\power_down_out_d1_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"E2"
    )
        port map (
      I0 => power_down_in_ret_reg_n_0,
      I1 => \^rst_async_kernel_01\,
      I2 => \^power_down_out_d1\,
      O => \power_down_out_d1_i_1__0_n_0\
    );
power_down_out_d1_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => \power_down_out_d1_i_1__0_n_0\,
      Q => \^power_down_out_d1\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_shell_utils_ucc_v1_0_0_clock_throttling__xdcDup__1\ is
  port (
    ICCLK_0 : out STD_LOGIC;
    aclk_kernel_cont_00 : out STD_LOGIC;
    aclk_kernel_00 : out STD_LOGIC;
    rst_async_kernel_00 : out STD_LOGIC;
    ext_tog_ctrl_kernel_00_out : out STD_LOGIC;
    power_down_out_d1 : out STD_LOGIC;
    \syncstages_ff_reg[0]\ : in STD_LOGIC;
    p_6_in : in STD_LOGIC_VECTOR ( 8 downto 0 );
    src_in : in STD_LOGIC;
    aresetn_ctrl : in STD_LOGIC;
    src_arst : in STD_LOGIC;
    \arststages_ff_reg[0]\ : in STD_LOGIC;
    shutdown_latch : in STD_LOGIC;
    clk_in_kernel_00 : in STD_LOGIC;
    ext_tog_ctrl_kernel_00_in : in STD_LOGIC;
    ext_tog_ctrl_kernel_00_enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_shell_utils_ucc_v1_0_0_clock_throttling__xdcDup__1\ : entity is "shell_utils_ucc_v1_0_0_clock_throttling";
end \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_shell_utils_ucc_v1_0_0_clock_throttling__xdcDup__1\;

architecture STRUCTURE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_shell_utils_ucc_v1_0_0_clock_throttling__xdcDup__1\ is
  signal Ext_Tog_En_SW_cdc : STD_LOGIC;
  signal Ext_Tog_En_SW_ret : STD_LOGIC;
  signal Ext_Tog_Out_int_i_1_n_0 : STD_LOGIC;
  signal Gate_Div : STD_LOGIC;
  attribute DONT_TOUCH : boolean;
  attribute DONT_TOUCH of Gate_Div : signal is std.standard.true;
  signal Gate_Div_d1 : STD_LOGIC;
  attribute DONT_TOUCH of Gate_Div_d1 : signal is std.standard.true;
  signal Gate_Div_i_1_n_0 : STD_LOGIC;
  signal Gate_Fast : STD_LOGIC;
  attribute DONT_TOUCH of Gate_Fast : signal is std.standard.true;
  signal Gate_Fast_d1 : STD_LOGIC;
  attribute DONT_TOUCH of Gate_Fast_d1 : signal is std.standard.true;
  signal Gate_Fast_i_1_n_0 : STD_LOGIC;
  signal \^icclk_0\ : STD_LOGIC;
  signal Last_Ext_Tog_In : STD_LOGIC;
  signal Last_Rate_Upd_Tog_CDC : STD_LOGIC;
  signal Locked_cdc : STD_LOGIC;
  signal Locked_ret : STD_LOGIC;
  signal \Mbufg_Clrb_SR_reg_n_0_[1]\ : STD_LOGIC;
  signal \Mbufg_Clrb_SR_reg_n_0_[2]\ : STD_LOGIC;
  signal \Mbufg_Clrb_SR_reg_n_0_[3]\ : STD_LOGIC;
  signal \Mbufg_Clrb_SR_reg_n_0_[4]\ : STD_LOGIC;
  signal \Mbufg_Clrb_SR_reg_n_0_[5]\ : STD_LOGIC;
  signal \Mbufg_Clrb_SR_reg_n_0_[6]\ : STD_LOGIC;
  signal \Mbufg_Clrb_SR_reg_n_0_[7]\ : STD_LOGIC;
  signal \Mbufg_Clrb_SR_reg_n_0_[8]\ : STD_LOGIC;
  signal Rate_In_CDC : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal Rate_Lim : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal Rate_Lim0 : STD_LOGIC;
  signal Rate_Upd : STD_LOGIC;
  signal Rate_Upd0 : STD_LOGIC;
  signal Rate_int : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \Rate_int[7]_i_1_n_0\ : STD_LOGIC;
  signal Rst_In_ret : STD_LOGIC;
  signal \Rst_Int0__0\ : STD_LOGIC;
  signal Shutdown_Latch_CDC : STD_LOGIC;
  signal Startup_Done_cdc : STD_LOGIC;
  signal Startup_Done_ret : STD_LOGIC;
  signal Synth : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \Synth_reg[0]_i_1_n_0\ : STD_LOGIC;
  signal \Synth_reg[0]_i_1_n_2\ : STD_LOGIC;
  signal \Synth_reg[0]_i_1_n_3\ : STD_LOGIC;
  signal \Synth_reg[1]_i_1_n_0\ : STD_LOGIC;
  signal \Synth_reg[1]_i_1_n_2\ : STD_LOGIC;
  signal \Synth_reg[1]_i_1_n_3\ : STD_LOGIC;
  signal \Synth_reg[2]_i_1_n_0\ : STD_LOGIC;
  signal \Synth_reg[2]_i_1_n_2\ : STD_LOGIC;
  signal \Synth_reg[2]_i_1_n_3\ : STD_LOGIC;
  signal \Synth_reg[3]_i_1_n_0\ : STD_LOGIC;
  signal \Synth_reg[3]_i_1_n_2\ : STD_LOGIC;
  signal \Synth_reg[3]_i_1_n_3\ : STD_LOGIC;
  signal \Synth_reg[4]_i_1_n_0\ : STD_LOGIC;
  signal \Synth_reg[4]_i_1_n_2\ : STD_LOGIC;
  signal \Synth_reg[4]_i_1_n_3\ : STD_LOGIC;
  signal \Synth_reg[5]_i_1_n_0\ : STD_LOGIC;
  signal \Synth_reg[5]_i_1_n_2\ : STD_LOGIC;
  signal \Synth_reg[5]_i_1_n_3\ : STD_LOGIC;
  signal \Synth_reg[6]_i_1_n_0\ : STD_LOGIC;
  signal \Synth_reg[6]_i_1_n_2\ : STD_LOGIC;
  signal \Synth_reg[6]_i_1_n_3\ : STD_LOGIC;
  signal \Synth_reg[6]_i_2_n_0\ : STD_LOGIC;
  signal \Synth_reg[6]_i_2_n_1\ : STD_LOGIC;
  signal \Synth_reg[6]_i_2_n_2\ : STD_LOGIC;
  signal \Synth_reg[6]_i_2_n_3\ : STD_LOGIC;
  signal \Synth_reg[7]_i_1_n_0\ : STD_LOGIC;
  signal \Synth_reg[7]_i_1_n_2\ : STD_LOGIC;
  signal \Synth_reg[7]_i_1_n_3\ : STD_LOGIC;
  signal \Synth_reg_n_0_[0]\ : STD_LOGIC;
  signal \Synth_reg_n_0_[1]\ : STD_LOGIC;
  signal \Synth_reg_n_0_[2]\ : STD_LOGIC;
  signal \Synth_reg_n_0_[3]\ : STD_LOGIC;
  signal \Synth_reg_n_0_[4]\ : STD_LOGIC;
  signal \Synth_reg_n_0_[5]\ : STD_LOGIC;
  signal \Synth_reg_n_0_[6]\ : STD_LOGIC;
  signal dest_arst : STD_LOGIC;
  signal dest_out : STD_LOGIC;
  signal \^ext_tog_ctrl_kernel_00_out\ : STD_LOGIC;
  signal p_0_in : STD_LOGIC;
  signal power_down_in_cdc : STD_LOGIC;
  signal power_down_in_ret : STD_LOGIC;
  signal \^power_down_out_d1\ : STD_LOGIC;
  signal power_down_out_d1_i_1_n_0 : STD_LOGIC;
  signal \^rst_async_kernel_00\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of ECCLK : label is "PRIMITIVE";
  attribute DEST_SYNC_FF : integer;
  attribute DEST_SYNC_FF of \ETG.ETSE_CDC\ : label is 4;
  attribute INIT_SYNC_FF : integer;
  attribute INIT_SYNC_FF of \ETG.ETSE_CDC\ : label is 0;
  attribute SIM_ASSERT_CHK : integer;
  attribute SIM_ASSERT_CHK of \ETG.ETSE_CDC\ : label is 0;
  attribute SRC_INPUT_REG : integer;
  attribute SRC_INPUT_REG of \ETG.ETSE_CDC\ : label is 0;
  attribute VERSION : integer;
  attribute VERSION of \ETG.ETSE_CDC\ : label is 0;
  attribute XPM_CDC : string;
  attribute XPM_CDC of \ETG.ETSE_CDC\ : label is "SINGLE";
  attribute XPM_MODULE : string;
  attribute XPM_MODULE of \ETG.ETSE_CDC\ : label is "TRUE";
  attribute DONT_TOUCH of Gate_Div_reg : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of Gate_Div_reg : label is "yes";
  attribute equivalent_register_removal : string;
  attribute equivalent_register_removal of Gate_Div_reg : label is "no";
  attribute DONT_TOUCH of Gate_Fast_reg : label is std.standard.true;
  attribute KEEP of Gate_Fast_reg : label is "yes";
  attribute equivalent_register_removal of Gate_Fast_reg : label is "no";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of ICCLK : label is "BUFG";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of ICCLK : label is "VCC:CE";
  attribute box_type of ICCLK : label is "PRIMITIVE";
  attribute DEST_SYNC_FF of LA_CDC : label is 4;
  attribute INIT_SYNC_FF of LA_CDC : label is 0;
  attribute SIM_ASSERT_CHK of LA_CDC : label is 0;
  attribute SRC_INPUT_REG of LA_CDC : label is 0;
  attribute VERSION of LA_CDC : label is 0;
  attribute XPM_CDC of LA_CDC : label is "SINGLE";
  attribute XPM_MODULE of LA_CDC : label is "TRUE";
  attribute DEF_VAL : string;
  attribute DEF_VAL of LCK_CDC : label is "1'b1";
  attribute DEST_SYNC_FF of LCK_CDC : label is 4;
  attribute INIT_SYNC_FF of LCK_CDC : label is 1;
  attribute INV_DEF_VAL : string;
  attribute INV_DEF_VAL of LCK_CDC : label is "1'b0";
  attribute RST_ACTIVE_HIGH : integer;
  attribute RST_ACTIVE_HIGH of LCK_CDC : label is 0;
  attribute VERSION of LCK_CDC : label is 0;
  attribute XPM_CDC of LCK_CDC : label is "ASYNC_RST";
  attribute XPM_MODULE of LCK_CDC : label is "TRUE";
  attribute DEF_VAL of PD_CDC : label is "1'b1";
  attribute DEST_SYNC_FF of PD_CDC : label is 4;
  attribute INIT_SYNC_FF of PD_CDC : label is 1;
  attribute INV_DEF_VAL of PD_CDC : label is "1'b0";
  attribute RST_ACTIVE_HIGH of PD_CDC : label is 0;
  attribute VERSION of PD_CDC : label is 0;
  attribute XPM_CDC of PD_CDC : label is "ASYNC_RST";
  attribute XPM_MODULE of PD_CDC : label is "TRUE";
  attribute DEST_SYNC_FF of RATE_CDC : label is 2;
  attribute INIT_SYNC_FF of RATE_CDC : label is 0;
  attribute SIM_ASSERT_CHK of RATE_CDC : label is 0;
  attribute SRC_INPUT_REG of RATE_CDC : label is 0;
  attribute VERSION of RATE_CDC : label is 0;
  attribute WIDTH : integer;
  attribute WIDTH of RATE_CDC : label is 8;
  attribute XPM_CDC of RATE_CDC : label is "ARRAY_SINGLE";
  attribute XPM_MODULE of RATE_CDC : label is "TRUE";
  attribute DEF_VAL of RST_CDC : label is "1'b1";
  attribute DEST_SYNC_FF of RST_CDC : label is 4;
  attribute INIT_SYNC_FF of RST_CDC : label is 1;
  attribute INV_DEF_VAL of RST_CDC : label is "1'b0";
  attribute RST_ACTIVE_HIGH of RST_CDC : label is 0;
  attribute VERSION of RST_CDC : label is 0;
  attribute XPM_CDC of RST_CDC : label is "ASYNC_RST";
  attribute XPM_MODULE of RST_CDC : label is "TRUE";
  attribute DEF_VAL of SRT_CDC : label is "1'b1";
  attribute DEST_SYNC_FF of SRT_CDC : label is 4;
  attribute INIT_SYNC_FF of SRT_CDC : label is 1;
  attribute INV_DEF_VAL of SRT_CDC : label is "1'b0";
  attribute RST_ACTIVE_HIGH of SRT_CDC : label is 0;
  attribute VERSION of SRT_CDC : label is 0;
  attribute XPM_CDC of SRT_CDC : label is "ASYNC_RST";
  attribute XPM_MODULE of SRT_CDC : label is "TRUE";
  attribute DEST_SYNC_FF of UP_CDC : label is 4;
  attribute INIT_SYNC_FF of UP_CDC : label is 0;
  attribute SIM_ASSERT_CHK of UP_CDC : label is 0;
  attribute SRC_INPUT_REG of UP_CDC : label is 0;
  attribute VERSION of UP_CDC : label is 0;
  attribute XPM_CDC of UP_CDC : label is "SINGLE";
  attribute XPM_MODULE of UP_CDC : label is "TRUE";
  attribute box_type of \VGC.FCLK\ : label is "PRIMITIVE";
begin
  ICCLK_0 <= \^icclk_0\;
  ext_tog_ctrl_kernel_00_out <= \^ext_tog_ctrl_kernel_00_out\;
  power_down_out_d1 <= \^power_down_out_d1\;
  rst_async_kernel_00 <= \^rst_async_kernel_00\;
ECCLK: unisim.vcomponents.BUFGCE
    generic map(
      CE_TYPE => "HARDSYNC",
      IS_CE_INVERTED => '0',
      IS_I_INVERTED => '0',
      SIM_DEVICE => "VERSAL_AI_CORE",
      STARTUP_SYNC => "FALSE"
    )
        port map (
      CE => Startup_Done_cdc,
      I => clk_in_kernel_00,
      O => aclk_kernel_cont_00
    );
\ETG.ETSE_CDC\: entity work.\decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__9\
     port map (
      dest_clk => \^icclk_0\,
      dest_out => Ext_Tog_En_SW_cdc,
      src_clk => '0',
      src_in => p_6_in(8)
    );
Ext_Tog_En_SW_ret_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => Ext_Tog_En_SW_cdc,
      Q => Ext_Tog_En_SW_ret,
      R => '0'
    );
Ext_Tog_Out_int_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0880"
    )
        port map (
      I0 => Ext_Tog_En_SW_ret,
      I1 => ext_tog_ctrl_kernel_00_enable,
      I2 => p_0_in,
      I3 => \^ext_tog_ctrl_kernel_00_out\,
      O => Ext_Tog_Out_int_i_1_n_0
    );
Ext_Tog_Out_int_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => Ext_Tog_Out_int_i_1_n_0,
      Q => \^ext_tog_ctrl_kernel_00_out\,
      R => '0'
    );
Gate_Div_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"6FFF600000000000"
    )
        port map (
      I0 => ext_tog_ctrl_kernel_00_in,
      I1 => Last_Ext_Tog_In,
      I2 => ext_tog_ctrl_kernel_00_enable,
      I3 => Ext_Tog_En_SW_ret,
      I4 => p_0_in,
      I5 => \Mbufg_Clrb_SR_reg_n_0_[8]\,
      O => Gate_Div_i_1_n_0
    );
Gate_Div_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => Gate_Div_i_1_n_0,
      Q => Gate_Div,
      R => \Rate_int[7]_i_1_n_0\
    );
Gate_Fast_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"6FFF6000"
    )
        port map (
      I0 => Last_Ext_Tog_In,
      I1 => ext_tog_ctrl_kernel_00_in,
      I2 => ext_tog_ctrl_kernel_00_enable,
      I3 => Ext_Tog_En_SW_ret,
      I4 => p_0_in,
      O => Gate_Fast_i_1_n_0
    );
Gate_Fast_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => Gate_Fast_i_1_n_0,
      Q => Gate_Fast,
      R => \Rate_int[7]_i_1_n_0\
    );
ICCLK: unisim.vcomponents.BUFGCE
    generic map(
      CE_TYPE => "ASYNC",
      SIM_DEVICE => "VERSAL_AI_CORE"
    )
        port map (
      CE => '1',
      I => clk_in_kernel_00,
      O => \^icclk_0\
    );
LA_CDC: entity work.\decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__8\
     port map (
      dest_clk => \^icclk_0\,
      dest_out => Shutdown_Latch_CDC,
      src_clk => '0',
      src_in => src_in
    );
LCK_CDC: entity work.\decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__3\
     port map (
      dest_arst => Locked_cdc,
      dest_clk => \^icclk_0\,
      src_arst => src_arst
    );
Last_Ext_Tog_In_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => ext_tog_ctrl_kernel_00_in,
      Q => Last_Ext_Tog_In,
      R => '0'
    );
Last_Rate_Upd_Tog_CDC_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => dest_out,
      Q => Last_Rate_Upd_Tog_CDC,
      R => '0'
    );
Locked_ret_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => Locked_cdc,
      Q => Locked_ret,
      R => '0'
    );
\Mbufg_Clrb_SR_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => '1',
      Q => \Mbufg_Clrb_SR_reg_n_0_[1]\,
      R => \Rate_int[7]_i_1_n_0\
    );
\Mbufg_Clrb_SR_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => \Mbufg_Clrb_SR_reg_n_0_[1]\,
      Q => \Mbufg_Clrb_SR_reg_n_0_[2]\,
      R => \Rate_int[7]_i_1_n_0\
    );
\Mbufg_Clrb_SR_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => \Mbufg_Clrb_SR_reg_n_0_[2]\,
      Q => \Mbufg_Clrb_SR_reg_n_0_[3]\,
      R => \Rate_int[7]_i_1_n_0\
    );
\Mbufg_Clrb_SR_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => \Mbufg_Clrb_SR_reg_n_0_[3]\,
      Q => \Mbufg_Clrb_SR_reg_n_0_[4]\,
      R => \Rate_int[7]_i_1_n_0\
    );
\Mbufg_Clrb_SR_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => \Mbufg_Clrb_SR_reg_n_0_[4]\,
      Q => \Mbufg_Clrb_SR_reg_n_0_[5]\,
      R => \Rate_int[7]_i_1_n_0\
    );
\Mbufg_Clrb_SR_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => \Mbufg_Clrb_SR_reg_n_0_[5]\,
      Q => \Mbufg_Clrb_SR_reg_n_0_[6]\,
      R => \Rate_int[7]_i_1_n_0\
    );
\Mbufg_Clrb_SR_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => \Mbufg_Clrb_SR_reg_n_0_[6]\,
      Q => \Mbufg_Clrb_SR_reg_n_0_[7]\,
      R => \Rate_int[7]_i_1_n_0\
    );
\Mbufg_Clrb_SR_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => \Mbufg_Clrb_SR_reg_n_0_[7]\,
      Q => \Mbufg_Clrb_SR_reg_n_0_[8]\,
      R => \Rate_int[7]_i_1_n_0\
    );
PD_CDC: entity work.\decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__5\
     port map (
      dest_arst => power_down_in_cdc,
      dest_clk => \^icclk_0\,
      src_arst => shutdown_latch
    );
RATE_CDC: entity work.\decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__2\
     port map (
      dest_clk => \^icclk_0\,
      dest_out(7 downto 0) => Rate_In_CDC(7 downto 0),
      src_clk => '0',
      src_in(7 downto 0) => p_6_in(7 downto 0)
    );
RST_CDC: entity work.\decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__2\
     port map (
      dest_arst => dest_arst,
      dest_clk => \^icclk_0\,
      src_arst => aresetn_ctrl
    );
\Rate_Lim[7]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AAA8"
    )
        port map (
      I0 => Shutdown_Latch_CDC,
      I1 => Rate_int(6),
      I2 => Rate_int(7),
      I3 => Rate_int(5),
      O => Rate_Lim0
    );
\Rate_Lim_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => Rate_int(0),
      Q => Rate_Lim(0),
      R => Rate_Lim0
    );
\Rate_Lim_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => Rate_int(1),
      Q => Rate_Lim(1),
      R => Rate_Lim0
    );
\Rate_Lim_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => Rate_int(2),
      Q => Rate_Lim(2),
      R => Rate_Lim0
    );
\Rate_Lim_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => Rate_int(3),
      Q => Rate_Lim(3),
      R => Rate_Lim0
    );
\Rate_Lim_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => Rate_int(4),
      Q => Rate_Lim(4),
      R => Rate_Lim0
    );
\Rate_Lim_reg[5]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => Rate_int(5),
      Q => Rate_Lim(5),
      S => Rate_Lim0
    );
\Rate_Lim_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => Rate_int(6),
      Q => Rate_Lim(6),
      R => Rate_Lim0
    );
\Rate_Lim_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => Rate_int(7),
      Q => Rate_Lim(7),
      R => Rate_Lim0
    );
Rate_Upd_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => Last_Rate_Upd_Tog_CDC,
      I1 => dest_out,
      O => Rate_Upd0
    );
Rate_Upd_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => Rate_Upd0,
      Q => Rate_Upd,
      R => '0'
    );
\Rate_int[7]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^rst_async_kernel_00\,
      O => \Rate_int[7]_i_1_n_0\
    );
\Rate_int_reg[0]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => \^icclk_0\,
      CE => Rate_Upd,
      D => Rate_In_CDC(0),
      Q => Rate_int(0),
      S => \Rate_int[7]_i_1_n_0\
    );
\Rate_int_reg[1]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => \^icclk_0\,
      CE => Rate_Upd,
      D => Rate_In_CDC(1),
      Q => Rate_int(1),
      S => \Rate_int[7]_i_1_n_0\
    );
\Rate_int_reg[2]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => \^icclk_0\,
      CE => Rate_Upd,
      D => Rate_In_CDC(2),
      Q => Rate_int(2),
      S => \Rate_int[7]_i_1_n_0\
    );
\Rate_int_reg[3]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => \^icclk_0\,
      CE => Rate_Upd,
      D => Rate_In_CDC(3),
      Q => Rate_int(3),
      S => \Rate_int[7]_i_1_n_0\
    );
\Rate_int_reg[4]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => \^icclk_0\,
      CE => Rate_Upd,
      D => Rate_In_CDC(4),
      Q => Rate_int(4),
      S => \Rate_int[7]_i_1_n_0\
    );
\Rate_int_reg[5]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => \^icclk_0\,
      CE => Rate_Upd,
      D => Rate_In_CDC(5),
      Q => Rate_int(5),
      S => \Rate_int[7]_i_1_n_0\
    );
\Rate_int_reg[6]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => \^icclk_0\,
      CE => Rate_Upd,
      D => Rate_In_CDC(6),
      Q => Rate_int(6),
      S => \Rate_int[7]_i_1_n_0\
    );
\Rate_int_reg[7]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => \^icclk_0\,
      CE => Rate_Upd,
      D => Rate_In_CDC(7),
      Q => Rate_int(7),
      S => \Rate_int[7]_i_1_n_0\
    );
Rst_In_ret_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => dest_arst,
      Q => Rst_In_ret,
      R => '0'
    );
Rst_Int0: unisim.vcomponents.LUT3
    generic map(
      INIT => X"80"
    )
        port map (
      I0 => Rst_In_ret,
      I1 => Locked_ret,
      I2 => Startup_Done_ret,
      O => \Rst_Int0__0\
    );
Rst_Int_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => \Rst_Int0__0\,
      Q => \^rst_async_kernel_00\,
      R => '0'
    );
SRT_CDC: entity work.\decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__4\
     port map (
      dest_arst => Startup_Done_cdc,
      dest_clk => \^icclk_0\,
      src_arst => \arststages_ff_reg[0]\
    );
Startup_Done_ret_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => Startup_Done_cdc,
      Q => Startup_Done_ret,
      R => '0'
    );
\Synth_reg[0]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => Synth(0),
      Q => \Synth_reg_n_0_[0]\,
      S => \Rate_int[7]_i_1_n_0\
    );
\Synth_reg[0]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"CFCC0C003C33C3CC"
    )
        port map (
      GE => \Synth_reg[0]_i_1_n_0\,
      I0 => '1',
      I1 => \Synth_reg_n_0_[0]\,
      I2 => Rate_int(7),
      I3 => Rate_Lim(0),
      I4 => '0',
      O51 => Synth(0),
      O52 => \Synth_reg[0]_i_1_n_2\,
      PROP => \Synth_reg[0]_i_1_n_3\
    );
\Synth_reg[1]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => Synth(1),
      Q => \Synth_reg_n_0_[1]\,
      S => \Rate_int[7]_i_1_n_0\
    );
\Synth_reg[1]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"CFCC0C003C33C3CC"
    )
        port map (
      GE => \Synth_reg[1]_i_1_n_0\,
      I0 => '1',
      I1 => \Synth_reg_n_0_[1]\,
      I2 => Rate_int(7),
      I3 => Rate_Lim(1),
      I4 => \Synth_reg[0]_i_1_n_2\,
      O51 => Synth(1),
      O52 => \Synth_reg[1]_i_1_n_2\,
      PROP => \Synth_reg[1]_i_1_n_3\
    );
\Synth_reg[2]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => Synth(2),
      Q => \Synth_reg_n_0_[2]\,
      S => \Rate_int[7]_i_1_n_0\
    );
\Synth_reg[2]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"CFCC0C003C33C3CC"
    )
        port map (
      GE => \Synth_reg[2]_i_1_n_0\,
      I0 => '1',
      I1 => \Synth_reg_n_0_[2]\,
      I2 => Rate_int(7),
      I3 => Rate_Lim(2),
      I4 => \Synth_reg[6]_i_2_n_0\,
      O51 => Synth(2),
      O52 => \Synth_reg[2]_i_1_n_2\,
      PROP => \Synth_reg[2]_i_1_n_3\
    );
\Synth_reg[3]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => Synth(3),
      Q => \Synth_reg_n_0_[3]\,
      S => \Rate_int[7]_i_1_n_0\
    );
\Synth_reg[3]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"CFCC0C003C33C3CC"
    )
        port map (
      GE => \Synth_reg[3]_i_1_n_0\,
      I0 => '1',
      I1 => \Synth_reg_n_0_[3]\,
      I2 => Rate_int(7),
      I3 => Rate_Lim(3),
      I4 => \Synth_reg[2]_i_1_n_2\,
      O51 => Synth(3),
      O52 => \Synth_reg[3]_i_1_n_2\,
      PROP => \Synth_reg[3]_i_1_n_3\
    );
\Synth_reg[4]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => Synth(4),
      Q => \Synth_reg_n_0_[4]\,
      S => \Rate_int[7]_i_1_n_0\
    );
\Synth_reg[4]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"CFCC0C003C33C3CC"
    )
        port map (
      GE => \Synth_reg[4]_i_1_n_0\,
      I0 => '1',
      I1 => \Synth_reg_n_0_[4]\,
      I2 => Rate_int(7),
      I3 => Rate_Lim(4),
      I4 => \Synth_reg[6]_i_2_n_1\,
      O51 => Synth(4),
      O52 => \Synth_reg[4]_i_1_n_2\,
      PROP => \Synth_reg[4]_i_1_n_3\
    );
\Synth_reg[5]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => Synth(5),
      Q => \Synth_reg_n_0_[5]\,
      S => \Rate_int[7]_i_1_n_0\
    );
\Synth_reg[5]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"CFCC0C003C33C3CC"
    )
        port map (
      GE => \Synth_reg[5]_i_1_n_0\,
      I0 => '1',
      I1 => \Synth_reg_n_0_[5]\,
      I2 => Rate_int(7),
      I3 => Rate_Lim(5),
      I4 => \Synth_reg[4]_i_1_n_2\,
      O51 => Synth(5),
      O52 => \Synth_reg[5]_i_1_n_2\,
      PROP => \Synth_reg[5]_i_1_n_3\
    );
\Synth_reg[6]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => Synth(6),
      Q => \Synth_reg_n_0_[6]\,
      S => \Rate_int[7]_i_1_n_0\
    );
\Synth_reg[6]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"CFCC0C003C33C3CC"
    )
        port map (
      GE => \Synth_reg[6]_i_1_n_0\,
      I0 => '1',
      I1 => \Synth_reg_n_0_[6]\,
      I2 => Rate_int(7),
      I3 => Rate_Lim(6),
      I4 => \Synth_reg[6]_i_2_n_2\,
      O51 => Synth(6),
      O52 => \Synth_reg[6]_i_1_n_2\,
      PROP => \Synth_reg[6]_i_1_n_3\
    );
\Synth_reg[6]_i_2\: unisim.vcomponents.LOOKAHEAD8
    generic map(
      LOOKB => "FALSE",
      LOOKD => "TRUE",
      LOOKF => "TRUE",
      LOOKH => "TRUE"
    )
        port map (
      CIN => '0',
      COUTB => \Synth_reg[6]_i_2_n_0\,
      COUTD => \Synth_reg[6]_i_2_n_1\,
      COUTF => \Synth_reg[6]_i_2_n_2\,
      COUTH => \Synth_reg[6]_i_2_n_3\,
      CYA => \Synth_reg[0]_i_1_n_2\,
      CYB => \Synth_reg[1]_i_1_n_2\,
      CYC => \Synth_reg[2]_i_1_n_2\,
      CYD => \Synth_reg[3]_i_1_n_2\,
      CYE => \Synth_reg[4]_i_1_n_2\,
      CYF => \Synth_reg[5]_i_1_n_2\,
      CYG => \Synth_reg[6]_i_1_n_2\,
      CYH => \Synth_reg[7]_i_1_n_2\,
      GEA => \Synth_reg[0]_i_1_n_0\,
      GEB => \Synth_reg[1]_i_1_n_0\,
      GEC => \Synth_reg[2]_i_1_n_0\,
      GED => \Synth_reg[3]_i_1_n_0\,
      GEE => \Synth_reg[4]_i_1_n_0\,
      GEF => \Synth_reg[5]_i_1_n_0\,
      GEG => \Synth_reg[6]_i_1_n_0\,
      GEH => \Synth_reg[7]_i_1_n_0\,
      PROPA => \Synth_reg[0]_i_1_n_3\,
      PROPB => \Synth_reg[1]_i_1_n_3\,
      PROPC => \Synth_reg[2]_i_1_n_3\,
      PROPD => \Synth_reg[3]_i_1_n_3\,
      PROPE => \Synth_reg[4]_i_1_n_3\,
      PROPF => \Synth_reg[5]_i_1_n_3\,
      PROPG => \Synth_reg[6]_i_1_n_3\,
      PROPH => \Synth_reg[7]_i_1_n_3\
    );
\Synth_reg[7]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => Synth(7),
      Q => p_0_in,
      S => \Rate_int[7]_i_1_n_0\
    );
\Synth_reg[7]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FFF0FFF0000FFFF0"
    )
        port map (
      GE => \Synth_reg[7]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => Rate_int(7),
      I3 => Rate_Lim(7),
      I4 => \Synth_reg[6]_i_1_n_2\,
      O51 => Synth(7),
      O52 => \Synth_reg[7]_i_1_n_2\,
      PROP => \Synth_reg[7]_i_1_n_3\
    );
UP_CDC: entity work.\decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__7\
     port map (
      dest_clk => \^icclk_0\,
      dest_out => dest_out,
      src_clk => '0',
      src_in => \syncstages_ff_reg[0]\
    );
\VGC.FCLK\: unisim.vcomponents.BUFGCE
    generic map(
      CE_TYPE => "HARDSYNC",
      IS_CE_INVERTED => '0',
      IS_I_INVERTED => '0',
      SIM_DEVICE => "VERSAL_AI_CORE",
      STARTUP_SYNC => "FALSE"
    )
        port map (
      CE => Gate_Fast,
      I => clk_in_kernel_00,
      O => aclk_kernel_00
    );
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => Gate_Fast_d1
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => Gate_Div_d1
    );
power_down_in_ret_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => power_down_in_cdc,
      Q => power_down_in_ret,
      R => '0'
    );
power_down_out_d1_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"E2"
    )
        port map (
      I0 => power_down_in_ret,
      I1 => \^rst_async_kernel_00\,
      I2 => \^power_down_out_d1\,
      O => power_down_out_d1_i_1_n_0
    );
power_down_out_d1_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => \^icclk_0\,
      CE => '1',
      D => power_down_out_d1_i_1_n_0,
      Q => \^power_down_out_d1\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_shell_utils_ucc_v1_0_0_frequency_counter is
  port (
    src_in : out STD_LOGIC_VECTOR ( 64 downto 0 );
    aclk_kernel_cont_01 : in STD_LOGIC;
    aclk_freerun : in STD_LOGIC;
    aclk_kernel_01 : in STD_LOGIC;
    dest_arst : in STD_LOGIC;
    \rst_cnt_reg[0]_0\ : in STD_LOGIC
  );
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_shell_utils_ucc_v1_0_0_frequency_counter;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_shell_utils_ucc_v1_0_0_frequency_counter is
  signal \CLKS[0].test_clk_cntr[0][0]_i_1__1_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][0]_i_2__1_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][0]_i_2__1_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][0]_i_2__1_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][0]_i_2__1_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][10]_i_1__1_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][10]_i_1__1_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][10]_i_1__1_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][10]_i_1__1_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][10]_i_2__1_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][10]_i_2__1_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][10]_i_2__1_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][10]_i_2__1_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][11]_i_1__1_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][11]_i_1__1_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][11]_i_1__1_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][11]_i_1__1_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][12]_i_1__1_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][12]_i_1__1_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][12]_i_1__1_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][12]_i_1__1_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][13]_i_1__1_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][13]_i_1__1_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][13]_i_1__1_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][13]_i_1__1_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][14]_i_1__1_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][14]_i_1__1_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][14]_i_1__1_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][14]_i_1__1_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][15]_i_1__1_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][15]_i_1__1_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][15]_i_1__1_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][15]_i_1__1_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][16]_i_1__1_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][16]_i_1__1_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][16]_i_1__1_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][16]_i_1__1_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][17]_i_1__1_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][17]_i_1__1_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][17]_i_1__1_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][17]_i_1__1_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][18]_i_1__1_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][18]_i_1__1_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][18]_i_1__1_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][18]_i_1__1_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][18]_i_2__1_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][18]_i_2__1_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][18]_i_2__1_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][18]_i_2__1_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][18]_i_3__1_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][18]_i_3__1_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][18]_i_3__1_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][18]_i_3__1_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][19]_i_1__1_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][19]_i_1__1_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][19]_i_1__1_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][19]_i_1__1_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][1]_i_1__1_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][1]_i_1__1_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][1]_i_1__1_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][1]_i_1__1_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][20]_i_1__1_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][20]_i_1__1_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][20]_i_1__1_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][20]_i_1__1_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][21]_i_1__1_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][21]_i_1__1_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][21]_i_1__1_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][21]_i_1__1_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][22]_i_1__1_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][22]_i_1__1_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][22]_i_1__1_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][22]_i_1__1_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][2]_i_1__1_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][2]_i_1__1_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][2]_i_1__1_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][2]_i_1__1_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][2]_i_2__1_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][2]_i_2__1_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][2]_i_2__1_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][2]_i_2__1_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][3]_i_1__1_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][3]_i_1__1_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][3]_i_1__1_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][3]_i_1__1_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][4]_i_1__1_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][4]_i_1__1_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][4]_i_1__1_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][4]_i_1__1_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][5]_i_1__1_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][5]_i_1__1_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][5]_i_1__1_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][5]_i_1__1_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][6]_i_1__1_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][6]_i_1__1_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][6]_i_1__1_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][6]_i_1__1_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][7]_i_1__1_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][7]_i_1__1_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][7]_i_1__1_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][7]_i_1__1_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][8]_i_1__1_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][8]_i_1__1_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][8]_i_1__1_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][8]_i_1__1_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][9]_i_1__1_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][9]_i_1__1_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][9]_i_1__1_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][9]_i_1__1_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0]_0\ : STD_LOGIC_VECTOR ( 22 downto 0 );
  signal \CLKS[1].test_clk_cntr[1][0]_i_1__0_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][0]_i_2__0_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][0]_i_2__0_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][0]_i_2__0_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][0]_i_2__0_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][10]_i_1__0_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][10]_i_1__0_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][10]_i_1__0_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][10]_i_1__0_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][10]_i_2__0_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][10]_i_2__0_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][10]_i_2__0_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][10]_i_2__0_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][11]_i_1__0_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][11]_i_1__0_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][11]_i_1__0_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][11]_i_1__0_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][12]_i_1__0_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][12]_i_1__0_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][12]_i_1__0_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][12]_i_1__0_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][13]_i_1__0_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][13]_i_1__0_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][13]_i_1__0_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][13]_i_1__0_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][14]_i_1__0_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][14]_i_1__0_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][14]_i_1__0_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][14]_i_1__0_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][15]_i_1__0_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][15]_i_1__0_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][15]_i_1__0_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][15]_i_1__0_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][16]_i_1__0_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][16]_i_1__0_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][16]_i_1__0_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][16]_i_1__0_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][17]_i_1__0_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][17]_i_1__0_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][17]_i_1__0_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][17]_i_1__0_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][18]_i_1__0_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][18]_i_1__0_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][18]_i_1__0_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][18]_i_1__0_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][18]_i_2__0_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][18]_i_2__0_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][18]_i_2__0_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][18]_i_2__0_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][18]_i_3__0_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][18]_i_3__0_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][18]_i_3__0_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][18]_i_3__0_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][19]_i_1__0_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][19]_i_1__0_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][19]_i_1__0_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][19]_i_1__0_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][1]_i_1__0_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][1]_i_1__0_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][1]_i_1__0_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][1]_i_1__0_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][20]_i_1__0_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][20]_i_1__0_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][20]_i_1__0_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][20]_i_1__0_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][21]_i_1__0_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][21]_i_1__0_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][21]_i_1__0_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][21]_i_1__0_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][22]_i_1__0_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][22]_i_1__0_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][22]_i_1__0_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][22]_i_1__0_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][2]_i_1__0_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][2]_i_1__0_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][2]_i_1__0_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][2]_i_1__0_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][2]_i_2__0_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][2]_i_2__0_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][2]_i_2__0_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][2]_i_2__0_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][3]_i_1__0_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][3]_i_1__0_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][3]_i_1__0_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][3]_i_1__0_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][4]_i_1__0_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][4]_i_1__0_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][4]_i_1__0_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][4]_i_1__0_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][5]_i_1__0_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][5]_i_1__0_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][5]_i_1__0_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][5]_i_1__0_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][6]_i_1__0_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][6]_i_1__0_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][6]_i_1__0_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][6]_i_1__0_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][7]_i_1__0_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][7]_i_1__0_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][7]_i_1__0_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][7]_i_1__0_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][8]_i_1__0_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][8]_i_1__0_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][8]_i_1__0_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][8]_i_1__0_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][9]_i_1__0_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][9]_i_1__0_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][9]_i_1__0_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][9]_i_1__0_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1]_1\ : STD_LOGIC_VECTOR ( 22 downto 0 );
  signal done : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of done : signal is "true";
  signal \done_ref_i_i_1__0_n_0\ : STD_LOGIC;
  signal \done_ref_i_i_2__0_n_0\ : STD_LOGIC;
  signal \done_ref_i_i_3__0_n_0\ : STD_LOGIC;
  signal \done_ref_i_i_4__0_n_0\ : STD_LOGIC;
  signal done_synced_0 : STD_LOGIC;
  signal done_synced_1 : STD_LOGIC;
  signal \genblk1[1].cdc_freq_cntr_kernel_i_10_n_0\ : STD_LOGIC;
  signal \genblk1[1].cdc_freq_cntr_kernel_i_3_n_0\ : STD_LOGIC;
  signal \genblk1[1].cdc_freq_cntr_kernel_i_4_n_0\ : STD_LOGIC;
  signal \genblk1[1].cdc_freq_cntr_kernel_i_5_n_0\ : STD_LOGIC;
  signal \genblk1[1].cdc_freq_cntr_kernel_i_6_n_0\ : STD_LOGIC;
  signal \genblk1[1].cdc_freq_cntr_kernel_i_7_n_0\ : STD_LOGIC;
  signal \genblk1[1].cdc_freq_cntr_kernel_i_8_n_0\ : STD_LOGIC;
  signal \genblk1[1].cdc_freq_cntr_kernel_i_9_n_0\ : STD_LOGIC;
  signal p_0_in : STD_LOGIC_VECTOR ( 15 downto 1 );
  signal \ref_clk_cntr_i[0]_i_1__0_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[10]_i_1__0_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[10]_i_1__0_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[10]_i_1__0_n_3\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[11]_i_1__0_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[11]_i_1__0_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[11]_i_1__0_n_3\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[12]_i_1__0_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[12]_i_1__0_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[12]_i_1__0_n_3\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[13]_i_1__0_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[13]_i_1__0_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[13]_i_1__0_n_3\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[14]_i_1__0_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[14]_i_1__0_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[14]_i_1__0_n_3\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[15]_i_1__0_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[15]_i_1__0_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[15]_i_1__0_n_3\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[15]_i_2__0_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[15]_i_2__0_n_1\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[15]_i_2__0_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[15]_i_2__0_n_3\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[15]_i_3__0_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[15]_i_3__0_n_1\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[15]_i_3__0_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[15]_i_3__0_n_3\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[1]_i_1__0_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[1]_i_1__0_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[1]_i_1__0_n_3\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[2]_i_1__0_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[2]_i_1__0_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[2]_i_1__0_n_3\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[3]_i_1__0_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[3]_i_1__0_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[3]_i_1__0_n_3\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[4]_i_1__0_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[4]_i_1__0_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[4]_i_1__0_n_3\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[5]_i_1__0_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[5]_i_1__0_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[5]_i_1__0_n_3\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[6]_i_1__0_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[6]_i_1__0_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[6]_i_1__0_n_3\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[7]_i_1__0_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[7]_i_1__0_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[7]_i_1__0_n_3\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[8]_i_1__0_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[8]_i_1__0_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[8]_i_1__0_n_3\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[9]_i_1__0_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[9]_i_1__0_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[9]_i_1__0_n_3\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[9]_i_2__0_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[9]_i_2__0_n_1\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[9]_i_2__0_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[9]_i_2__0_n_3\ : STD_LOGIC;
  signal rst_cnt : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute RTL_KEEP of rst_cnt : signal is "true";
  signal rst_cnt_c : STD_LOGIC;
  signal rst_cnt_ref : STD_LOGIC;
  attribute RTL_KEEP of rst_cnt_ref : signal is "true";
  signal rst_cnt_synced_0 : STD_LOGIC;
  signal rst_cnt_synced_1 : STD_LOGIC;
  signal \^src_in\ : STD_LOGIC_VECTOR ( 64 downto 0 );
  attribute DEST_SYNC_FF : integer;
  attribute DEST_SYNC_FF of \CLKS[0].cdc_done\ : label is 3;
  attribute INIT_SYNC_FF : integer;
  attribute INIT_SYNC_FF of \CLKS[0].cdc_done\ : label is 0;
  attribute SIM_ASSERT_CHK : integer;
  attribute SIM_ASSERT_CHK of \CLKS[0].cdc_done\ : label is 0;
  attribute SRC_INPUT_REG : integer;
  attribute SRC_INPUT_REG of \CLKS[0].cdc_done\ : label is 0;
  attribute VERSION : integer;
  attribute VERSION of \CLKS[0].cdc_done\ : label is 0;
  attribute WIDTH : integer;
  attribute WIDTH of \CLKS[0].cdc_done\ : label is 1;
  attribute XPM_CDC : string;
  attribute XPM_CDC of \CLKS[0].cdc_done\ : label is "ARRAY_SINGLE";
  attribute XPM_MODULE : string;
  attribute XPM_MODULE of \CLKS[0].cdc_done\ : label is "TRUE";
  attribute DEF_VAL : string;
  attribute DEF_VAL of \CLKS[0].cdc_rst_cn0\ : label is "1'b0";
  attribute DEST_SYNC_FF of \CLKS[0].cdc_rst_cn0\ : label is 3;
  attribute INIT_SYNC_FF of \CLKS[0].cdc_rst_cn0\ : label is 0;
  attribute INV_DEF_VAL : string;
  attribute INV_DEF_VAL of \CLKS[0].cdc_rst_cn0\ : label is "1'b1";
  attribute RST_ACTIVE_HIGH : integer;
  attribute RST_ACTIVE_HIGH of \CLKS[0].cdc_rst_cn0\ : label is 1;
  attribute VERSION of \CLKS[0].cdc_rst_cn0\ : label is 0;
  attribute XPM_CDC of \CLKS[0].cdc_rst_cn0\ : label is "ASYNC_RST";
  attribute XPM_MODULE of \CLKS[0].cdc_rst_cn0\ : label is "TRUE";
  attribute DEST_SYNC_FF of \CLKS[0].cdc_test_clk0_cntr\ : label is 2;
  attribute INIT_SYNC_FF of \CLKS[0].cdc_test_clk0_cntr\ : label is 0;
  attribute SIM_ASSERT_CHK of \CLKS[0].cdc_test_clk0_cntr\ : label is 0;
  attribute SRC_INPUT_REG of \CLKS[0].cdc_test_clk0_cntr\ : label is 0;
  attribute VERSION of \CLKS[0].cdc_test_clk0_cntr\ : label is 0;
  attribute WIDTH of \CLKS[0].cdc_test_clk0_cntr\ : label is 23;
  attribute XPM_CDC of \CLKS[0].cdc_test_clk0_cntr\ : label is "ARRAY_SINGLE";
  attribute XPM_MODULE of \CLKS[0].cdc_test_clk0_cntr\ : label is "TRUE";
  attribute DEST_SYNC_FF of \CLKS[1].cdc_done\ : label is 3;
  attribute INIT_SYNC_FF of \CLKS[1].cdc_done\ : label is 0;
  attribute SIM_ASSERT_CHK of \CLKS[1].cdc_done\ : label is 0;
  attribute SRC_INPUT_REG of \CLKS[1].cdc_done\ : label is 0;
  attribute VERSION of \CLKS[1].cdc_done\ : label is 0;
  attribute WIDTH of \CLKS[1].cdc_done\ : label is 1;
  attribute XPM_CDC of \CLKS[1].cdc_done\ : label is "ARRAY_SINGLE";
  attribute XPM_MODULE of \CLKS[1].cdc_done\ : label is "TRUE";
  attribute DEF_VAL of \CLKS[1].cdc_rst_cn0\ : label is "1'b0";
  attribute DEST_SYNC_FF of \CLKS[1].cdc_rst_cn0\ : label is 3;
  attribute INIT_SYNC_FF of \CLKS[1].cdc_rst_cn0\ : label is 0;
  attribute INV_DEF_VAL of \CLKS[1].cdc_rst_cn0\ : label is "1'b1";
  attribute RST_ACTIVE_HIGH of \CLKS[1].cdc_rst_cn0\ : label is 1;
  attribute VERSION of \CLKS[1].cdc_rst_cn0\ : label is 0;
  attribute XPM_CDC of \CLKS[1].cdc_rst_cn0\ : label is "ASYNC_RST";
  attribute XPM_MODULE of \CLKS[1].cdc_rst_cn0\ : label is "TRUE";
  attribute DEST_SYNC_FF of \CLKS[1].cdc_test_clk0_cntr\ : label is 2;
  attribute INIT_SYNC_FF of \CLKS[1].cdc_test_clk0_cntr\ : label is 0;
  attribute SIM_ASSERT_CHK of \CLKS[1].cdc_test_clk0_cntr\ : label is 0;
  attribute SRC_INPUT_REG of \CLKS[1].cdc_test_clk0_cntr\ : label is 0;
  attribute VERSION of \CLKS[1].cdc_test_clk0_cntr\ : label is 0;
  attribute WIDTH of \CLKS[1].cdc_test_clk0_cntr\ : label is 23;
  attribute XPM_CDC of \CLKS[1].cdc_test_clk0_cntr\ : label is "ARRAY_SINGLE";
  attribute XPM_MODULE of \CLKS[1].cdc_test_clk0_cntr\ : label is "TRUE";
  attribute KEEP : string;
  attribute KEEP of \done_reg[0]\ : label is "yes";
  attribute KEEP of \done_reg[1]\ : label is "yes";
  attribute KEEP of \done_reg[2]\ : label is "yes";
  attribute KEEP of \done_reg[3]\ : label is "yes";
  attribute KEEP of rst_cnt_ref_reg : label is "yes";
  attribute KEEP of \rst_cnt_reg[0]\ : label is "yes";
  attribute KEEP of \rst_cnt_reg[1]\ : label is "yes";
  attribute KEEP of \rst_cnt_reg[2]\ : label is "yes";
  attribute KEEP of \rst_cnt_reg[3]\ : label is "yes";
begin
  src_in(64 downto 0) <= \^src_in\(64 downto 0);
\CLKS[0].cdc_done\: entity work.\decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__8\
     port map (
      dest_clk => aclk_kernel_cont_01,
      dest_out(0) => done_synced_0,
      src_clk => '0',
      src_in(0) => done(0)
    );
\CLKS[0].cdc_rst_cn0\: entity work.\decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__5\
     port map (
      dest_arst => rst_cnt_synced_0,
      dest_clk => aclk_kernel_cont_01,
      src_arst => rst_cnt(0)
    );
\CLKS[0].cdc_test_clk0_cntr\: entity work.\decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__8\
     port map (
      dest_clk => aclk_freerun,
      dest_out(22 downto 0) => \^src_in\(46 downto 24),
      src_clk => '0',
      src_in(22 downto 0) => \CLKS[0].test_clk_cntr_reg[0]_0\(22 downto 0)
    );
\CLKS[0].test_clk_cntr[0][0]_i_1__1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => done_synced_0,
      O => \CLKS[0].test_clk_cntr[0][0]_i_1__1_n_0\
    );
\CLKS[0].test_clk_cntr_reg[0][0]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_cont_01,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1__1_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][0]_i_2__1_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(0)
    );
\CLKS[0].test_clk_cntr_reg[0][0]_i_2__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FFFFFF00FF0000FF"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][0]_i_2__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(0),
      I4 => '0',
      O51 => \CLKS[0].test_clk_cntr_reg[0][0]_i_2__1_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][0]_i_2__1_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][0]_i_2__1_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][10]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_cont_01,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1__1_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][10]_i_1__1_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(10)
    );
\CLKS[0].test_clk_cntr_reg[0][10]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][10]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(10),
      I4 => \CLKS[0].test_clk_cntr_reg[0][10]_i_2__1_n_0\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][10]_i_1__1_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][10]_i_1__1_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][10]_i_1__1_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][10]_i_2__1\: unisim.vcomponents.LOOKAHEAD8
    generic map(
      LOOKB => "TRUE",
      LOOKD => "TRUE",
      LOOKF => "TRUE",
      LOOKH => "TRUE"
    )
        port map (
      CIN => \CLKS[0].test_clk_cntr_reg[0][2]_i_2__1_n_3\,
      COUTB => \CLKS[0].test_clk_cntr_reg[0][10]_i_2__1_n_0\,
      COUTD => \CLKS[0].test_clk_cntr_reg[0][10]_i_2__1_n_1\,
      COUTF => \CLKS[0].test_clk_cntr_reg[0][10]_i_2__1_n_2\,
      COUTH => \CLKS[0].test_clk_cntr_reg[0][10]_i_2__1_n_3\,
      CYA => \CLKS[0].test_clk_cntr_reg[0][8]_i_1__1_n_2\,
      CYB => \CLKS[0].test_clk_cntr_reg[0][9]_i_1__1_n_2\,
      CYC => \CLKS[0].test_clk_cntr_reg[0][10]_i_1__1_n_2\,
      CYD => \CLKS[0].test_clk_cntr_reg[0][11]_i_1__1_n_2\,
      CYE => \CLKS[0].test_clk_cntr_reg[0][12]_i_1__1_n_2\,
      CYF => \CLKS[0].test_clk_cntr_reg[0][13]_i_1__1_n_2\,
      CYG => \CLKS[0].test_clk_cntr_reg[0][14]_i_1__1_n_2\,
      CYH => \CLKS[0].test_clk_cntr_reg[0][15]_i_1__1_n_2\,
      GEA => \CLKS[0].test_clk_cntr_reg[0][8]_i_1__1_n_0\,
      GEB => \CLKS[0].test_clk_cntr_reg[0][9]_i_1__1_n_0\,
      GEC => \CLKS[0].test_clk_cntr_reg[0][10]_i_1__1_n_0\,
      GED => \CLKS[0].test_clk_cntr_reg[0][11]_i_1__1_n_0\,
      GEE => \CLKS[0].test_clk_cntr_reg[0][12]_i_1__1_n_0\,
      GEF => \CLKS[0].test_clk_cntr_reg[0][13]_i_1__1_n_0\,
      GEG => \CLKS[0].test_clk_cntr_reg[0][14]_i_1__1_n_0\,
      GEH => \CLKS[0].test_clk_cntr_reg[0][15]_i_1__1_n_0\,
      PROPA => \CLKS[0].test_clk_cntr_reg[0][8]_i_1__1_n_3\,
      PROPB => \CLKS[0].test_clk_cntr_reg[0][9]_i_1__1_n_3\,
      PROPC => \CLKS[0].test_clk_cntr_reg[0][10]_i_1__1_n_3\,
      PROPD => \CLKS[0].test_clk_cntr_reg[0][11]_i_1__1_n_3\,
      PROPE => \CLKS[0].test_clk_cntr_reg[0][12]_i_1__1_n_3\,
      PROPF => \CLKS[0].test_clk_cntr_reg[0][13]_i_1__1_n_3\,
      PROPG => \CLKS[0].test_clk_cntr_reg[0][14]_i_1__1_n_3\,
      PROPH => \CLKS[0].test_clk_cntr_reg[0][15]_i_1__1_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][11]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_cont_01,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1__1_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][11]_i_1__1_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(11)
    );
\CLKS[0].test_clk_cntr_reg[0][11]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][11]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(11),
      I4 => \CLKS[0].test_clk_cntr_reg[0][10]_i_1__1_n_2\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][11]_i_1__1_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][11]_i_1__1_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][11]_i_1__1_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][12]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_cont_01,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1__1_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][12]_i_1__1_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(12)
    );
\CLKS[0].test_clk_cntr_reg[0][12]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][12]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(12),
      I4 => \CLKS[0].test_clk_cntr_reg[0][10]_i_2__1_n_1\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][12]_i_1__1_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][12]_i_1__1_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][12]_i_1__1_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][13]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_cont_01,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1__1_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][13]_i_1__1_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(13)
    );
\CLKS[0].test_clk_cntr_reg[0][13]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][13]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(13),
      I4 => \CLKS[0].test_clk_cntr_reg[0][12]_i_1__1_n_2\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][13]_i_1__1_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][13]_i_1__1_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][13]_i_1__1_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][14]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_cont_01,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1__1_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][14]_i_1__1_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(14)
    );
\CLKS[0].test_clk_cntr_reg[0][14]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][14]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(14),
      I4 => \CLKS[0].test_clk_cntr_reg[0][10]_i_2__1_n_2\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][14]_i_1__1_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][14]_i_1__1_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][14]_i_1__1_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][15]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_cont_01,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1__1_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][15]_i_1__1_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(15)
    );
\CLKS[0].test_clk_cntr_reg[0][15]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][15]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(15),
      I4 => \CLKS[0].test_clk_cntr_reg[0][14]_i_1__1_n_2\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][15]_i_1__1_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][15]_i_1__1_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][15]_i_1__1_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][16]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_cont_01,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1__1_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][16]_i_1__1_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(16)
    );
\CLKS[0].test_clk_cntr_reg[0][16]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][16]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(16),
      I4 => \CLKS[0].test_clk_cntr_reg[0][10]_i_2__1_n_3\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][16]_i_1__1_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][16]_i_1__1_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][16]_i_1__1_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][17]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_cont_01,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1__1_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][17]_i_1__1_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(17)
    );
\CLKS[0].test_clk_cntr_reg[0][17]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][17]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(17),
      I4 => \CLKS[0].test_clk_cntr_reg[0][16]_i_1__1_n_2\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][17]_i_1__1_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][17]_i_1__1_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][17]_i_1__1_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][18]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_cont_01,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1__1_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][18]_i_1__1_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(18)
    );
\CLKS[0].test_clk_cntr_reg[0][18]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][18]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(18),
      I4 => \CLKS[0].test_clk_cntr_reg[0][18]_i_2__1_n_0\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][18]_i_1__1_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][18]_i_1__1_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][18]_i_1__1_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][18]_i_2__1\: unisim.vcomponents.LOOKAHEAD8
    generic map(
      LOOKB => "TRUE",
      LOOKD => "TRUE",
      LOOKF => "TRUE",
      LOOKH => "TRUE"
    )
        port map (
      CIN => \CLKS[0].test_clk_cntr_reg[0][10]_i_2__1_n_3\,
      COUTB => \CLKS[0].test_clk_cntr_reg[0][18]_i_2__1_n_0\,
      COUTD => \CLKS[0].test_clk_cntr_reg[0][18]_i_2__1_n_1\,
      COUTF => \CLKS[0].test_clk_cntr_reg[0][18]_i_2__1_n_2\,
      COUTH => \CLKS[0].test_clk_cntr_reg[0][18]_i_2__1_n_3\,
      CYA => \CLKS[0].test_clk_cntr_reg[0][16]_i_1__1_n_2\,
      CYB => \CLKS[0].test_clk_cntr_reg[0][17]_i_1__1_n_2\,
      CYC => \CLKS[0].test_clk_cntr_reg[0][18]_i_1__1_n_2\,
      CYD => \CLKS[0].test_clk_cntr_reg[0][19]_i_1__1_n_2\,
      CYE => \CLKS[0].test_clk_cntr_reg[0][20]_i_1__1_n_2\,
      CYF => \CLKS[0].test_clk_cntr_reg[0][21]_i_1__1_n_2\,
      CYG => \CLKS[0].test_clk_cntr_reg[0][22]_i_1__1_n_2\,
      CYH => \CLKS[0].test_clk_cntr_reg[0][18]_i_3__1_n_2\,
      GEA => \CLKS[0].test_clk_cntr_reg[0][16]_i_1__1_n_0\,
      GEB => \CLKS[0].test_clk_cntr_reg[0][17]_i_1__1_n_0\,
      GEC => \CLKS[0].test_clk_cntr_reg[0][18]_i_1__1_n_0\,
      GED => \CLKS[0].test_clk_cntr_reg[0][19]_i_1__1_n_0\,
      GEE => \CLKS[0].test_clk_cntr_reg[0][20]_i_1__1_n_0\,
      GEF => \CLKS[0].test_clk_cntr_reg[0][21]_i_1__1_n_0\,
      GEG => \CLKS[0].test_clk_cntr_reg[0][22]_i_1__1_n_0\,
      GEH => \CLKS[0].test_clk_cntr_reg[0][18]_i_3__1_n_0\,
      PROPA => \CLKS[0].test_clk_cntr_reg[0][16]_i_1__1_n_3\,
      PROPB => \CLKS[0].test_clk_cntr_reg[0][17]_i_1__1_n_3\,
      PROPC => \CLKS[0].test_clk_cntr_reg[0][18]_i_1__1_n_3\,
      PROPD => \CLKS[0].test_clk_cntr_reg[0][19]_i_1__1_n_3\,
      PROPE => \CLKS[0].test_clk_cntr_reg[0][20]_i_1__1_n_3\,
      PROPF => \CLKS[0].test_clk_cntr_reg[0][21]_i_1__1_n_3\,
      PROPG => \CLKS[0].test_clk_cntr_reg[0][22]_i_1__1_n_3\,
      PROPH => \CLKS[0].test_clk_cntr_reg[0][18]_i_3__1_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][18]_i_3__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"00000000FF000000"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][18]_i_3__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => '0',
      I4 => '0',
      O51 => \CLKS[0].test_clk_cntr_reg[0][18]_i_3__1_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][18]_i_3__1_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][18]_i_3__1_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][19]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_cont_01,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1__1_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][19]_i_1__1_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(19)
    );
\CLKS[0].test_clk_cntr_reg[0][19]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][19]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(19),
      I4 => \CLKS[0].test_clk_cntr_reg[0][18]_i_1__1_n_2\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][19]_i_1__1_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][19]_i_1__1_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][19]_i_1__1_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][1]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_cont_01,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1__1_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][1]_i_1__1_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(1)
    );
\CLKS[0].test_clk_cntr_reg[0][1]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][1]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(1),
      I4 => \CLKS[0].test_clk_cntr_reg[0][0]_i_2__1_n_2\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][1]_i_1__1_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][1]_i_1__1_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][1]_i_1__1_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][20]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_cont_01,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1__1_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][20]_i_1__1_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(20)
    );
\CLKS[0].test_clk_cntr_reg[0][20]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][20]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(20),
      I4 => \CLKS[0].test_clk_cntr_reg[0][18]_i_2__1_n_1\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][20]_i_1__1_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][20]_i_1__1_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][20]_i_1__1_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][21]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_cont_01,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1__1_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][21]_i_1__1_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(21)
    );
\CLKS[0].test_clk_cntr_reg[0][21]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][21]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(21),
      I4 => \CLKS[0].test_clk_cntr_reg[0][20]_i_1__1_n_2\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][21]_i_1__1_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][21]_i_1__1_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][21]_i_1__1_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][22]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_cont_01,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1__1_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][22]_i_1__1_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(22)
    );
\CLKS[0].test_clk_cntr_reg[0][22]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00FF0000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][22]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(22),
      I4 => \CLKS[0].test_clk_cntr_reg[0][18]_i_2__1_n_2\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][22]_i_1__1_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][22]_i_1__1_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][22]_i_1__1_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][2]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_cont_01,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1__1_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][2]_i_1__1_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(2)
    );
\CLKS[0].test_clk_cntr_reg[0][2]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][2]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(2),
      I4 => \CLKS[0].test_clk_cntr_reg[0][2]_i_2__1_n_0\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][2]_i_1__1_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][2]_i_1__1_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][2]_i_1__1_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][2]_i_2__1\: unisim.vcomponents.LOOKAHEAD8
    generic map(
      LOOKB => "FALSE",
      LOOKD => "TRUE",
      LOOKF => "TRUE",
      LOOKH => "TRUE"
    )
        port map (
      CIN => '0',
      COUTB => \CLKS[0].test_clk_cntr_reg[0][2]_i_2__1_n_0\,
      COUTD => \CLKS[0].test_clk_cntr_reg[0][2]_i_2__1_n_1\,
      COUTF => \CLKS[0].test_clk_cntr_reg[0][2]_i_2__1_n_2\,
      COUTH => \CLKS[0].test_clk_cntr_reg[0][2]_i_2__1_n_3\,
      CYA => \CLKS[0].test_clk_cntr_reg[0][0]_i_2__1_n_2\,
      CYB => \CLKS[0].test_clk_cntr_reg[0][1]_i_1__1_n_2\,
      CYC => \CLKS[0].test_clk_cntr_reg[0][2]_i_1__1_n_2\,
      CYD => \CLKS[0].test_clk_cntr_reg[0][3]_i_1__1_n_2\,
      CYE => \CLKS[0].test_clk_cntr_reg[0][4]_i_1__1_n_2\,
      CYF => \CLKS[0].test_clk_cntr_reg[0][5]_i_1__1_n_2\,
      CYG => \CLKS[0].test_clk_cntr_reg[0][6]_i_1__1_n_2\,
      CYH => \CLKS[0].test_clk_cntr_reg[0][7]_i_1__1_n_2\,
      GEA => \CLKS[0].test_clk_cntr_reg[0][0]_i_2__1_n_0\,
      GEB => \CLKS[0].test_clk_cntr_reg[0][1]_i_1__1_n_0\,
      GEC => \CLKS[0].test_clk_cntr_reg[0][2]_i_1__1_n_0\,
      GED => \CLKS[0].test_clk_cntr_reg[0][3]_i_1__1_n_0\,
      GEE => \CLKS[0].test_clk_cntr_reg[0][4]_i_1__1_n_0\,
      GEF => \CLKS[0].test_clk_cntr_reg[0][5]_i_1__1_n_0\,
      GEG => \CLKS[0].test_clk_cntr_reg[0][6]_i_1__1_n_0\,
      GEH => \CLKS[0].test_clk_cntr_reg[0][7]_i_1__1_n_0\,
      PROPA => \CLKS[0].test_clk_cntr_reg[0][0]_i_2__1_n_3\,
      PROPB => \CLKS[0].test_clk_cntr_reg[0][1]_i_1__1_n_3\,
      PROPC => \CLKS[0].test_clk_cntr_reg[0][2]_i_1__1_n_3\,
      PROPD => \CLKS[0].test_clk_cntr_reg[0][3]_i_1__1_n_3\,
      PROPE => \CLKS[0].test_clk_cntr_reg[0][4]_i_1__1_n_3\,
      PROPF => \CLKS[0].test_clk_cntr_reg[0][5]_i_1__1_n_3\,
      PROPG => \CLKS[0].test_clk_cntr_reg[0][6]_i_1__1_n_3\,
      PROPH => \CLKS[0].test_clk_cntr_reg[0][7]_i_1__1_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][3]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_cont_01,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1__1_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][3]_i_1__1_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(3)
    );
\CLKS[0].test_clk_cntr_reg[0][3]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][3]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(3),
      I4 => \CLKS[0].test_clk_cntr_reg[0][2]_i_1__1_n_2\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][3]_i_1__1_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][3]_i_1__1_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][3]_i_1__1_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][4]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_cont_01,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1__1_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][4]_i_1__1_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(4)
    );
\CLKS[0].test_clk_cntr_reg[0][4]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][4]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(4),
      I4 => \CLKS[0].test_clk_cntr_reg[0][2]_i_2__1_n_1\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][4]_i_1__1_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][4]_i_1__1_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][4]_i_1__1_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][5]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_cont_01,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1__1_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][5]_i_1__1_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(5)
    );
\CLKS[0].test_clk_cntr_reg[0][5]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][5]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(5),
      I4 => \CLKS[0].test_clk_cntr_reg[0][4]_i_1__1_n_2\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][5]_i_1__1_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][5]_i_1__1_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][5]_i_1__1_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][6]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_cont_01,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1__1_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][6]_i_1__1_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(6)
    );
\CLKS[0].test_clk_cntr_reg[0][6]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][6]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(6),
      I4 => \CLKS[0].test_clk_cntr_reg[0][2]_i_2__1_n_2\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][6]_i_1__1_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][6]_i_1__1_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][6]_i_1__1_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][7]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_cont_01,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1__1_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][7]_i_1__1_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(7)
    );
\CLKS[0].test_clk_cntr_reg[0][7]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][7]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(7),
      I4 => \CLKS[0].test_clk_cntr_reg[0][6]_i_1__1_n_2\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][7]_i_1__1_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][7]_i_1__1_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][7]_i_1__1_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][8]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_cont_01,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1__1_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][8]_i_1__1_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(8)
    );
\CLKS[0].test_clk_cntr_reg[0][8]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][8]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(8),
      I4 => \CLKS[0].test_clk_cntr_reg[0][2]_i_2__1_n_3\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][8]_i_1__1_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][8]_i_1__1_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][8]_i_1__1_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][9]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_cont_01,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1__1_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][9]_i_1__1_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(9)
    );
\CLKS[0].test_clk_cntr_reg[0][9]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][9]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(9),
      I4 => \CLKS[0].test_clk_cntr_reg[0][8]_i_1__1_n_2\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][9]_i_1__1_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][9]_i_1__1_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][9]_i_1__1_n_3\
    );
\CLKS[1].cdc_done\: entity work.\decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__9\
     port map (
      dest_clk => aclk_kernel_01,
      dest_out(0) => done_synced_1,
      src_clk => '0',
      src_in(0) => done(1)
    );
\CLKS[1].cdc_rst_cn0\: entity work.\decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__6\
     port map (
      dest_arst => rst_cnt_synced_1,
      dest_clk => aclk_kernel_01,
      src_arst => rst_cnt(1)
    );
\CLKS[1].cdc_test_clk0_cntr\: entity work.\decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__9\
     port map (
      dest_clk => aclk_freerun,
      dest_out(22 downto 0) => \^src_in\(22 downto 0),
      src_clk => '0',
      src_in(22 downto 0) => \CLKS[1].test_clk_cntr_reg[1]_1\(22 downto 0)
    );
\CLKS[1].test_clk_cntr[1][0]_i_1__0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => done_synced_1,
      O => \CLKS[1].test_clk_cntr[1][0]_i_1__0_n_0\
    );
\CLKS[1].test_clk_cntr_reg[1][0]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_01,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1__0_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][0]_i_2__0_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(0)
    );
\CLKS[1].test_clk_cntr_reg[1][0]_i_2__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FFFFFF00FF0000FF"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][0]_i_2__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(0),
      I4 => '0',
      O51 => \CLKS[1].test_clk_cntr_reg[1][0]_i_2__0_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][0]_i_2__0_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][0]_i_2__0_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][10]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_01,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1__0_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][10]_i_1__0_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(10)
    );
\CLKS[1].test_clk_cntr_reg[1][10]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][10]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(10),
      I4 => \CLKS[1].test_clk_cntr_reg[1][10]_i_2__0_n_0\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][10]_i_1__0_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][10]_i_1__0_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][10]_i_1__0_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][10]_i_2__0\: unisim.vcomponents.LOOKAHEAD8
    generic map(
      LOOKB => "TRUE",
      LOOKD => "TRUE",
      LOOKF => "TRUE",
      LOOKH => "TRUE"
    )
        port map (
      CIN => \CLKS[1].test_clk_cntr_reg[1][2]_i_2__0_n_3\,
      COUTB => \CLKS[1].test_clk_cntr_reg[1][10]_i_2__0_n_0\,
      COUTD => \CLKS[1].test_clk_cntr_reg[1][10]_i_2__0_n_1\,
      COUTF => \CLKS[1].test_clk_cntr_reg[1][10]_i_2__0_n_2\,
      COUTH => \CLKS[1].test_clk_cntr_reg[1][10]_i_2__0_n_3\,
      CYA => \CLKS[1].test_clk_cntr_reg[1][8]_i_1__0_n_2\,
      CYB => \CLKS[1].test_clk_cntr_reg[1][9]_i_1__0_n_2\,
      CYC => \CLKS[1].test_clk_cntr_reg[1][10]_i_1__0_n_2\,
      CYD => \CLKS[1].test_clk_cntr_reg[1][11]_i_1__0_n_2\,
      CYE => \CLKS[1].test_clk_cntr_reg[1][12]_i_1__0_n_2\,
      CYF => \CLKS[1].test_clk_cntr_reg[1][13]_i_1__0_n_2\,
      CYG => \CLKS[1].test_clk_cntr_reg[1][14]_i_1__0_n_2\,
      CYH => \CLKS[1].test_clk_cntr_reg[1][15]_i_1__0_n_2\,
      GEA => \CLKS[1].test_clk_cntr_reg[1][8]_i_1__0_n_0\,
      GEB => \CLKS[1].test_clk_cntr_reg[1][9]_i_1__0_n_0\,
      GEC => \CLKS[1].test_clk_cntr_reg[1][10]_i_1__0_n_0\,
      GED => \CLKS[1].test_clk_cntr_reg[1][11]_i_1__0_n_0\,
      GEE => \CLKS[1].test_clk_cntr_reg[1][12]_i_1__0_n_0\,
      GEF => \CLKS[1].test_clk_cntr_reg[1][13]_i_1__0_n_0\,
      GEG => \CLKS[1].test_clk_cntr_reg[1][14]_i_1__0_n_0\,
      GEH => \CLKS[1].test_clk_cntr_reg[1][15]_i_1__0_n_0\,
      PROPA => \CLKS[1].test_clk_cntr_reg[1][8]_i_1__0_n_3\,
      PROPB => \CLKS[1].test_clk_cntr_reg[1][9]_i_1__0_n_3\,
      PROPC => \CLKS[1].test_clk_cntr_reg[1][10]_i_1__0_n_3\,
      PROPD => \CLKS[1].test_clk_cntr_reg[1][11]_i_1__0_n_3\,
      PROPE => \CLKS[1].test_clk_cntr_reg[1][12]_i_1__0_n_3\,
      PROPF => \CLKS[1].test_clk_cntr_reg[1][13]_i_1__0_n_3\,
      PROPG => \CLKS[1].test_clk_cntr_reg[1][14]_i_1__0_n_3\,
      PROPH => \CLKS[1].test_clk_cntr_reg[1][15]_i_1__0_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][11]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_01,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1__0_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][11]_i_1__0_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(11)
    );
\CLKS[1].test_clk_cntr_reg[1][11]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][11]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(11),
      I4 => \CLKS[1].test_clk_cntr_reg[1][10]_i_1__0_n_2\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][11]_i_1__0_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][11]_i_1__0_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][11]_i_1__0_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][12]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_01,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1__0_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][12]_i_1__0_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(12)
    );
\CLKS[1].test_clk_cntr_reg[1][12]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][12]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(12),
      I4 => \CLKS[1].test_clk_cntr_reg[1][10]_i_2__0_n_1\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][12]_i_1__0_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][12]_i_1__0_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][12]_i_1__0_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][13]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_01,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1__0_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][13]_i_1__0_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(13)
    );
\CLKS[1].test_clk_cntr_reg[1][13]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][13]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(13),
      I4 => \CLKS[1].test_clk_cntr_reg[1][12]_i_1__0_n_2\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][13]_i_1__0_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][13]_i_1__0_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][13]_i_1__0_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][14]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_01,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1__0_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][14]_i_1__0_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(14)
    );
\CLKS[1].test_clk_cntr_reg[1][14]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][14]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(14),
      I4 => \CLKS[1].test_clk_cntr_reg[1][10]_i_2__0_n_2\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][14]_i_1__0_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][14]_i_1__0_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][14]_i_1__0_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][15]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_01,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1__0_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][15]_i_1__0_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(15)
    );
\CLKS[1].test_clk_cntr_reg[1][15]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][15]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(15),
      I4 => \CLKS[1].test_clk_cntr_reg[1][14]_i_1__0_n_2\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][15]_i_1__0_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][15]_i_1__0_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][15]_i_1__0_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][16]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_01,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1__0_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][16]_i_1__0_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(16)
    );
\CLKS[1].test_clk_cntr_reg[1][16]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][16]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(16),
      I4 => \CLKS[1].test_clk_cntr_reg[1][10]_i_2__0_n_3\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][16]_i_1__0_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][16]_i_1__0_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][16]_i_1__0_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][17]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_01,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1__0_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][17]_i_1__0_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(17)
    );
\CLKS[1].test_clk_cntr_reg[1][17]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][17]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(17),
      I4 => \CLKS[1].test_clk_cntr_reg[1][16]_i_1__0_n_2\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][17]_i_1__0_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][17]_i_1__0_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][17]_i_1__0_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][18]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_01,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1__0_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][18]_i_1__0_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(18)
    );
\CLKS[1].test_clk_cntr_reg[1][18]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][18]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(18),
      I4 => \CLKS[1].test_clk_cntr_reg[1][18]_i_2__0_n_0\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][18]_i_1__0_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][18]_i_1__0_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][18]_i_1__0_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][18]_i_2__0\: unisim.vcomponents.LOOKAHEAD8
    generic map(
      LOOKB => "TRUE",
      LOOKD => "TRUE",
      LOOKF => "TRUE",
      LOOKH => "TRUE"
    )
        port map (
      CIN => \CLKS[1].test_clk_cntr_reg[1][10]_i_2__0_n_3\,
      COUTB => \CLKS[1].test_clk_cntr_reg[1][18]_i_2__0_n_0\,
      COUTD => \CLKS[1].test_clk_cntr_reg[1][18]_i_2__0_n_1\,
      COUTF => \CLKS[1].test_clk_cntr_reg[1][18]_i_2__0_n_2\,
      COUTH => \CLKS[1].test_clk_cntr_reg[1][18]_i_2__0_n_3\,
      CYA => \CLKS[1].test_clk_cntr_reg[1][16]_i_1__0_n_2\,
      CYB => \CLKS[1].test_clk_cntr_reg[1][17]_i_1__0_n_2\,
      CYC => \CLKS[1].test_clk_cntr_reg[1][18]_i_1__0_n_2\,
      CYD => \CLKS[1].test_clk_cntr_reg[1][19]_i_1__0_n_2\,
      CYE => \CLKS[1].test_clk_cntr_reg[1][20]_i_1__0_n_2\,
      CYF => \CLKS[1].test_clk_cntr_reg[1][21]_i_1__0_n_2\,
      CYG => \CLKS[1].test_clk_cntr_reg[1][22]_i_1__0_n_2\,
      CYH => \CLKS[1].test_clk_cntr_reg[1][18]_i_3__0_n_2\,
      GEA => \CLKS[1].test_clk_cntr_reg[1][16]_i_1__0_n_0\,
      GEB => \CLKS[1].test_clk_cntr_reg[1][17]_i_1__0_n_0\,
      GEC => \CLKS[1].test_clk_cntr_reg[1][18]_i_1__0_n_0\,
      GED => \CLKS[1].test_clk_cntr_reg[1][19]_i_1__0_n_0\,
      GEE => \CLKS[1].test_clk_cntr_reg[1][20]_i_1__0_n_0\,
      GEF => \CLKS[1].test_clk_cntr_reg[1][21]_i_1__0_n_0\,
      GEG => \CLKS[1].test_clk_cntr_reg[1][22]_i_1__0_n_0\,
      GEH => \CLKS[1].test_clk_cntr_reg[1][18]_i_3__0_n_0\,
      PROPA => \CLKS[1].test_clk_cntr_reg[1][16]_i_1__0_n_3\,
      PROPB => \CLKS[1].test_clk_cntr_reg[1][17]_i_1__0_n_3\,
      PROPC => \CLKS[1].test_clk_cntr_reg[1][18]_i_1__0_n_3\,
      PROPD => \CLKS[1].test_clk_cntr_reg[1][19]_i_1__0_n_3\,
      PROPE => \CLKS[1].test_clk_cntr_reg[1][20]_i_1__0_n_3\,
      PROPF => \CLKS[1].test_clk_cntr_reg[1][21]_i_1__0_n_3\,
      PROPG => \CLKS[1].test_clk_cntr_reg[1][22]_i_1__0_n_3\,
      PROPH => \CLKS[1].test_clk_cntr_reg[1][18]_i_3__0_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][18]_i_3__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"00000000FF000000"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][18]_i_3__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => '0',
      I4 => '0',
      O51 => \CLKS[1].test_clk_cntr_reg[1][18]_i_3__0_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][18]_i_3__0_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][18]_i_3__0_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][19]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_01,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1__0_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][19]_i_1__0_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(19)
    );
\CLKS[1].test_clk_cntr_reg[1][19]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][19]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(19),
      I4 => \CLKS[1].test_clk_cntr_reg[1][18]_i_1__0_n_2\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][19]_i_1__0_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][19]_i_1__0_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][19]_i_1__0_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][1]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_01,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1__0_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][1]_i_1__0_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(1)
    );
\CLKS[1].test_clk_cntr_reg[1][1]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][1]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(1),
      I4 => \CLKS[1].test_clk_cntr_reg[1][0]_i_2__0_n_2\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][1]_i_1__0_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][1]_i_1__0_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][1]_i_1__0_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][20]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_01,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1__0_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][20]_i_1__0_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(20)
    );
\CLKS[1].test_clk_cntr_reg[1][20]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][20]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(20),
      I4 => \CLKS[1].test_clk_cntr_reg[1][18]_i_2__0_n_1\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][20]_i_1__0_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][20]_i_1__0_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][20]_i_1__0_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][21]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_01,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1__0_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][21]_i_1__0_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(21)
    );
\CLKS[1].test_clk_cntr_reg[1][21]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][21]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(21),
      I4 => \CLKS[1].test_clk_cntr_reg[1][20]_i_1__0_n_2\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][21]_i_1__0_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][21]_i_1__0_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][21]_i_1__0_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][22]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_01,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1__0_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][22]_i_1__0_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(22)
    );
\CLKS[1].test_clk_cntr_reg[1][22]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00FF0000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][22]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(22),
      I4 => \CLKS[1].test_clk_cntr_reg[1][18]_i_2__0_n_2\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][22]_i_1__0_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][22]_i_1__0_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][22]_i_1__0_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][2]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_01,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1__0_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][2]_i_1__0_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(2)
    );
\CLKS[1].test_clk_cntr_reg[1][2]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][2]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(2),
      I4 => \CLKS[1].test_clk_cntr_reg[1][2]_i_2__0_n_0\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][2]_i_1__0_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][2]_i_1__0_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][2]_i_1__0_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][2]_i_2__0\: unisim.vcomponents.LOOKAHEAD8
    generic map(
      LOOKB => "FALSE",
      LOOKD => "TRUE",
      LOOKF => "TRUE",
      LOOKH => "TRUE"
    )
        port map (
      CIN => '0',
      COUTB => \CLKS[1].test_clk_cntr_reg[1][2]_i_2__0_n_0\,
      COUTD => \CLKS[1].test_clk_cntr_reg[1][2]_i_2__0_n_1\,
      COUTF => \CLKS[1].test_clk_cntr_reg[1][2]_i_2__0_n_2\,
      COUTH => \CLKS[1].test_clk_cntr_reg[1][2]_i_2__0_n_3\,
      CYA => \CLKS[1].test_clk_cntr_reg[1][0]_i_2__0_n_2\,
      CYB => \CLKS[1].test_clk_cntr_reg[1][1]_i_1__0_n_2\,
      CYC => \CLKS[1].test_clk_cntr_reg[1][2]_i_1__0_n_2\,
      CYD => \CLKS[1].test_clk_cntr_reg[1][3]_i_1__0_n_2\,
      CYE => \CLKS[1].test_clk_cntr_reg[1][4]_i_1__0_n_2\,
      CYF => \CLKS[1].test_clk_cntr_reg[1][5]_i_1__0_n_2\,
      CYG => \CLKS[1].test_clk_cntr_reg[1][6]_i_1__0_n_2\,
      CYH => \CLKS[1].test_clk_cntr_reg[1][7]_i_1__0_n_2\,
      GEA => \CLKS[1].test_clk_cntr_reg[1][0]_i_2__0_n_0\,
      GEB => \CLKS[1].test_clk_cntr_reg[1][1]_i_1__0_n_0\,
      GEC => \CLKS[1].test_clk_cntr_reg[1][2]_i_1__0_n_0\,
      GED => \CLKS[1].test_clk_cntr_reg[1][3]_i_1__0_n_0\,
      GEE => \CLKS[1].test_clk_cntr_reg[1][4]_i_1__0_n_0\,
      GEF => \CLKS[1].test_clk_cntr_reg[1][5]_i_1__0_n_0\,
      GEG => \CLKS[1].test_clk_cntr_reg[1][6]_i_1__0_n_0\,
      GEH => \CLKS[1].test_clk_cntr_reg[1][7]_i_1__0_n_0\,
      PROPA => \CLKS[1].test_clk_cntr_reg[1][0]_i_2__0_n_3\,
      PROPB => \CLKS[1].test_clk_cntr_reg[1][1]_i_1__0_n_3\,
      PROPC => \CLKS[1].test_clk_cntr_reg[1][2]_i_1__0_n_3\,
      PROPD => \CLKS[1].test_clk_cntr_reg[1][3]_i_1__0_n_3\,
      PROPE => \CLKS[1].test_clk_cntr_reg[1][4]_i_1__0_n_3\,
      PROPF => \CLKS[1].test_clk_cntr_reg[1][5]_i_1__0_n_3\,
      PROPG => \CLKS[1].test_clk_cntr_reg[1][6]_i_1__0_n_3\,
      PROPH => \CLKS[1].test_clk_cntr_reg[1][7]_i_1__0_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][3]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_01,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1__0_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][3]_i_1__0_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(3)
    );
\CLKS[1].test_clk_cntr_reg[1][3]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][3]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(3),
      I4 => \CLKS[1].test_clk_cntr_reg[1][2]_i_1__0_n_2\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][3]_i_1__0_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][3]_i_1__0_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][3]_i_1__0_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][4]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_01,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1__0_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][4]_i_1__0_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(4)
    );
\CLKS[1].test_clk_cntr_reg[1][4]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][4]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(4),
      I4 => \CLKS[1].test_clk_cntr_reg[1][2]_i_2__0_n_1\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][4]_i_1__0_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][4]_i_1__0_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][4]_i_1__0_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][5]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_01,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1__0_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][5]_i_1__0_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(5)
    );
\CLKS[1].test_clk_cntr_reg[1][5]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][5]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(5),
      I4 => \CLKS[1].test_clk_cntr_reg[1][4]_i_1__0_n_2\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][5]_i_1__0_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][5]_i_1__0_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][5]_i_1__0_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][6]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_01,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1__0_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][6]_i_1__0_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(6)
    );
\CLKS[1].test_clk_cntr_reg[1][6]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][6]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(6),
      I4 => \CLKS[1].test_clk_cntr_reg[1][2]_i_2__0_n_2\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][6]_i_1__0_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][6]_i_1__0_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][6]_i_1__0_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][7]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_01,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1__0_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][7]_i_1__0_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(7)
    );
\CLKS[1].test_clk_cntr_reg[1][7]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][7]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(7),
      I4 => \CLKS[1].test_clk_cntr_reg[1][6]_i_1__0_n_2\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][7]_i_1__0_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][7]_i_1__0_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][7]_i_1__0_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][8]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_01,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1__0_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][8]_i_1__0_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(8)
    );
\CLKS[1].test_clk_cntr_reg[1][8]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][8]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(8),
      I4 => \CLKS[1].test_clk_cntr_reg[1][2]_i_2__0_n_3\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][8]_i_1__0_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][8]_i_1__0_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][8]_i_1__0_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][9]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_01,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1__0_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][9]_i_1__0_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(9)
    );
\CLKS[1].test_clk_cntr_reg[1][9]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][9]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(9),
      I4 => \CLKS[1].test_clk_cntr_reg[1][8]_i_1__0_n_2\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][9]_i_1__0_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][9]_i_1__0_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][9]_i_1__0_n_3\
    );
\done_ref_i_i_1__0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^src_in\(64),
      O => \done_ref_i_i_1__0_n_0\
    );
\done_ref_i_i_2__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0002000000000000"
    )
        port map (
      I0 => \done_ref_i_i_3__0_n_0\,
      I1 => \^src_in\(49),
      I2 => \^src_in\(48),
      I3 => \^src_in\(51),
      I4 => \^src_in\(50),
      I5 => \done_ref_i_i_4__0_n_0\,
      O => \done_ref_i_i_2__0_n_0\
    );
\done_ref_i_i_3__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000100000000"
    )
        port map (
      I0 => \^src_in\(60),
      I1 => \^src_in\(61),
      I2 => \^src_in\(58),
      I3 => \^src_in\(59),
      I4 => \^src_in\(62),
      I5 => \^src_in\(63),
      O => \done_ref_i_i_3__0_n_0\
    );
\done_ref_i_i_4__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000100000000000"
    )
        port map (
      I0 => \^src_in\(54),
      I1 => \^src_in\(55),
      I2 => \^src_in\(52),
      I3 => \^src_in\(53),
      I4 => \^src_in\(56),
      I5 => \^src_in\(57),
      O => \done_ref_i_i_4__0_n_0\
    );
done_ref_i_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => \done_ref_i_i_1__0_n_0\,
      D => \done_ref_i_i_2__0_n_0\,
      Q => \^src_in\(64),
      R => rst_cnt_ref
    );
\done_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => \done_ref_i_i_1__0_n_0\,
      D => \done_ref_i_i_2__0_n_0\,
      Q => done(0),
      R => rst_cnt_ref
    );
\done_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => \done_ref_i_i_1__0_n_0\,
      D => \done_ref_i_i_2__0_n_0\,
      Q => done(1),
      R => rst_cnt_ref
    );
\done_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => \done_ref_i_i_1__0_n_0\,
      D => \done_ref_i_i_2__0_n_0\,
      Q => done(2),
      R => rst_cnt_ref
    );
\done_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => \done_ref_i_i_1__0_n_0\,
      D => \done_ref_i_i_2__0_n_0\,
      Q => done(3),
      R => rst_cnt_ref
    );
\genblk1[1].cdc_freq_cntr_kernel_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8000"
    )
        port map (
      I0 => \genblk1[1].cdc_freq_cntr_kernel_i_3_n_0\,
      I1 => \genblk1[1].cdc_freq_cntr_kernel_i_4_n_0\,
      I2 => \genblk1[1].cdc_freq_cntr_kernel_i_5_n_0\,
      I3 => \genblk1[1].cdc_freq_cntr_kernel_i_6_n_0\,
      O => \^src_in\(47)
    );
\genblk1[1].cdc_freq_cntr_kernel_i_10\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"80000000"
    )
        port map (
      I0 => \^src_in\(0),
      I1 => \^src_in\(1),
      I2 => \^src_in\(2),
      I3 => \^src_in\(4),
      I4 => \^src_in\(3),
      O => \genblk1[1].cdc_freq_cntr_kernel_i_10_n_0\
    );
\genblk1[1].cdc_freq_cntr_kernel_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8000"
    )
        port map (
      I0 => \genblk1[1].cdc_freq_cntr_kernel_i_7_n_0\,
      I1 => \genblk1[1].cdc_freq_cntr_kernel_i_8_n_0\,
      I2 => \genblk1[1].cdc_freq_cntr_kernel_i_9_n_0\,
      I3 => \genblk1[1].cdc_freq_cntr_kernel_i_10_n_0\,
      O => \^src_in\(23)
    );
\genblk1[1].cdc_freq_cntr_kernel_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8000000000000000"
    )
        port map (
      I0 => \^src_in\(37),
      I1 => \^src_in\(38),
      I2 => \^src_in\(35),
      I3 => \^src_in\(36),
      I4 => \^src_in\(40),
      I5 => \^src_in\(39),
      O => \genblk1[1].cdc_freq_cntr_kernel_i_3_n_0\
    );
\genblk1[1].cdc_freq_cntr_kernel_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8000000000000000"
    )
        port map (
      I0 => \^src_in\(43),
      I1 => \^src_in\(44),
      I2 => \^src_in\(41),
      I3 => \^src_in\(42),
      I4 => \^src_in\(46),
      I5 => \^src_in\(45),
      O => \genblk1[1].cdc_freq_cntr_kernel_i_4_n_0\
    );
\genblk1[1].cdc_freq_cntr_kernel_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8000000000000000"
    )
        port map (
      I0 => \^src_in\(31),
      I1 => \^src_in\(32),
      I2 => \^src_in\(29),
      I3 => \^src_in\(30),
      I4 => \^src_in\(34),
      I5 => \^src_in\(33),
      O => \genblk1[1].cdc_freq_cntr_kernel_i_5_n_0\
    );
\genblk1[1].cdc_freq_cntr_kernel_i_6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"80000000"
    )
        port map (
      I0 => \^src_in\(24),
      I1 => \^src_in\(25),
      I2 => \^src_in\(26),
      I3 => \^src_in\(28),
      I4 => \^src_in\(27),
      O => \genblk1[1].cdc_freq_cntr_kernel_i_6_n_0\
    );
\genblk1[1].cdc_freq_cntr_kernel_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8000000000000000"
    )
        port map (
      I0 => \^src_in\(13),
      I1 => \^src_in\(14),
      I2 => \^src_in\(11),
      I3 => \^src_in\(12),
      I4 => \^src_in\(16),
      I5 => \^src_in\(15),
      O => \genblk1[1].cdc_freq_cntr_kernel_i_7_n_0\
    );
\genblk1[1].cdc_freq_cntr_kernel_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8000000000000000"
    )
        port map (
      I0 => \^src_in\(19),
      I1 => \^src_in\(20),
      I2 => \^src_in\(17),
      I3 => \^src_in\(18),
      I4 => \^src_in\(22),
      I5 => \^src_in\(21),
      O => \genblk1[1].cdc_freq_cntr_kernel_i_8_n_0\
    );
\genblk1[1].cdc_freq_cntr_kernel_i_9\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8000000000000000"
    )
        port map (
      I0 => \^src_in\(7),
      I1 => \^src_in\(8),
      I2 => \^src_in\(5),
      I3 => \^src_in\(6),
      I4 => \^src_in\(10),
      I5 => \^src_in\(9),
      O => \genblk1[1].cdc_freq_cntr_kernel_i_9_n_0\
    );
\ref_clk_cntr_i[0]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"21"
    )
        port map (
      I0 => \^src_in\(48),
      I1 => rst_cnt_ref,
      I2 => \^src_in\(64),
      O => \ref_clk_cntr_i[0]_i_1__0_n_0\
    );
\ref_clk_cntr_i_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => '1',
      D => \ref_clk_cntr_i[0]_i_1__0_n_0\,
      Q => \^src_in\(48),
      R => '0'
    );
\ref_clk_cntr_i_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => \done_ref_i_i_1__0_n_0\,
      D => p_0_in(10),
      Q => \^src_in\(58),
      R => rst_cnt_ref
    );
\ref_clk_cntr_i_reg[10]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \ref_clk_cntr_i_reg[10]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \^src_in\(58),
      I4 => \ref_clk_cntr_i_reg[9]_i_1__0_n_2\,
      O51 => p_0_in(10),
      O52 => \ref_clk_cntr_i_reg[10]_i_1__0_n_2\,
      PROP => \ref_clk_cntr_i_reg[10]_i_1__0_n_3\
    );
\ref_clk_cntr_i_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => \done_ref_i_i_1__0_n_0\,
      D => p_0_in(11),
      Q => \^src_in\(59),
      R => rst_cnt_ref
    );
\ref_clk_cntr_i_reg[11]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \ref_clk_cntr_i_reg[11]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \^src_in\(59),
      I4 => \ref_clk_cntr_i_reg[15]_i_2__0_n_0\,
      O51 => p_0_in(11),
      O52 => \ref_clk_cntr_i_reg[11]_i_1__0_n_2\,
      PROP => \ref_clk_cntr_i_reg[11]_i_1__0_n_3\
    );
\ref_clk_cntr_i_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => \done_ref_i_i_1__0_n_0\,
      D => p_0_in(12),
      Q => \^src_in\(60),
      R => rst_cnt_ref
    );
\ref_clk_cntr_i_reg[12]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \ref_clk_cntr_i_reg[12]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \^src_in\(60),
      I4 => \ref_clk_cntr_i_reg[11]_i_1__0_n_2\,
      O51 => p_0_in(12),
      O52 => \ref_clk_cntr_i_reg[12]_i_1__0_n_2\,
      PROP => \ref_clk_cntr_i_reg[12]_i_1__0_n_3\
    );
\ref_clk_cntr_i_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => \done_ref_i_i_1__0_n_0\,
      D => p_0_in(13),
      Q => \^src_in\(61),
      R => rst_cnt_ref
    );
\ref_clk_cntr_i_reg[13]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \ref_clk_cntr_i_reg[13]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \^src_in\(61),
      I4 => \ref_clk_cntr_i_reg[15]_i_2__0_n_1\,
      O51 => p_0_in(13),
      O52 => \ref_clk_cntr_i_reg[13]_i_1__0_n_2\,
      PROP => \ref_clk_cntr_i_reg[13]_i_1__0_n_3\
    );
\ref_clk_cntr_i_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => \done_ref_i_i_1__0_n_0\,
      D => p_0_in(14),
      Q => \^src_in\(62),
      R => rst_cnt_ref
    );
\ref_clk_cntr_i_reg[14]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \ref_clk_cntr_i_reg[14]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \^src_in\(62),
      I4 => \ref_clk_cntr_i_reg[13]_i_1__0_n_2\,
      O51 => p_0_in(14),
      O52 => \ref_clk_cntr_i_reg[14]_i_1__0_n_2\,
      PROP => \ref_clk_cntr_i_reg[14]_i_1__0_n_3\
    );
\ref_clk_cntr_i_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => \done_ref_i_i_1__0_n_0\,
      D => p_0_in(15),
      Q => \^src_in\(63),
      R => rst_cnt_ref
    );
\ref_clk_cntr_i_reg[15]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00FF0000FFFF00"
    )
        port map (
      GE => \ref_clk_cntr_i_reg[15]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \^src_in\(63),
      I4 => \ref_clk_cntr_i_reg[15]_i_2__0_n_2\,
      O51 => p_0_in(15),
      O52 => \ref_clk_cntr_i_reg[15]_i_1__0_n_2\,
      PROP => \ref_clk_cntr_i_reg[15]_i_1__0_n_3\
    );
\ref_clk_cntr_i_reg[15]_i_2__0\: unisim.vcomponents.LOOKAHEAD8
    generic map(
      LOOKB => "TRUE",
      LOOKD => "TRUE",
      LOOKF => "TRUE",
      LOOKH => "TRUE"
    )
        port map (
      CIN => \ref_clk_cntr_i_reg[9]_i_2__0_n_3\,
      COUTB => \ref_clk_cntr_i_reg[15]_i_2__0_n_0\,
      COUTD => \ref_clk_cntr_i_reg[15]_i_2__0_n_1\,
      COUTF => \ref_clk_cntr_i_reg[15]_i_2__0_n_2\,
      COUTH => \ref_clk_cntr_i_reg[15]_i_2__0_n_3\,
      CYA => \ref_clk_cntr_i_reg[9]_i_1__0_n_2\,
      CYB => \ref_clk_cntr_i_reg[10]_i_1__0_n_2\,
      CYC => \ref_clk_cntr_i_reg[11]_i_1__0_n_2\,
      CYD => \ref_clk_cntr_i_reg[12]_i_1__0_n_2\,
      CYE => \ref_clk_cntr_i_reg[13]_i_1__0_n_2\,
      CYF => \ref_clk_cntr_i_reg[14]_i_1__0_n_2\,
      CYG => \ref_clk_cntr_i_reg[15]_i_1__0_n_2\,
      CYH => \ref_clk_cntr_i_reg[15]_i_3__0_n_2\,
      GEA => \ref_clk_cntr_i_reg[9]_i_1__0_n_0\,
      GEB => \ref_clk_cntr_i_reg[10]_i_1__0_n_0\,
      GEC => \ref_clk_cntr_i_reg[11]_i_1__0_n_0\,
      GED => \ref_clk_cntr_i_reg[12]_i_1__0_n_0\,
      GEE => \ref_clk_cntr_i_reg[13]_i_1__0_n_0\,
      GEF => \ref_clk_cntr_i_reg[14]_i_1__0_n_0\,
      GEG => \ref_clk_cntr_i_reg[15]_i_1__0_n_0\,
      GEH => \ref_clk_cntr_i_reg[15]_i_3__0_n_0\,
      PROPA => \ref_clk_cntr_i_reg[9]_i_1__0_n_3\,
      PROPB => \ref_clk_cntr_i_reg[10]_i_1__0_n_3\,
      PROPC => \ref_clk_cntr_i_reg[11]_i_1__0_n_3\,
      PROPD => \ref_clk_cntr_i_reg[12]_i_1__0_n_3\,
      PROPE => \ref_clk_cntr_i_reg[13]_i_1__0_n_3\,
      PROPF => \ref_clk_cntr_i_reg[14]_i_1__0_n_3\,
      PROPG => \ref_clk_cntr_i_reg[15]_i_1__0_n_3\,
      PROPH => \ref_clk_cntr_i_reg[15]_i_3__0_n_3\
    );
\ref_clk_cntr_i_reg[15]_i_3__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"00000000FF000000"
    )
        port map (
      GE => \ref_clk_cntr_i_reg[15]_i_3__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => '0',
      I4 => '0',
      O51 => \ref_clk_cntr_i_reg[15]_i_3__0_n_1\,
      O52 => \ref_clk_cntr_i_reg[15]_i_3__0_n_2\,
      PROP => \ref_clk_cntr_i_reg[15]_i_3__0_n_3\
    );
\ref_clk_cntr_i_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => \done_ref_i_i_1__0_n_0\,
      D => p_0_in(1),
      Q => \^src_in\(49),
      R => rst_cnt_ref
    );
\ref_clk_cntr_i_reg[1]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \ref_clk_cntr_i_reg[1]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \^src_in\(49),
      I4 => \^src_in\(48),
      O51 => p_0_in(1),
      O52 => \ref_clk_cntr_i_reg[1]_i_1__0_n_2\,
      PROP => \ref_clk_cntr_i_reg[1]_i_1__0_n_3\
    );
\ref_clk_cntr_i_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => \done_ref_i_i_1__0_n_0\,
      D => p_0_in(2),
      Q => \^src_in\(50),
      R => rst_cnt_ref
    );
\ref_clk_cntr_i_reg[2]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \ref_clk_cntr_i_reg[2]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \^src_in\(50),
      I4 => \ref_clk_cntr_i_reg[1]_i_1__0_n_2\,
      O51 => p_0_in(2),
      O52 => \ref_clk_cntr_i_reg[2]_i_1__0_n_2\,
      PROP => \ref_clk_cntr_i_reg[2]_i_1__0_n_3\
    );
\ref_clk_cntr_i_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => \done_ref_i_i_1__0_n_0\,
      D => p_0_in(3),
      Q => \^src_in\(51),
      R => rst_cnt_ref
    );
\ref_clk_cntr_i_reg[3]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \ref_clk_cntr_i_reg[3]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \^src_in\(51),
      I4 => \ref_clk_cntr_i_reg[9]_i_2__0_n_0\,
      O51 => p_0_in(3),
      O52 => \ref_clk_cntr_i_reg[3]_i_1__0_n_2\,
      PROP => \ref_clk_cntr_i_reg[3]_i_1__0_n_3\
    );
\ref_clk_cntr_i_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => \done_ref_i_i_1__0_n_0\,
      D => p_0_in(4),
      Q => \^src_in\(52),
      R => rst_cnt_ref
    );
\ref_clk_cntr_i_reg[4]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \ref_clk_cntr_i_reg[4]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \^src_in\(52),
      I4 => \ref_clk_cntr_i_reg[3]_i_1__0_n_2\,
      O51 => p_0_in(4),
      O52 => \ref_clk_cntr_i_reg[4]_i_1__0_n_2\,
      PROP => \ref_clk_cntr_i_reg[4]_i_1__0_n_3\
    );
\ref_clk_cntr_i_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => \done_ref_i_i_1__0_n_0\,
      D => p_0_in(5),
      Q => \^src_in\(53),
      R => rst_cnt_ref
    );
\ref_clk_cntr_i_reg[5]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \ref_clk_cntr_i_reg[5]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \^src_in\(53),
      I4 => \ref_clk_cntr_i_reg[9]_i_2__0_n_1\,
      O51 => p_0_in(5),
      O52 => \ref_clk_cntr_i_reg[5]_i_1__0_n_2\,
      PROP => \ref_clk_cntr_i_reg[5]_i_1__0_n_3\
    );
\ref_clk_cntr_i_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => \done_ref_i_i_1__0_n_0\,
      D => p_0_in(6),
      Q => \^src_in\(54),
      R => rst_cnt_ref
    );
\ref_clk_cntr_i_reg[6]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \ref_clk_cntr_i_reg[6]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \^src_in\(54),
      I4 => \ref_clk_cntr_i_reg[5]_i_1__0_n_2\,
      O51 => p_0_in(6),
      O52 => \ref_clk_cntr_i_reg[6]_i_1__0_n_2\,
      PROP => \ref_clk_cntr_i_reg[6]_i_1__0_n_3\
    );
\ref_clk_cntr_i_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => \done_ref_i_i_1__0_n_0\,
      D => p_0_in(7),
      Q => \^src_in\(55),
      R => rst_cnt_ref
    );
\ref_clk_cntr_i_reg[7]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \ref_clk_cntr_i_reg[7]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \^src_in\(55),
      I4 => \ref_clk_cntr_i_reg[9]_i_2__0_n_2\,
      O51 => p_0_in(7),
      O52 => \ref_clk_cntr_i_reg[7]_i_1__0_n_2\,
      PROP => \ref_clk_cntr_i_reg[7]_i_1__0_n_3\
    );
\ref_clk_cntr_i_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => \done_ref_i_i_1__0_n_0\,
      D => p_0_in(8),
      Q => \^src_in\(56),
      R => rst_cnt_ref
    );
\ref_clk_cntr_i_reg[8]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \ref_clk_cntr_i_reg[8]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \^src_in\(56),
      I4 => \ref_clk_cntr_i_reg[7]_i_1__0_n_2\,
      O51 => p_0_in(8),
      O52 => \ref_clk_cntr_i_reg[8]_i_1__0_n_2\,
      PROP => \ref_clk_cntr_i_reg[8]_i_1__0_n_3\
    );
\ref_clk_cntr_i_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => \done_ref_i_i_1__0_n_0\,
      D => p_0_in(9),
      Q => \^src_in\(57),
      R => rst_cnt_ref
    );
\ref_clk_cntr_i_reg[9]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \ref_clk_cntr_i_reg[9]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \^src_in\(57),
      I4 => \ref_clk_cntr_i_reg[9]_i_2__0_n_3\,
      O51 => p_0_in(9),
      O52 => \ref_clk_cntr_i_reg[9]_i_1__0_n_2\,
      PROP => \ref_clk_cntr_i_reg[9]_i_1__0_n_3\
    );
\ref_clk_cntr_i_reg[9]_i_2__0\: unisim.vcomponents.LOOKAHEAD8
    generic map(
      LOOKB => "FALSE",
      LOOKD => "TRUE",
      LOOKF => "TRUE",
      LOOKH => "TRUE"
    )
        port map (
      CIN => \^src_in\(48),
      COUTB => \ref_clk_cntr_i_reg[9]_i_2__0_n_0\,
      COUTD => \ref_clk_cntr_i_reg[9]_i_2__0_n_1\,
      COUTF => \ref_clk_cntr_i_reg[9]_i_2__0_n_2\,
      COUTH => \ref_clk_cntr_i_reg[9]_i_2__0_n_3\,
      CYA => \ref_clk_cntr_i_reg[1]_i_1__0_n_2\,
      CYB => \ref_clk_cntr_i_reg[2]_i_1__0_n_2\,
      CYC => \ref_clk_cntr_i_reg[3]_i_1__0_n_2\,
      CYD => \ref_clk_cntr_i_reg[4]_i_1__0_n_2\,
      CYE => \ref_clk_cntr_i_reg[5]_i_1__0_n_2\,
      CYF => \ref_clk_cntr_i_reg[6]_i_1__0_n_2\,
      CYG => \ref_clk_cntr_i_reg[7]_i_1__0_n_2\,
      CYH => \ref_clk_cntr_i_reg[8]_i_1__0_n_2\,
      GEA => \ref_clk_cntr_i_reg[1]_i_1__0_n_0\,
      GEB => \ref_clk_cntr_i_reg[2]_i_1__0_n_0\,
      GEC => \ref_clk_cntr_i_reg[3]_i_1__0_n_0\,
      GED => \ref_clk_cntr_i_reg[4]_i_1__0_n_0\,
      GEE => \ref_clk_cntr_i_reg[5]_i_1__0_n_0\,
      GEF => \ref_clk_cntr_i_reg[6]_i_1__0_n_0\,
      GEG => \ref_clk_cntr_i_reg[7]_i_1__0_n_0\,
      GEH => \ref_clk_cntr_i_reg[8]_i_1__0_n_0\,
      PROPA => \ref_clk_cntr_i_reg[1]_i_1__0_n_3\,
      PROPB => \ref_clk_cntr_i_reg[2]_i_1__0_n_3\,
      PROPC => \ref_clk_cntr_i_reg[3]_i_1__0_n_3\,
      PROPD => \ref_clk_cntr_i_reg[4]_i_1__0_n_3\,
      PROPE => \ref_clk_cntr_i_reg[5]_i_1__0_n_3\,
      PROPF => \ref_clk_cntr_i_reg[6]_i_1__0_n_3\,
      PROPG => \ref_clk_cntr_i_reg[7]_i_1__0_n_3\,
      PROPH => \ref_clk_cntr_i_reg[8]_i_1__0_n_3\
    );
\rst_cnt_ref_i_1__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => dest_arst,
      I1 => \rst_cnt_reg[0]_0\,
      O => rst_cnt_c
    );
rst_cnt_ref_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => '1',
      D => rst_cnt_c,
      Q => rst_cnt_ref,
      R => '0'
    );
\rst_cnt_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => '1',
      D => rst_cnt_c,
      Q => rst_cnt(0),
      R => '0'
    );
\rst_cnt_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => '1',
      D => rst_cnt_c,
      Q => rst_cnt(1),
      R => '0'
    );
\rst_cnt_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => '1',
      D => rst_cnt_c,
      Q => rst_cnt(2),
      R => '0'
    );
\rst_cnt_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => '1',
      D => rst_cnt_c,
      Q => rst_cnt(3),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_shell_utils_ucc_v1_0_0_frequency_counter__parameterized0\ is
  port (
    src_in : out STD_LOGIC_VECTOR ( 64 downto 0 );
    aclk_ctrl : in STD_LOGIC;
    aclk_freerun : in STD_LOGIC;
    aclk_pcie : in STD_LOGIC;
    dest_arst : in STD_LOGIC;
    \rst_cnt_reg[0]_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_shell_utils_ucc_v1_0_0_frequency_counter__parameterized0\ : entity is "shell_utils_ucc_v1_0_0_frequency_counter";
end \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_shell_utils_ucc_v1_0_0_frequency_counter__parameterized0\;

architecture STRUCTURE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_shell_utils_ucc_v1_0_0_frequency_counter__parameterized0\ is
  signal \CLKS[0].test_clk_cntr[0][0]_i_1_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][0]_i_2_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][0]_i_2_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][0]_i_2_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][0]_i_2_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][10]_i_1_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][10]_i_1_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][10]_i_1_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][10]_i_1_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][10]_i_2_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][10]_i_2_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][10]_i_2_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][10]_i_2_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][11]_i_1_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][11]_i_1_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][11]_i_1_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][11]_i_1_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][12]_i_1_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][12]_i_1_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][12]_i_1_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][12]_i_1_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][13]_i_1_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][13]_i_1_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][13]_i_1_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][13]_i_1_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][14]_i_1_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][14]_i_1_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][14]_i_1_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][14]_i_1_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][15]_i_1_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][15]_i_1_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][15]_i_1_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][15]_i_1_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][16]_i_1_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][16]_i_1_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][16]_i_1_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][16]_i_1_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][17]_i_1_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][17]_i_1_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][17]_i_1_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][17]_i_1_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][18]_i_1_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][18]_i_1_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][18]_i_1_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][18]_i_1_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][18]_i_2_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][18]_i_2_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][18]_i_2_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][18]_i_2_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][18]_i_3_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][18]_i_3_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][18]_i_3_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][18]_i_3_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][19]_i_1_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][19]_i_1_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][19]_i_1_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][19]_i_1_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][1]_i_1_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][1]_i_1_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][1]_i_1_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][1]_i_1_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][20]_i_1_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][20]_i_1_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][20]_i_1_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][20]_i_1_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][21]_i_1_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][21]_i_1_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][21]_i_1_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][21]_i_1_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][22]_i_1_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][22]_i_1_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][22]_i_1_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][22]_i_1_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][2]_i_1_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][2]_i_1_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][2]_i_1_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][2]_i_1_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][2]_i_2_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][2]_i_2_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][2]_i_2_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][2]_i_2_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][3]_i_1_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][3]_i_1_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][3]_i_1_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][3]_i_1_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][4]_i_1_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][4]_i_1_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][4]_i_1_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][4]_i_1_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][5]_i_1_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][5]_i_1_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][5]_i_1_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][5]_i_1_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][6]_i_1_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][6]_i_1_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][6]_i_1_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][6]_i_1_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][7]_i_1_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][7]_i_1_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][7]_i_1_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][7]_i_1_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][8]_i_1_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][8]_i_1_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][8]_i_1_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][8]_i_1_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][9]_i_1_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][9]_i_1_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][9]_i_1_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][9]_i_1_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0]_0\ : STD_LOGIC_VECTOR ( 22 downto 0 );
  signal \CLKS[1].test_clk_cntr[1][0]_i_1__1_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][0]_i_2__1_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][0]_i_2__1_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][0]_i_2__1_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][0]_i_2__1_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][10]_i_1__1_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][10]_i_1__1_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][10]_i_1__1_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][10]_i_1__1_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][10]_i_2__1_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][10]_i_2__1_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][10]_i_2__1_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][10]_i_2__1_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][11]_i_1__1_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][11]_i_1__1_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][11]_i_1__1_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][11]_i_1__1_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][12]_i_1__1_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][12]_i_1__1_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][12]_i_1__1_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][12]_i_1__1_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][13]_i_1__1_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][13]_i_1__1_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][13]_i_1__1_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][13]_i_1__1_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][14]_i_1__1_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][14]_i_1__1_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][14]_i_1__1_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][14]_i_1__1_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][15]_i_1__1_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][15]_i_1__1_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][15]_i_1__1_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][15]_i_1__1_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][16]_i_1__1_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][16]_i_1__1_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][16]_i_1__1_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][16]_i_1__1_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][17]_i_1__1_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][17]_i_1__1_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][17]_i_1__1_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][17]_i_1__1_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][18]_i_1__1_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][18]_i_1__1_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][18]_i_1__1_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][18]_i_1__1_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][18]_i_2__1_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][18]_i_2__1_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][18]_i_2__1_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][18]_i_2__1_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][18]_i_3__1_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][18]_i_3__1_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][18]_i_3__1_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][18]_i_3__1_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][19]_i_1__1_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][19]_i_1__1_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][19]_i_1__1_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][19]_i_1__1_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][1]_i_1__1_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][1]_i_1__1_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][1]_i_1__1_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][1]_i_1__1_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][20]_i_1__1_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][20]_i_1__1_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][20]_i_1__1_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][20]_i_1__1_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][21]_i_1__1_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][21]_i_1__1_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][21]_i_1__1_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][21]_i_1__1_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][22]_i_1__1_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][22]_i_1__1_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][22]_i_1__1_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][22]_i_1__1_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][2]_i_1__1_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][2]_i_1__1_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][2]_i_1__1_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][2]_i_1__1_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][2]_i_2__1_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][2]_i_2__1_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][2]_i_2__1_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][2]_i_2__1_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][3]_i_1__1_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][3]_i_1__1_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][3]_i_1__1_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][3]_i_1__1_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][4]_i_1__1_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][4]_i_1__1_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][4]_i_1__1_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][4]_i_1__1_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][5]_i_1__1_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][5]_i_1__1_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][5]_i_1__1_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][5]_i_1__1_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][6]_i_1__1_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][6]_i_1__1_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][6]_i_1__1_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][6]_i_1__1_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][7]_i_1__1_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][7]_i_1__1_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][7]_i_1__1_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][7]_i_1__1_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][8]_i_1__1_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][8]_i_1__1_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][8]_i_1__1_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][8]_i_1__1_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][9]_i_1__1_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][9]_i_1__1_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][9]_i_1__1_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][9]_i_1__1_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1]_1\ : STD_LOGIC_VECTOR ( 22 downto 0 );
  signal cdc_freq_cntr_aclk_i_10_n_0 : STD_LOGIC;
  signal cdc_freq_cntr_aclk_i_3_n_0 : STD_LOGIC;
  signal cdc_freq_cntr_aclk_i_4_n_0 : STD_LOGIC;
  signal cdc_freq_cntr_aclk_i_5_n_0 : STD_LOGIC;
  signal cdc_freq_cntr_aclk_i_6_n_0 : STD_LOGIC;
  signal cdc_freq_cntr_aclk_i_7_n_0 : STD_LOGIC;
  signal cdc_freq_cntr_aclk_i_8_n_0 : STD_LOGIC;
  signal cdc_freq_cntr_aclk_i_9_n_0 : STD_LOGIC;
  signal done : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of done : signal is "true";
  signal \done_ref_i_i_1__1_n_0\ : STD_LOGIC;
  signal \done_ref_i_i_2__1_n_0\ : STD_LOGIC;
  signal \done_ref_i_i_3__1_n_0\ : STD_LOGIC;
  signal \done_ref_i_i_4__1_n_0\ : STD_LOGIC;
  signal done_synced_0 : STD_LOGIC;
  signal done_synced_1 : STD_LOGIC;
  signal p_0_in : STD_LOGIC_VECTOR ( 15 downto 1 );
  signal \ref_clk_cntr_i[0]_i_1__1_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[10]_i_1__1_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[10]_i_1__1_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[10]_i_1__1_n_3\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[11]_i_1__1_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[11]_i_1__1_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[11]_i_1__1_n_3\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[12]_i_1__1_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[12]_i_1__1_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[12]_i_1__1_n_3\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[13]_i_1__1_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[13]_i_1__1_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[13]_i_1__1_n_3\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[14]_i_1__1_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[14]_i_1__1_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[14]_i_1__1_n_3\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[15]_i_1__1_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[15]_i_1__1_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[15]_i_1__1_n_3\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[15]_i_2__1_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[15]_i_2__1_n_1\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[15]_i_2__1_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[15]_i_2__1_n_3\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[15]_i_3__1_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[15]_i_3__1_n_1\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[15]_i_3__1_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[15]_i_3__1_n_3\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[1]_i_1__1_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[1]_i_1__1_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[1]_i_1__1_n_3\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[2]_i_1__1_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[2]_i_1__1_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[2]_i_1__1_n_3\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[3]_i_1__1_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[3]_i_1__1_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[3]_i_1__1_n_3\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[4]_i_1__1_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[4]_i_1__1_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[4]_i_1__1_n_3\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[5]_i_1__1_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[5]_i_1__1_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[5]_i_1__1_n_3\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[6]_i_1__1_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[6]_i_1__1_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[6]_i_1__1_n_3\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[7]_i_1__1_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[7]_i_1__1_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[7]_i_1__1_n_3\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[8]_i_1__1_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[8]_i_1__1_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[8]_i_1__1_n_3\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[9]_i_1__1_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[9]_i_1__1_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[9]_i_1__1_n_3\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[9]_i_2__1_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[9]_i_2__1_n_1\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[9]_i_2__1_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[9]_i_2__1_n_3\ : STD_LOGIC;
  signal rst_cnt : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute RTL_KEEP of rst_cnt : signal is "true";
  signal rst_cnt_c : STD_LOGIC;
  signal rst_cnt_ref : STD_LOGIC;
  attribute RTL_KEEP of rst_cnt_ref : signal is "true";
  signal rst_cnt_synced_0 : STD_LOGIC;
  signal rst_cnt_synced_1 : STD_LOGIC;
  signal \^src_in\ : STD_LOGIC_VECTOR ( 64 downto 0 );
  attribute DEST_SYNC_FF : integer;
  attribute DEST_SYNC_FF of \CLKS[0].cdc_done\ : label is 3;
  attribute INIT_SYNC_FF : integer;
  attribute INIT_SYNC_FF of \CLKS[0].cdc_done\ : label is 0;
  attribute SIM_ASSERT_CHK : integer;
  attribute SIM_ASSERT_CHK of \CLKS[0].cdc_done\ : label is 0;
  attribute SRC_INPUT_REG : integer;
  attribute SRC_INPUT_REG of \CLKS[0].cdc_done\ : label is 0;
  attribute VERSION : integer;
  attribute VERSION of \CLKS[0].cdc_done\ : label is 0;
  attribute WIDTH : integer;
  attribute WIDTH of \CLKS[0].cdc_done\ : label is 1;
  attribute XPM_CDC : string;
  attribute XPM_CDC of \CLKS[0].cdc_done\ : label is "ARRAY_SINGLE";
  attribute XPM_MODULE : string;
  attribute XPM_MODULE of \CLKS[0].cdc_done\ : label is "TRUE";
  attribute DEF_VAL : string;
  attribute DEF_VAL of \CLKS[0].cdc_rst_cn0\ : label is "1'b0";
  attribute DEST_SYNC_FF of \CLKS[0].cdc_rst_cn0\ : label is 3;
  attribute INIT_SYNC_FF of \CLKS[0].cdc_rst_cn0\ : label is 0;
  attribute INV_DEF_VAL : string;
  attribute INV_DEF_VAL of \CLKS[0].cdc_rst_cn0\ : label is "1'b1";
  attribute RST_ACTIVE_HIGH : integer;
  attribute RST_ACTIVE_HIGH of \CLKS[0].cdc_rst_cn0\ : label is 1;
  attribute VERSION of \CLKS[0].cdc_rst_cn0\ : label is 0;
  attribute XPM_CDC of \CLKS[0].cdc_rst_cn0\ : label is "ASYNC_RST";
  attribute XPM_MODULE of \CLKS[0].cdc_rst_cn0\ : label is "TRUE";
  attribute DEST_SYNC_FF of \CLKS[0].cdc_test_clk0_cntr\ : label is 2;
  attribute INIT_SYNC_FF of \CLKS[0].cdc_test_clk0_cntr\ : label is 0;
  attribute SIM_ASSERT_CHK of \CLKS[0].cdc_test_clk0_cntr\ : label is 0;
  attribute SRC_INPUT_REG of \CLKS[0].cdc_test_clk0_cntr\ : label is 0;
  attribute VERSION of \CLKS[0].cdc_test_clk0_cntr\ : label is 0;
  attribute WIDTH of \CLKS[0].cdc_test_clk0_cntr\ : label is 23;
  attribute XPM_CDC of \CLKS[0].cdc_test_clk0_cntr\ : label is "ARRAY_SINGLE";
  attribute XPM_MODULE of \CLKS[0].cdc_test_clk0_cntr\ : label is "TRUE";
  attribute DEST_SYNC_FF of \CLKS[1].cdc_done\ : label is 3;
  attribute INIT_SYNC_FF of \CLKS[1].cdc_done\ : label is 0;
  attribute SIM_ASSERT_CHK of \CLKS[1].cdc_done\ : label is 0;
  attribute SRC_INPUT_REG of \CLKS[1].cdc_done\ : label is 0;
  attribute VERSION of \CLKS[1].cdc_done\ : label is 0;
  attribute WIDTH of \CLKS[1].cdc_done\ : label is 1;
  attribute XPM_CDC of \CLKS[1].cdc_done\ : label is "ARRAY_SINGLE";
  attribute XPM_MODULE of \CLKS[1].cdc_done\ : label is "TRUE";
  attribute DEF_VAL of \CLKS[1].cdc_rst_cn0\ : label is "1'b0";
  attribute DEST_SYNC_FF of \CLKS[1].cdc_rst_cn0\ : label is 3;
  attribute INIT_SYNC_FF of \CLKS[1].cdc_rst_cn0\ : label is 0;
  attribute INV_DEF_VAL of \CLKS[1].cdc_rst_cn0\ : label is "1'b1";
  attribute RST_ACTIVE_HIGH of \CLKS[1].cdc_rst_cn0\ : label is 1;
  attribute VERSION of \CLKS[1].cdc_rst_cn0\ : label is 0;
  attribute XPM_CDC of \CLKS[1].cdc_rst_cn0\ : label is "ASYNC_RST";
  attribute XPM_MODULE of \CLKS[1].cdc_rst_cn0\ : label is "TRUE";
  attribute DEST_SYNC_FF of \CLKS[1].cdc_test_clk0_cntr\ : label is 2;
  attribute INIT_SYNC_FF of \CLKS[1].cdc_test_clk0_cntr\ : label is 0;
  attribute SIM_ASSERT_CHK of \CLKS[1].cdc_test_clk0_cntr\ : label is 0;
  attribute SRC_INPUT_REG of \CLKS[1].cdc_test_clk0_cntr\ : label is 0;
  attribute VERSION of \CLKS[1].cdc_test_clk0_cntr\ : label is 0;
  attribute WIDTH of \CLKS[1].cdc_test_clk0_cntr\ : label is 23;
  attribute XPM_CDC of \CLKS[1].cdc_test_clk0_cntr\ : label is "ARRAY_SINGLE";
  attribute XPM_MODULE of \CLKS[1].cdc_test_clk0_cntr\ : label is "TRUE";
  attribute KEEP : string;
  attribute KEEP of \done_reg[0]\ : label is "yes";
  attribute KEEP of \done_reg[1]\ : label is "yes";
  attribute KEEP of \done_reg[2]\ : label is "yes";
  attribute KEEP of \done_reg[3]\ : label is "yes";
  attribute KEEP of rst_cnt_ref_reg : label is "yes";
  attribute KEEP of \rst_cnt_reg[0]\ : label is "yes";
  attribute KEEP of \rst_cnt_reg[1]\ : label is "yes";
  attribute KEEP of \rst_cnt_reg[2]\ : label is "yes";
  attribute KEEP of \rst_cnt_reg[3]\ : label is "yes";
begin
  src_in(64 downto 0) <= \^src_in\(64 downto 0);
\CLKS[0].cdc_done\: entity work.\decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__10\
     port map (
      dest_clk => aclk_ctrl,
      dest_out(0) => done_synced_0,
      src_clk => '0',
      src_in(0) => done(0)
    );
\CLKS[0].cdc_rst_cn0\: entity work.\decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__8\
     port map (
      dest_arst => rst_cnt_synced_0,
      dest_clk => aclk_ctrl,
      src_arst => rst_cnt(0)
    );
\CLKS[0].cdc_test_clk0_cntr\: entity work.\decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__10\
     port map (
      dest_clk => aclk_freerun,
      dest_out(22 downto 0) => \^src_in\(46 downto 24),
      src_clk => '0',
      src_in(22 downto 0) => \CLKS[0].test_clk_cntr_reg[0]_0\(22 downto 0)
    );
\CLKS[0].test_clk_cntr[0][0]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => done_synced_0,
      O => \CLKS[0].test_clk_cntr[0][0]_i_1_n_0\
    );
\CLKS[0].test_clk_cntr_reg[0][0]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_ctrl,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][0]_i_2_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(0)
    );
\CLKS[0].test_clk_cntr_reg[0][0]_i_2\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FFFFFF00FF0000FF"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][0]_i_2_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(0),
      I4 => '0',
      O51 => \CLKS[0].test_clk_cntr_reg[0][0]_i_2_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][0]_i_2_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][0]_i_2_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][10]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_ctrl,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][10]_i_1_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(10)
    );
\CLKS[0].test_clk_cntr_reg[0][10]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][10]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(10),
      I4 => \CLKS[0].test_clk_cntr_reg[0][10]_i_2_n_0\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][10]_i_1_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][10]_i_1_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][10]_i_1_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][10]_i_2\: unisim.vcomponents.LOOKAHEAD8
    generic map(
      LOOKB => "TRUE",
      LOOKD => "TRUE",
      LOOKF => "TRUE",
      LOOKH => "TRUE"
    )
        port map (
      CIN => \CLKS[0].test_clk_cntr_reg[0][2]_i_2_n_3\,
      COUTB => \CLKS[0].test_clk_cntr_reg[0][10]_i_2_n_0\,
      COUTD => \CLKS[0].test_clk_cntr_reg[0][10]_i_2_n_1\,
      COUTF => \CLKS[0].test_clk_cntr_reg[0][10]_i_2_n_2\,
      COUTH => \CLKS[0].test_clk_cntr_reg[0][10]_i_2_n_3\,
      CYA => \CLKS[0].test_clk_cntr_reg[0][8]_i_1_n_2\,
      CYB => \CLKS[0].test_clk_cntr_reg[0][9]_i_1_n_2\,
      CYC => \CLKS[0].test_clk_cntr_reg[0][10]_i_1_n_2\,
      CYD => \CLKS[0].test_clk_cntr_reg[0][11]_i_1_n_2\,
      CYE => \CLKS[0].test_clk_cntr_reg[0][12]_i_1_n_2\,
      CYF => \CLKS[0].test_clk_cntr_reg[0][13]_i_1_n_2\,
      CYG => \CLKS[0].test_clk_cntr_reg[0][14]_i_1_n_2\,
      CYH => \CLKS[0].test_clk_cntr_reg[0][15]_i_1_n_2\,
      GEA => \CLKS[0].test_clk_cntr_reg[0][8]_i_1_n_0\,
      GEB => \CLKS[0].test_clk_cntr_reg[0][9]_i_1_n_0\,
      GEC => \CLKS[0].test_clk_cntr_reg[0][10]_i_1_n_0\,
      GED => \CLKS[0].test_clk_cntr_reg[0][11]_i_1_n_0\,
      GEE => \CLKS[0].test_clk_cntr_reg[0][12]_i_1_n_0\,
      GEF => \CLKS[0].test_clk_cntr_reg[0][13]_i_1_n_0\,
      GEG => \CLKS[0].test_clk_cntr_reg[0][14]_i_1_n_0\,
      GEH => \CLKS[0].test_clk_cntr_reg[0][15]_i_1_n_0\,
      PROPA => \CLKS[0].test_clk_cntr_reg[0][8]_i_1_n_3\,
      PROPB => \CLKS[0].test_clk_cntr_reg[0][9]_i_1_n_3\,
      PROPC => \CLKS[0].test_clk_cntr_reg[0][10]_i_1_n_3\,
      PROPD => \CLKS[0].test_clk_cntr_reg[0][11]_i_1_n_3\,
      PROPE => \CLKS[0].test_clk_cntr_reg[0][12]_i_1_n_3\,
      PROPF => \CLKS[0].test_clk_cntr_reg[0][13]_i_1_n_3\,
      PROPG => \CLKS[0].test_clk_cntr_reg[0][14]_i_1_n_3\,
      PROPH => \CLKS[0].test_clk_cntr_reg[0][15]_i_1_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][11]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_ctrl,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][11]_i_1_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(11)
    );
\CLKS[0].test_clk_cntr_reg[0][11]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][11]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(11),
      I4 => \CLKS[0].test_clk_cntr_reg[0][10]_i_1_n_2\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][11]_i_1_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][11]_i_1_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][11]_i_1_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][12]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_ctrl,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][12]_i_1_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(12)
    );
\CLKS[0].test_clk_cntr_reg[0][12]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][12]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(12),
      I4 => \CLKS[0].test_clk_cntr_reg[0][10]_i_2_n_1\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][12]_i_1_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][12]_i_1_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][12]_i_1_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][13]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_ctrl,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][13]_i_1_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(13)
    );
\CLKS[0].test_clk_cntr_reg[0][13]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][13]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(13),
      I4 => \CLKS[0].test_clk_cntr_reg[0][12]_i_1_n_2\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][13]_i_1_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][13]_i_1_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][13]_i_1_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][14]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_ctrl,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][14]_i_1_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(14)
    );
\CLKS[0].test_clk_cntr_reg[0][14]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][14]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(14),
      I4 => \CLKS[0].test_clk_cntr_reg[0][10]_i_2_n_2\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][14]_i_1_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][14]_i_1_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][14]_i_1_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][15]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_ctrl,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][15]_i_1_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(15)
    );
\CLKS[0].test_clk_cntr_reg[0][15]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][15]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(15),
      I4 => \CLKS[0].test_clk_cntr_reg[0][14]_i_1_n_2\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][15]_i_1_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][15]_i_1_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][15]_i_1_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][16]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_ctrl,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][16]_i_1_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(16)
    );
\CLKS[0].test_clk_cntr_reg[0][16]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][16]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(16),
      I4 => \CLKS[0].test_clk_cntr_reg[0][10]_i_2_n_3\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][16]_i_1_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][16]_i_1_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][16]_i_1_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][17]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_ctrl,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][17]_i_1_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(17)
    );
\CLKS[0].test_clk_cntr_reg[0][17]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][17]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(17),
      I4 => \CLKS[0].test_clk_cntr_reg[0][16]_i_1_n_2\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][17]_i_1_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][17]_i_1_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][17]_i_1_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][18]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_ctrl,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][18]_i_1_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(18)
    );
\CLKS[0].test_clk_cntr_reg[0][18]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][18]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(18),
      I4 => \CLKS[0].test_clk_cntr_reg[0][18]_i_2_n_0\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][18]_i_1_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][18]_i_1_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][18]_i_1_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][18]_i_2\: unisim.vcomponents.LOOKAHEAD8
    generic map(
      LOOKB => "TRUE",
      LOOKD => "TRUE",
      LOOKF => "TRUE",
      LOOKH => "TRUE"
    )
        port map (
      CIN => \CLKS[0].test_clk_cntr_reg[0][10]_i_2_n_3\,
      COUTB => \CLKS[0].test_clk_cntr_reg[0][18]_i_2_n_0\,
      COUTD => \CLKS[0].test_clk_cntr_reg[0][18]_i_2_n_1\,
      COUTF => \CLKS[0].test_clk_cntr_reg[0][18]_i_2_n_2\,
      COUTH => \CLKS[0].test_clk_cntr_reg[0][18]_i_2_n_3\,
      CYA => \CLKS[0].test_clk_cntr_reg[0][16]_i_1_n_2\,
      CYB => \CLKS[0].test_clk_cntr_reg[0][17]_i_1_n_2\,
      CYC => \CLKS[0].test_clk_cntr_reg[0][18]_i_1_n_2\,
      CYD => \CLKS[0].test_clk_cntr_reg[0][19]_i_1_n_2\,
      CYE => \CLKS[0].test_clk_cntr_reg[0][20]_i_1_n_2\,
      CYF => \CLKS[0].test_clk_cntr_reg[0][21]_i_1_n_2\,
      CYG => \CLKS[0].test_clk_cntr_reg[0][22]_i_1_n_2\,
      CYH => \CLKS[0].test_clk_cntr_reg[0][18]_i_3_n_2\,
      GEA => \CLKS[0].test_clk_cntr_reg[0][16]_i_1_n_0\,
      GEB => \CLKS[0].test_clk_cntr_reg[0][17]_i_1_n_0\,
      GEC => \CLKS[0].test_clk_cntr_reg[0][18]_i_1_n_0\,
      GED => \CLKS[0].test_clk_cntr_reg[0][19]_i_1_n_0\,
      GEE => \CLKS[0].test_clk_cntr_reg[0][20]_i_1_n_0\,
      GEF => \CLKS[0].test_clk_cntr_reg[0][21]_i_1_n_0\,
      GEG => \CLKS[0].test_clk_cntr_reg[0][22]_i_1_n_0\,
      GEH => \CLKS[0].test_clk_cntr_reg[0][18]_i_3_n_0\,
      PROPA => \CLKS[0].test_clk_cntr_reg[0][16]_i_1_n_3\,
      PROPB => \CLKS[0].test_clk_cntr_reg[0][17]_i_1_n_3\,
      PROPC => \CLKS[0].test_clk_cntr_reg[0][18]_i_1_n_3\,
      PROPD => \CLKS[0].test_clk_cntr_reg[0][19]_i_1_n_3\,
      PROPE => \CLKS[0].test_clk_cntr_reg[0][20]_i_1_n_3\,
      PROPF => \CLKS[0].test_clk_cntr_reg[0][21]_i_1_n_3\,
      PROPG => \CLKS[0].test_clk_cntr_reg[0][22]_i_1_n_3\,
      PROPH => \CLKS[0].test_clk_cntr_reg[0][18]_i_3_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][18]_i_3\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"00000000FF000000"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][18]_i_3_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => '0',
      I4 => '0',
      O51 => \CLKS[0].test_clk_cntr_reg[0][18]_i_3_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][18]_i_3_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][18]_i_3_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][19]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_ctrl,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][19]_i_1_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(19)
    );
\CLKS[0].test_clk_cntr_reg[0][19]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][19]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(19),
      I4 => \CLKS[0].test_clk_cntr_reg[0][18]_i_1_n_2\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][19]_i_1_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][19]_i_1_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][19]_i_1_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][1]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_ctrl,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][1]_i_1_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(1)
    );
\CLKS[0].test_clk_cntr_reg[0][1]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][1]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(1),
      I4 => \CLKS[0].test_clk_cntr_reg[0][0]_i_2_n_2\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][1]_i_1_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][1]_i_1_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][1]_i_1_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][20]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_ctrl,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][20]_i_1_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(20)
    );
\CLKS[0].test_clk_cntr_reg[0][20]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][20]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(20),
      I4 => \CLKS[0].test_clk_cntr_reg[0][18]_i_2_n_1\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][20]_i_1_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][20]_i_1_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][20]_i_1_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][21]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_ctrl,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][21]_i_1_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(21)
    );
\CLKS[0].test_clk_cntr_reg[0][21]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][21]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(21),
      I4 => \CLKS[0].test_clk_cntr_reg[0][20]_i_1_n_2\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][21]_i_1_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][21]_i_1_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][21]_i_1_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][22]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_ctrl,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][22]_i_1_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(22)
    );
\CLKS[0].test_clk_cntr_reg[0][22]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00FF0000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][22]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(22),
      I4 => \CLKS[0].test_clk_cntr_reg[0][18]_i_2_n_2\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][22]_i_1_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][22]_i_1_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][22]_i_1_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][2]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_ctrl,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][2]_i_1_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(2)
    );
\CLKS[0].test_clk_cntr_reg[0][2]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][2]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(2),
      I4 => \CLKS[0].test_clk_cntr_reg[0][2]_i_2_n_0\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][2]_i_1_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][2]_i_1_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][2]_i_1_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][2]_i_2\: unisim.vcomponents.LOOKAHEAD8
    generic map(
      LOOKB => "FALSE",
      LOOKD => "TRUE",
      LOOKF => "TRUE",
      LOOKH => "TRUE"
    )
        port map (
      CIN => '0',
      COUTB => \CLKS[0].test_clk_cntr_reg[0][2]_i_2_n_0\,
      COUTD => \CLKS[0].test_clk_cntr_reg[0][2]_i_2_n_1\,
      COUTF => \CLKS[0].test_clk_cntr_reg[0][2]_i_2_n_2\,
      COUTH => \CLKS[0].test_clk_cntr_reg[0][2]_i_2_n_3\,
      CYA => \CLKS[0].test_clk_cntr_reg[0][0]_i_2_n_2\,
      CYB => \CLKS[0].test_clk_cntr_reg[0][1]_i_1_n_2\,
      CYC => \CLKS[0].test_clk_cntr_reg[0][2]_i_1_n_2\,
      CYD => \CLKS[0].test_clk_cntr_reg[0][3]_i_1_n_2\,
      CYE => \CLKS[0].test_clk_cntr_reg[0][4]_i_1_n_2\,
      CYF => \CLKS[0].test_clk_cntr_reg[0][5]_i_1_n_2\,
      CYG => \CLKS[0].test_clk_cntr_reg[0][6]_i_1_n_2\,
      CYH => \CLKS[0].test_clk_cntr_reg[0][7]_i_1_n_2\,
      GEA => \CLKS[0].test_clk_cntr_reg[0][0]_i_2_n_0\,
      GEB => \CLKS[0].test_clk_cntr_reg[0][1]_i_1_n_0\,
      GEC => \CLKS[0].test_clk_cntr_reg[0][2]_i_1_n_0\,
      GED => \CLKS[0].test_clk_cntr_reg[0][3]_i_1_n_0\,
      GEE => \CLKS[0].test_clk_cntr_reg[0][4]_i_1_n_0\,
      GEF => \CLKS[0].test_clk_cntr_reg[0][5]_i_1_n_0\,
      GEG => \CLKS[0].test_clk_cntr_reg[0][6]_i_1_n_0\,
      GEH => \CLKS[0].test_clk_cntr_reg[0][7]_i_1_n_0\,
      PROPA => \CLKS[0].test_clk_cntr_reg[0][0]_i_2_n_3\,
      PROPB => \CLKS[0].test_clk_cntr_reg[0][1]_i_1_n_3\,
      PROPC => \CLKS[0].test_clk_cntr_reg[0][2]_i_1_n_3\,
      PROPD => \CLKS[0].test_clk_cntr_reg[0][3]_i_1_n_3\,
      PROPE => \CLKS[0].test_clk_cntr_reg[0][4]_i_1_n_3\,
      PROPF => \CLKS[0].test_clk_cntr_reg[0][5]_i_1_n_3\,
      PROPG => \CLKS[0].test_clk_cntr_reg[0][6]_i_1_n_3\,
      PROPH => \CLKS[0].test_clk_cntr_reg[0][7]_i_1_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][3]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_ctrl,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][3]_i_1_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(3)
    );
\CLKS[0].test_clk_cntr_reg[0][3]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][3]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(3),
      I4 => \CLKS[0].test_clk_cntr_reg[0][2]_i_1_n_2\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][3]_i_1_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][3]_i_1_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][3]_i_1_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][4]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_ctrl,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][4]_i_1_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(4)
    );
\CLKS[0].test_clk_cntr_reg[0][4]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][4]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(4),
      I4 => \CLKS[0].test_clk_cntr_reg[0][2]_i_2_n_1\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][4]_i_1_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][4]_i_1_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][4]_i_1_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][5]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_ctrl,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][5]_i_1_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(5)
    );
\CLKS[0].test_clk_cntr_reg[0][5]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][5]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(5),
      I4 => \CLKS[0].test_clk_cntr_reg[0][4]_i_1_n_2\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][5]_i_1_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][5]_i_1_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][5]_i_1_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][6]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_ctrl,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][6]_i_1_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(6)
    );
\CLKS[0].test_clk_cntr_reg[0][6]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][6]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(6),
      I4 => \CLKS[0].test_clk_cntr_reg[0][2]_i_2_n_2\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][6]_i_1_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][6]_i_1_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][6]_i_1_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][7]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_ctrl,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][7]_i_1_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(7)
    );
\CLKS[0].test_clk_cntr_reg[0][7]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][7]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(7),
      I4 => \CLKS[0].test_clk_cntr_reg[0][6]_i_1_n_2\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][7]_i_1_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][7]_i_1_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][7]_i_1_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][8]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_ctrl,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][8]_i_1_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(8)
    );
\CLKS[0].test_clk_cntr_reg[0][8]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][8]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(8),
      I4 => \CLKS[0].test_clk_cntr_reg[0][2]_i_2_n_3\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][8]_i_1_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][8]_i_1_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][8]_i_1_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][9]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_ctrl,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][9]_i_1_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(9)
    );
\CLKS[0].test_clk_cntr_reg[0][9]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][9]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(9),
      I4 => \CLKS[0].test_clk_cntr_reg[0][8]_i_1_n_2\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][9]_i_1_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][9]_i_1_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][9]_i_1_n_3\
    );
\CLKS[1].cdc_done\: entity work.\decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0\
     port map (
      dest_clk => aclk_pcie,
      dest_out(0) => done_synced_1,
      src_clk => '0',
      src_in(0) => done(1)
    );
\CLKS[1].cdc_rst_cn0\: entity work.\decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__9\
     port map (
      dest_arst => rst_cnt_synced_1,
      dest_clk => aclk_pcie,
      src_arst => rst_cnt(1)
    );
\CLKS[1].cdc_test_clk0_cntr\: entity work.\decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1\
     port map (
      dest_clk => aclk_freerun,
      dest_out(22 downto 0) => \^src_in\(22 downto 0),
      src_clk => '0',
      src_in(22 downto 0) => \CLKS[1].test_clk_cntr_reg[1]_1\(22 downto 0)
    );
\CLKS[1].test_clk_cntr[1][0]_i_1__1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => done_synced_1,
      O => \CLKS[1].test_clk_cntr[1][0]_i_1__1_n_0\
    );
\CLKS[1].test_clk_cntr_reg[1][0]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_pcie,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1__1_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][0]_i_2__1_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(0)
    );
\CLKS[1].test_clk_cntr_reg[1][0]_i_2__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FFFFFF00FF0000FF"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][0]_i_2__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(0),
      I4 => '0',
      O51 => \CLKS[1].test_clk_cntr_reg[1][0]_i_2__1_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][0]_i_2__1_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][0]_i_2__1_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][10]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_pcie,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1__1_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][10]_i_1__1_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(10)
    );
\CLKS[1].test_clk_cntr_reg[1][10]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][10]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(10),
      I4 => \CLKS[1].test_clk_cntr_reg[1][10]_i_2__1_n_0\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][10]_i_1__1_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][10]_i_1__1_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][10]_i_1__1_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][10]_i_2__1\: unisim.vcomponents.LOOKAHEAD8
    generic map(
      LOOKB => "TRUE",
      LOOKD => "TRUE",
      LOOKF => "TRUE",
      LOOKH => "TRUE"
    )
        port map (
      CIN => \CLKS[1].test_clk_cntr_reg[1][2]_i_2__1_n_3\,
      COUTB => \CLKS[1].test_clk_cntr_reg[1][10]_i_2__1_n_0\,
      COUTD => \CLKS[1].test_clk_cntr_reg[1][10]_i_2__1_n_1\,
      COUTF => \CLKS[1].test_clk_cntr_reg[1][10]_i_2__1_n_2\,
      COUTH => \CLKS[1].test_clk_cntr_reg[1][10]_i_2__1_n_3\,
      CYA => \CLKS[1].test_clk_cntr_reg[1][8]_i_1__1_n_2\,
      CYB => \CLKS[1].test_clk_cntr_reg[1][9]_i_1__1_n_2\,
      CYC => \CLKS[1].test_clk_cntr_reg[1][10]_i_1__1_n_2\,
      CYD => \CLKS[1].test_clk_cntr_reg[1][11]_i_1__1_n_2\,
      CYE => \CLKS[1].test_clk_cntr_reg[1][12]_i_1__1_n_2\,
      CYF => \CLKS[1].test_clk_cntr_reg[1][13]_i_1__1_n_2\,
      CYG => \CLKS[1].test_clk_cntr_reg[1][14]_i_1__1_n_2\,
      CYH => \CLKS[1].test_clk_cntr_reg[1][15]_i_1__1_n_2\,
      GEA => \CLKS[1].test_clk_cntr_reg[1][8]_i_1__1_n_0\,
      GEB => \CLKS[1].test_clk_cntr_reg[1][9]_i_1__1_n_0\,
      GEC => \CLKS[1].test_clk_cntr_reg[1][10]_i_1__1_n_0\,
      GED => \CLKS[1].test_clk_cntr_reg[1][11]_i_1__1_n_0\,
      GEE => \CLKS[1].test_clk_cntr_reg[1][12]_i_1__1_n_0\,
      GEF => \CLKS[1].test_clk_cntr_reg[1][13]_i_1__1_n_0\,
      GEG => \CLKS[1].test_clk_cntr_reg[1][14]_i_1__1_n_0\,
      GEH => \CLKS[1].test_clk_cntr_reg[1][15]_i_1__1_n_0\,
      PROPA => \CLKS[1].test_clk_cntr_reg[1][8]_i_1__1_n_3\,
      PROPB => \CLKS[1].test_clk_cntr_reg[1][9]_i_1__1_n_3\,
      PROPC => \CLKS[1].test_clk_cntr_reg[1][10]_i_1__1_n_3\,
      PROPD => \CLKS[1].test_clk_cntr_reg[1][11]_i_1__1_n_3\,
      PROPE => \CLKS[1].test_clk_cntr_reg[1][12]_i_1__1_n_3\,
      PROPF => \CLKS[1].test_clk_cntr_reg[1][13]_i_1__1_n_3\,
      PROPG => \CLKS[1].test_clk_cntr_reg[1][14]_i_1__1_n_3\,
      PROPH => \CLKS[1].test_clk_cntr_reg[1][15]_i_1__1_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][11]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_pcie,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1__1_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][11]_i_1__1_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(11)
    );
\CLKS[1].test_clk_cntr_reg[1][11]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][11]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(11),
      I4 => \CLKS[1].test_clk_cntr_reg[1][10]_i_1__1_n_2\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][11]_i_1__1_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][11]_i_1__1_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][11]_i_1__1_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][12]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_pcie,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1__1_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][12]_i_1__1_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(12)
    );
\CLKS[1].test_clk_cntr_reg[1][12]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][12]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(12),
      I4 => \CLKS[1].test_clk_cntr_reg[1][10]_i_2__1_n_1\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][12]_i_1__1_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][12]_i_1__1_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][12]_i_1__1_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][13]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_pcie,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1__1_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][13]_i_1__1_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(13)
    );
\CLKS[1].test_clk_cntr_reg[1][13]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][13]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(13),
      I4 => \CLKS[1].test_clk_cntr_reg[1][12]_i_1__1_n_2\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][13]_i_1__1_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][13]_i_1__1_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][13]_i_1__1_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][14]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_pcie,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1__1_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][14]_i_1__1_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(14)
    );
\CLKS[1].test_clk_cntr_reg[1][14]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][14]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(14),
      I4 => \CLKS[1].test_clk_cntr_reg[1][10]_i_2__1_n_2\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][14]_i_1__1_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][14]_i_1__1_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][14]_i_1__1_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][15]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_pcie,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1__1_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][15]_i_1__1_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(15)
    );
\CLKS[1].test_clk_cntr_reg[1][15]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][15]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(15),
      I4 => \CLKS[1].test_clk_cntr_reg[1][14]_i_1__1_n_2\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][15]_i_1__1_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][15]_i_1__1_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][15]_i_1__1_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][16]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_pcie,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1__1_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][16]_i_1__1_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(16)
    );
\CLKS[1].test_clk_cntr_reg[1][16]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][16]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(16),
      I4 => \CLKS[1].test_clk_cntr_reg[1][10]_i_2__1_n_3\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][16]_i_1__1_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][16]_i_1__1_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][16]_i_1__1_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][17]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_pcie,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1__1_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][17]_i_1__1_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(17)
    );
\CLKS[1].test_clk_cntr_reg[1][17]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][17]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(17),
      I4 => \CLKS[1].test_clk_cntr_reg[1][16]_i_1__1_n_2\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][17]_i_1__1_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][17]_i_1__1_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][17]_i_1__1_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][18]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_pcie,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1__1_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][18]_i_1__1_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(18)
    );
\CLKS[1].test_clk_cntr_reg[1][18]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][18]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(18),
      I4 => \CLKS[1].test_clk_cntr_reg[1][18]_i_2__1_n_0\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][18]_i_1__1_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][18]_i_1__1_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][18]_i_1__1_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][18]_i_2__1\: unisim.vcomponents.LOOKAHEAD8
    generic map(
      LOOKB => "TRUE",
      LOOKD => "TRUE",
      LOOKF => "TRUE",
      LOOKH => "TRUE"
    )
        port map (
      CIN => \CLKS[1].test_clk_cntr_reg[1][10]_i_2__1_n_3\,
      COUTB => \CLKS[1].test_clk_cntr_reg[1][18]_i_2__1_n_0\,
      COUTD => \CLKS[1].test_clk_cntr_reg[1][18]_i_2__1_n_1\,
      COUTF => \CLKS[1].test_clk_cntr_reg[1][18]_i_2__1_n_2\,
      COUTH => \CLKS[1].test_clk_cntr_reg[1][18]_i_2__1_n_3\,
      CYA => \CLKS[1].test_clk_cntr_reg[1][16]_i_1__1_n_2\,
      CYB => \CLKS[1].test_clk_cntr_reg[1][17]_i_1__1_n_2\,
      CYC => \CLKS[1].test_clk_cntr_reg[1][18]_i_1__1_n_2\,
      CYD => \CLKS[1].test_clk_cntr_reg[1][19]_i_1__1_n_2\,
      CYE => \CLKS[1].test_clk_cntr_reg[1][20]_i_1__1_n_2\,
      CYF => \CLKS[1].test_clk_cntr_reg[1][21]_i_1__1_n_2\,
      CYG => \CLKS[1].test_clk_cntr_reg[1][22]_i_1__1_n_2\,
      CYH => \CLKS[1].test_clk_cntr_reg[1][18]_i_3__1_n_2\,
      GEA => \CLKS[1].test_clk_cntr_reg[1][16]_i_1__1_n_0\,
      GEB => \CLKS[1].test_clk_cntr_reg[1][17]_i_1__1_n_0\,
      GEC => \CLKS[1].test_clk_cntr_reg[1][18]_i_1__1_n_0\,
      GED => \CLKS[1].test_clk_cntr_reg[1][19]_i_1__1_n_0\,
      GEE => \CLKS[1].test_clk_cntr_reg[1][20]_i_1__1_n_0\,
      GEF => \CLKS[1].test_clk_cntr_reg[1][21]_i_1__1_n_0\,
      GEG => \CLKS[1].test_clk_cntr_reg[1][22]_i_1__1_n_0\,
      GEH => \CLKS[1].test_clk_cntr_reg[1][18]_i_3__1_n_0\,
      PROPA => \CLKS[1].test_clk_cntr_reg[1][16]_i_1__1_n_3\,
      PROPB => \CLKS[1].test_clk_cntr_reg[1][17]_i_1__1_n_3\,
      PROPC => \CLKS[1].test_clk_cntr_reg[1][18]_i_1__1_n_3\,
      PROPD => \CLKS[1].test_clk_cntr_reg[1][19]_i_1__1_n_3\,
      PROPE => \CLKS[1].test_clk_cntr_reg[1][20]_i_1__1_n_3\,
      PROPF => \CLKS[1].test_clk_cntr_reg[1][21]_i_1__1_n_3\,
      PROPG => \CLKS[1].test_clk_cntr_reg[1][22]_i_1__1_n_3\,
      PROPH => \CLKS[1].test_clk_cntr_reg[1][18]_i_3__1_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][18]_i_3__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"00000000FF000000"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][18]_i_3__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => '0',
      I4 => '0',
      O51 => \CLKS[1].test_clk_cntr_reg[1][18]_i_3__1_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][18]_i_3__1_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][18]_i_3__1_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][19]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_pcie,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1__1_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][19]_i_1__1_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(19)
    );
\CLKS[1].test_clk_cntr_reg[1][19]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][19]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(19),
      I4 => \CLKS[1].test_clk_cntr_reg[1][18]_i_1__1_n_2\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][19]_i_1__1_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][19]_i_1__1_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][19]_i_1__1_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][1]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_pcie,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1__1_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][1]_i_1__1_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(1)
    );
\CLKS[1].test_clk_cntr_reg[1][1]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][1]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(1),
      I4 => \CLKS[1].test_clk_cntr_reg[1][0]_i_2__1_n_2\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][1]_i_1__1_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][1]_i_1__1_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][1]_i_1__1_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][20]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_pcie,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1__1_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][20]_i_1__1_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(20)
    );
\CLKS[1].test_clk_cntr_reg[1][20]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][20]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(20),
      I4 => \CLKS[1].test_clk_cntr_reg[1][18]_i_2__1_n_1\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][20]_i_1__1_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][20]_i_1__1_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][20]_i_1__1_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][21]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_pcie,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1__1_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][21]_i_1__1_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(21)
    );
\CLKS[1].test_clk_cntr_reg[1][21]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][21]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(21),
      I4 => \CLKS[1].test_clk_cntr_reg[1][20]_i_1__1_n_2\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][21]_i_1__1_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][21]_i_1__1_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][21]_i_1__1_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][22]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_pcie,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1__1_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][22]_i_1__1_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(22)
    );
\CLKS[1].test_clk_cntr_reg[1][22]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00FF0000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][22]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(22),
      I4 => \CLKS[1].test_clk_cntr_reg[1][18]_i_2__1_n_2\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][22]_i_1__1_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][22]_i_1__1_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][22]_i_1__1_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][2]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_pcie,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1__1_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][2]_i_1__1_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(2)
    );
\CLKS[1].test_clk_cntr_reg[1][2]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][2]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(2),
      I4 => \CLKS[1].test_clk_cntr_reg[1][2]_i_2__1_n_0\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][2]_i_1__1_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][2]_i_1__1_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][2]_i_1__1_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][2]_i_2__1\: unisim.vcomponents.LOOKAHEAD8
    generic map(
      LOOKB => "FALSE",
      LOOKD => "TRUE",
      LOOKF => "TRUE",
      LOOKH => "TRUE"
    )
        port map (
      CIN => '0',
      COUTB => \CLKS[1].test_clk_cntr_reg[1][2]_i_2__1_n_0\,
      COUTD => \CLKS[1].test_clk_cntr_reg[1][2]_i_2__1_n_1\,
      COUTF => \CLKS[1].test_clk_cntr_reg[1][2]_i_2__1_n_2\,
      COUTH => \CLKS[1].test_clk_cntr_reg[1][2]_i_2__1_n_3\,
      CYA => \CLKS[1].test_clk_cntr_reg[1][0]_i_2__1_n_2\,
      CYB => \CLKS[1].test_clk_cntr_reg[1][1]_i_1__1_n_2\,
      CYC => \CLKS[1].test_clk_cntr_reg[1][2]_i_1__1_n_2\,
      CYD => \CLKS[1].test_clk_cntr_reg[1][3]_i_1__1_n_2\,
      CYE => \CLKS[1].test_clk_cntr_reg[1][4]_i_1__1_n_2\,
      CYF => \CLKS[1].test_clk_cntr_reg[1][5]_i_1__1_n_2\,
      CYG => \CLKS[1].test_clk_cntr_reg[1][6]_i_1__1_n_2\,
      CYH => \CLKS[1].test_clk_cntr_reg[1][7]_i_1__1_n_2\,
      GEA => \CLKS[1].test_clk_cntr_reg[1][0]_i_2__1_n_0\,
      GEB => \CLKS[1].test_clk_cntr_reg[1][1]_i_1__1_n_0\,
      GEC => \CLKS[1].test_clk_cntr_reg[1][2]_i_1__1_n_0\,
      GED => \CLKS[1].test_clk_cntr_reg[1][3]_i_1__1_n_0\,
      GEE => \CLKS[1].test_clk_cntr_reg[1][4]_i_1__1_n_0\,
      GEF => \CLKS[1].test_clk_cntr_reg[1][5]_i_1__1_n_0\,
      GEG => \CLKS[1].test_clk_cntr_reg[1][6]_i_1__1_n_0\,
      GEH => \CLKS[1].test_clk_cntr_reg[1][7]_i_1__1_n_0\,
      PROPA => \CLKS[1].test_clk_cntr_reg[1][0]_i_2__1_n_3\,
      PROPB => \CLKS[1].test_clk_cntr_reg[1][1]_i_1__1_n_3\,
      PROPC => \CLKS[1].test_clk_cntr_reg[1][2]_i_1__1_n_3\,
      PROPD => \CLKS[1].test_clk_cntr_reg[1][3]_i_1__1_n_3\,
      PROPE => \CLKS[1].test_clk_cntr_reg[1][4]_i_1__1_n_3\,
      PROPF => \CLKS[1].test_clk_cntr_reg[1][5]_i_1__1_n_3\,
      PROPG => \CLKS[1].test_clk_cntr_reg[1][6]_i_1__1_n_3\,
      PROPH => \CLKS[1].test_clk_cntr_reg[1][7]_i_1__1_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][3]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_pcie,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1__1_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][3]_i_1__1_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(3)
    );
\CLKS[1].test_clk_cntr_reg[1][3]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][3]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(3),
      I4 => \CLKS[1].test_clk_cntr_reg[1][2]_i_1__1_n_2\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][3]_i_1__1_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][3]_i_1__1_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][3]_i_1__1_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][4]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_pcie,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1__1_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][4]_i_1__1_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(4)
    );
\CLKS[1].test_clk_cntr_reg[1][4]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][4]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(4),
      I4 => \CLKS[1].test_clk_cntr_reg[1][2]_i_2__1_n_1\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][4]_i_1__1_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][4]_i_1__1_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][4]_i_1__1_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][5]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_pcie,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1__1_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][5]_i_1__1_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(5)
    );
\CLKS[1].test_clk_cntr_reg[1][5]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][5]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(5),
      I4 => \CLKS[1].test_clk_cntr_reg[1][4]_i_1__1_n_2\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][5]_i_1__1_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][5]_i_1__1_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][5]_i_1__1_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][6]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_pcie,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1__1_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][6]_i_1__1_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(6)
    );
\CLKS[1].test_clk_cntr_reg[1][6]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][6]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(6),
      I4 => \CLKS[1].test_clk_cntr_reg[1][2]_i_2__1_n_2\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][6]_i_1__1_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][6]_i_1__1_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][6]_i_1__1_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][7]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_pcie,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1__1_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][7]_i_1__1_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(7)
    );
\CLKS[1].test_clk_cntr_reg[1][7]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][7]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(7),
      I4 => \CLKS[1].test_clk_cntr_reg[1][6]_i_1__1_n_2\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][7]_i_1__1_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][7]_i_1__1_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][7]_i_1__1_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][8]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_pcie,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1__1_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][8]_i_1__1_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(8)
    );
\CLKS[1].test_clk_cntr_reg[1][8]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][8]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(8),
      I4 => \CLKS[1].test_clk_cntr_reg[1][2]_i_2__1_n_3\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][8]_i_1__1_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][8]_i_1__1_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][8]_i_1__1_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][9]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_pcie,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1__1_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][9]_i_1__1_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(9)
    );
\CLKS[1].test_clk_cntr_reg[1][9]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][9]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(9),
      I4 => \CLKS[1].test_clk_cntr_reg[1][8]_i_1__1_n_2\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][9]_i_1__1_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][9]_i_1__1_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][9]_i_1__1_n_3\
    );
cdc_freq_cntr_aclk_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8000"
    )
        port map (
      I0 => cdc_freq_cntr_aclk_i_3_n_0,
      I1 => cdc_freq_cntr_aclk_i_4_n_0,
      I2 => cdc_freq_cntr_aclk_i_5_n_0,
      I3 => cdc_freq_cntr_aclk_i_6_n_0,
      O => \^src_in\(47)
    );
cdc_freq_cntr_aclk_i_10: unisim.vcomponents.LUT5
    generic map(
      INIT => X"80000000"
    )
        port map (
      I0 => \^src_in\(0),
      I1 => \^src_in\(1),
      I2 => \^src_in\(2),
      I3 => \^src_in\(4),
      I4 => \^src_in\(3),
      O => cdc_freq_cntr_aclk_i_10_n_0
    );
cdc_freq_cntr_aclk_i_2: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8000"
    )
        port map (
      I0 => cdc_freq_cntr_aclk_i_7_n_0,
      I1 => cdc_freq_cntr_aclk_i_8_n_0,
      I2 => cdc_freq_cntr_aclk_i_9_n_0,
      I3 => cdc_freq_cntr_aclk_i_10_n_0,
      O => \^src_in\(23)
    );
cdc_freq_cntr_aclk_i_3: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8000000000000000"
    )
        port map (
      I0 => \^src_in\(37),
      I1 => \^src_in\(38),
      I2 => \^src_in\(35),
      I3 => \^src_in\(36),
      I4 => \^src_in\(40),
      I5 => \^src_in\(39),
      O => cdc_freq_cntr_aclk_i_3_n_0
    );
cdc_freq_cntr_aclk_i_4: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8000000000000000"
    )
        port map (
      I0 => \^src_in\(43),
      I1 => \^src_in\(44),
      I2 => \^src_in\(41),
      I3 => \^src_in\(42),
      I4 => \^src_in\(46),
      I5 => \^src_in\(45),
      O => cdc_freq_cntr_aclk_i_4_n_0
    );
cdc_freq_cntr_aclk_i_5: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8000000000000000"
    )
        port map (
      I0 => \^src_in\(31),
      I1 => \^src_in\(32),
      I2 => \^src_in\(29),
      I3 => \^src_in\(30),
      I4 => \^src_in\(34),
      I5 => \^src_in\(33),
      O => cdc_freq_cntr_aclk_i_5_n_0
    );
cdc_freq_cntr_aclk_i_6: unisim.vcomponents.LUT5
    generic map(
      INIT => X"80000000"
    )
        port map (
      I0 => \^src_in\(24),
      I1 => \^src_in\(25),
      I2 => \^src_in\(26),
      I3 => \^src_in\(28),
      I4 => \^src_in\(27),
      O => cdc_freq_cntr_aclk_i_6_n_0
    );
cdc_freq_cntr_aclk_i_7: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8000000000000000"
    )
        port map (
      I0 => \^src_in\(13),
      I1 => \^src_in\(14),
      I2 => \^src_in\(11),
      I3 => \^src_in\(12),
      I4 => \^src_in\(16),
      I5 => \^src_in\(15),
      O => cdc_freq_cntr_aclk_i_7_n_0
    );
cdc_freq_cntr_aclk_i_8: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8000000000000000"
    )
        port map (
      I0 => \^src_in\(19),
      I1 => \^src_in\(20),
      I2 => \^src_in\(17),
      I3 => \^src_in\(18),
      I4 => \^src_in\(22),
      I5 => \^src_in\(21),
      O => cdc_freq_cntr_aclk_i_8_n_0
    );
cdc_freq_cntr_aclk_i_9: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8000000000000000"
    )
        port map (
      I0 => \^src_in\(7),
      I1 => \^src_in\(8),
      I2 => \^src_in\(5),
      I3 => \^src_in\(6),
      I4 => \^src_in\(10),
      I5 => \^src_in\(9),
      O => cdc_freq_cntr_aclk_i_9_n_0
    );
\done_ref_i_i_1__1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^src_in\(64),
      O => \done_ref_i_i_1__1_n_0\
    );
\done_ref_i_i_2__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0002000000000000"
    )
        port map (
      I0 => \done_ref_i_i_3__1_n_0\,
      I1 => \^src_in\(49),
      I2 => \^src_in\(48),
      I3 => \^src_in\(51),
      I4 => \^src_in\(50),
      I5 => \done_ref_i_i_4__1_n_0\,
      O => \done_ref_i_i_2__1_n_0\
    );
\done_ref_i_i_3__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000100000000"
    )
        port map (
      I0 => \^src_in\(60),
      I1 => \^src_in\(61),
      I2 => \^src_in\(58),
      I3 => \^src_in\(59),
      I4 => \^src_in\(62),
      I5 => \^src_in\(63),
      O => \done_ref_i_i_3__1_n_0\
    );
\done_ref_i_i_4__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000100000000000"
    )
        port map (
      I0 => \^src_in\(54),
      I1 => \^src_in\(55),
      I2 => \^src_in\(52),
      I3 => \^src_in\(53),
      I4 => \^src_in\(56),
      I5 => \^src_in\(57),
      O => \done_ref_i_i_4__1_n_0\
    );
done_ref_i_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => \done_ref_i_i_1__1_n_0\,
      D => \done_ref_i_i_2__1_n_0\,
      Q => \^src_in\(64),
      R => rst_cnt_ref
    );
\done_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => \done_ref_i_i_1__1_n_0\,
      D => \done_ref_i_i_2__1_n_0\,
      Q => done(0),
      R => rst_cnt_ref
    );
\done_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => \done_ref_i_i_1__1_n_0\,
      D => \done_ref_i_i_2__1_n_0\,
      Q => done(1),
      R => rst_cnt_ref
    );
\done_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => \done_ref_i_i_1__1_n_0\,
      D => \done_ref_i_i_2__1_n_0\,
      Q => done(2),
      R => rst_cnt_ref
    );
\done_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => \done_ref_i_i_1__1_n_0\,
      D => \done_ref_i_i_2__1_n_0\,
      Q => done(3),
      R => rst_cnt_ref
    );
\ref_clk_cntr_i[0]_i_1__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"21"
    )
        port map (
      I0 => \^src_in\(48),
      I1 => rst_cnt_ref,
      I2 => \^src_in\(64),
      O => \ref_clk_cntr_i[0]_i_1__1_n_0\
    );
\ref_clk_cntr_i_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => '1',
      D => \ref_clk_cntr_i[0]_i_1__1_n_0\,
      Q => \^src_in\(48),
      R => '0'
    );
\ref_clk_cntr_i_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => \done_ref_i_i_1__1_n_0\,
      D => p_0_in(10),
      Q => \^src_in\(58),
      R => rst_cnt_ref
    );
\ref_clk_cntr_i_reg[10]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \ref_clk_cntr_i_reg[10]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \^src_in\(58),
      I4 => \ref_clk_cntr_i_reg[9]_i_1__1_n_2\,
      O51 => p_0_in(10),
      O52 => \ref_clk_cntr_i_reg[10]_i_1__1_n_2\,
      PROP => \ref_clk_cntr_i_reg[10]_i_1__1_n_3\
    );
\ref_clk_cntr_i_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => \done_ref_i_i_1__1_n_0\,
      D => p_0_in(11),
      Q => \^src_in\(59),
      R => rst_cnt_ref
    );
\ref_clk_cntr_i_reg[11]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \ref_clk_cntr_i_reg[11]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \^src_in\(59),
      I4 => \ref_clk_cntr_i_reg[15]_i_2__1_n_0\,
      O51 => p_0_in(11),
      O52 => \ref_clk_cntr_i_reg[11]_i_1__1_n_2\,
      PROP => \ref_clk_cntr_i_reg[11]_i_1__1_n_3\
    );
\ref_clk_cntr_i_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => \done_ref_i_i_1__1_n_0\,
      D => p_0_in(12),
      Q => \^src_in\(60),
      R => rst_cnt_ref
    );
\ref_clk_cntr_i_reg[12]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \ref_clk_cntr_i_reg[12]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \^src_in\(60),
      I4 => \ref_clk_cntr_i_reg[11]_i_1__1_n_2\,
      O51 => p_0_in(12),
      O52 => \ref_clk_cntr_i_reg[12]_i_1__1_n_2\,
      PROP => \ref_clk_cntr_i_reg[12]_i_1__1_n_3\
    );
\ref_clk_cntr_i_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => \done_ref_i_i_1__1_n_0\,
      D => p_0_in(13),
      Q => \^src_in\(61),
      R => rst_cnt_ref
    );
\ref_clk_cntr_i_reg[13]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \ref_clk_cntr_i_reg[13]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \^src_in\(61),
      I4 => \ref_clk_cntr_i_reg[15]_i_2__1_n_1\,
      O51 => p_0_in(13),
      O52 => \ref_clk_cntr_i_reg[13]_i_1__1_n_2\,
      PROP => \ref_clk_cntr_i_reg[13]_i_1__1_n_3\
    );
\ref_clk_cntr_i_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => \done_ref_i_i_1__1_n_0\,
      D => p_0_in(14),
      Q => \^src_in\(62),
      R => rst_cnt_ref
    );
\ref_clk_cntr_i_reg[14]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \ref_clk_cntr_i_reg[14]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \^src_in\(62),
      I4 => \ref_clk_cntr_i_reg[13]_i_1__1_n_2\,
      O51 => p_0_in(14),
      O52 => \ref_clk_cntr_i_reg[14]_i_1__1_n_2\,
      PROP => \ref_clk_cntr_i_reg[14]_i_1__1_n_3\
    );
\ref_clk_cntr_i_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => \done_ref_i_i_1__1_n_0\,
      D => p_0_in(15),
      Q => \^src_in\(63),
      R => rst_cnt_ref
    );
\ref_clk_cntr_i_reg[15]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00FF0000FFFF00"
    )
        port map (
      GE => \ref_clk_cntr_i_reg[15]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \^src_in\(63),
      I4 => \ref_clk_cntr_i_reg[15]_i_2__1_n_2\,
      O51 => p_0_in(15),
      O52 => \ref_clk_cntr_i_reg[15]_i_1__1_n_2\,
      PROP => \ref_clk_cntr_i_reg[15]_i_1__1_n_3\
    );
\ref_clk_cntr_i_reg[15]_i_2__1\: unisim.vcomponents.LOOKAHEAD8
    generic map(
      LOOKB => "TRUE",
      LOOKD => "TRUE",
      LOOKF => "TRUE",
      LOOKH => "TRUE"
    )
        port map (
      CIN => \ref_clk_cntr_i_reg[9]_i_2__1_n_3\,
      COUTB => \ref_clk_cntr_i_reg[15]_i_2__1_n_0\,
      COUTD => \ref_clk_cntr_i_reg[15]_i_2__1_n_1\,
      COUTF => \ref_clk_cntr_i_reg[15]_i_2__1_n_2\,
      COUTH => \ref_clk_cntr_i_reg[15]_i_2__1_n_3\,
      CYA => \ref_clk_cntr_i_reg[9]_i_1__1_n_2\,
      CYB => \ref_clk_cntr_i_reg[10]_i_1__1_n_2\,
      CYC => \ref_clk_cntr_i_reg[11]_i_1__1_n_2\,
      CYD => \ref_clk_cntr_i_reg[12]_i_1__1_n_2\,
      CYE => \ref_clk_cntr_i_reg[13]_i_1__1_n_2\,
      CYF => \ref_clk_cntr_i_reg[14]_i_1__1_n_2\,
      CYG => \ref_clk_cntr_i_reg[15]_i_1__1_n_2\,
      CYH => \ref_clk_cntr_i_reg[15]_i_3__1_n_2\,
      GEA => \ref_clk_cntr_i_reg[9]_i_1__1_n_0\,
      GEB => \ref_clk_cntr_i_reg[10]_i_1__1_n_0\,
      GEC => \ref_clk_cntr_i_reg[11]_i_1__1_n_0\,
      GED => \ref_clk_cntr_i_reg[12]_i_1__1_n_0\,
      GEE => \ref_clk_cntr_i_reg[13]_i_1__1_n_0\,
      GEF => \ref_clk_cntr_i_reg[14]_i_1__1_n_0\,
      GEG => \ref_clk_cntr_i_reg[15]_i_1__1_n_0\,
      GEH => \ref_clk_cntr_i_reg[15]_i_3__1_n_0\,
      PROPA => \ref_clk_cntr_i_reg[9]_i_1__1_n_3\,
      PROPB => \ref_clk_cntr_i_reg[10]_i_1__1_n_3\,
      PROPC => \ref_clk_cntr_i_reg[11]_i_1__1_n_3\,
      PROPD => \ref_clk_cntr_i_reg[12]_i_1__1_n_3\,
      PROPE => \ref_clk_cntr_i_reg[13]_i_1__1_n_3\,
      PROPF => \ref_clk_cntr_i_reg[14]_i_1__1_n_3\,
      PROPG => \ref_clk_cntr_i_reg[15]_i_1__1_n_3\,
      PROPH => \ref_clk_cntr_i_reg[15]_i_3__1_n_3\
    );
\ref_clk_cntr_i_reg[15]_i_3__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"00000000FF000000"
    )
        port map (
      GE => \ref_clk_cntr_i_reg[15]_i_3__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => '0',
      I4 => '0',
      O51 => \ref_clk_cntr_i_reg[15]_i_3__1_n_1\,
      O52 => \ref_clk_cntr_i_reg[15]_i_3__1_n_2\,
      PROP => \ref_clk_cntr_i_reg[15]_i_3__1_n_3\
    );
\ref_clk_cntr_i_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => \done_ref_i_i_1__1_n_0\,
      D => p_0_in(1),
      Q => \^src_in\(49),
      R => rst_cnt_ref
    );
\ref_clk_cntr_i_reg[1]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \ref_clk_cntr_i_reg[1]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \^src_in\(49),
      I4 => \^src_in\(48),
      O51 => p_0_in(1),
      O52 => \ref_clk_cntr_i_reg[1]_i_1__1_n_2\,
      PROP => \ref_clk_cntr_i_reg[1]_i_1__1_n_3\
    );
\ref_clk_cntr_i_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => \done_ref_i_i_1__1_n_0\,
      D => p_0_in(2),
      Q => \^src_in\(50),
      R => rst_cnt_ref
    );
\ref_clk_cntr_i_reg[2]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \ref_clk_cntr_i_reg[2]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \^src_in\(50),
      I4 => \ref_clk_cntr_i_reg[1]_i_1__1_n_2\,
      O51 => p_0_in(2),
      O52 => \ref_clk_cntr_i_reg[2]_i_1__1_n_2\,
      PROP => \ref_clk_cntr_i_reg[2]_i_1__1_n_3\
    );
\ref_clk_cntr_i_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => \done_ref_i_i_1__1_n_0\,
      D => p_0_in(3),
      Q => \^src_in\(51),
      R => rst_cnt_ref
    );
\ref_clk_cntr_i_reg[3]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \ref_clk_cntr_i_reg[3]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \^src_in\(51),
      I4 => \ref_clk_cntr_i_reg[9]_i_2__1_n_0\,
      O51 => p_0_in(3),
      O52 => \ref_clk_cntr_i_reg[3]_i_1__1_n_2\,
      PROP => \ref_clk_cntr_i_reg[3]_i_1__1_n_3\
    );
\ref_clk_cntr_i_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => \done_ref_i_i_1__1_n_0\,
      D => p_0_in(4),
      Q => \^src_in\(52),
      R => rst_cnt_ref
    );
\ref_clk_cntr_i_reg[4]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \ref_clk_cntr_i_reg[4]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \^src_in\(52),
      I4 => \ref_clk_cntr_i_reg[3]_i_1__1_n_2\,
      O51 => p_0_in(4),
      O52 => \ref_clk_cntr_i_reg[4]_i_1__1_n_2\,
      PROP => \ref_clk_cntr_i_reg[4]_i_1__1_n_3\
    );
\ref_clk_cntr_i_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => \done_ref_i_i_1__1_n_0\,
      D => p_0_in(5),
      Q => \^src_in\(53),
      R => rst_cnt_ref
    );
\ref_clk_cntr_i_reg[5]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \ref_clk_cntr_i_reg[5]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \^src_in\(53),
      I4 => \ref_clk_cntr_i_reg[9]_i_2__1_n_1\,
      O51 => p_0_in(5),
      O52 => \ref_clk_cntr_i_reg[5]_i_1__1_n_2\,
      PROP => \ref_clk_cntr_i_reg[5]_i_1__1_n_3\
    );
\ref_clk_cntr_i_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => \done_ref_i_i_1__1_n_0\,
      D => p_0_in(6),
      Q => \^src_in\(54),
      R => rst_cnt_ref
    );
\ref_clk_cntr_i_reg[6]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \ref_clk_cntr_i_reg[6]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \^src_in\(54),
      I4 => \ref_clk_cntr_i_reg[5]_i_1__1_n_2\,
      O51 => p_0_in(6),
      O52 => \ref_clk_cntr_i_reg[6]_i_1__1_n_2\,
      PROP => \ref_clk_cntr_i_reg[6]_i_1__1_n_3\
    );
\ref_clk_cntr_i_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => \done_ref_i_i_1__1_n_0\,
      D => p_0_in(7),
      Q => \^src_in\(55),
      R => rst_cnt_ref
    );
\ref_clk_cntr_i_reg[7]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \ref_clk_cntr_i_reg[7]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \^src_in\(55),
      I4 => \ref_clk_cntr_i_reg[9]_i_2__1_n_2\,
      O51 => p_0_in(7),
      O52 => \ref_clk_cntr_i_reg[7]_i_1__1_n_2\,
      PROP => \ref_clk_cntr_i_reg[7]_i_1__1_n_3\
    );
\ref_clk_cntr_i_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => \done_ref_i_i_1__1_n_0\,
      D => p_0_in(8),
      Q => \^src_in\(56),
      R => rst_cnt_ref
    );
\ref_clk_cntr_i_reg[8]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \ref_clk_cntr_i_reg[8]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \^src_in\(56),
      I4 => \ref_clk_cntr_i_reg[7]_i_1__1_n_2\,
      O51 => p_0_in(8),
      O52 => \ref_clk_cntr_i_reg[8]_i_1__1_n_2\,
      PROP => \ref_clk_cntr_i_reg[8]_i_1__1_n_3\
    );
\ref_clk_cntr_i_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => \done_ref_i_i_1__1_n_0\,
      D => p_0_in(9),
      Q => \^src_in\(57),
      R => rst_cnt_ref
    );
\ref_clk_cntr_i_reg[9]_i_1__1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \ref_clk_cntr_i_reg[9]_i_1__1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \^src_in\(57),
      I4 => \ref_clk_cntr_i_reg[9]_i_2__1_n_3\,
      O51 => p_0_in(9),
      O52 => \ref_clk_cntr_i_reg[9]_i_1__1_n_2\,
      PROP => \ref_clk_cntr_i_reg[9]_i_1__1_n_3\
    );
\ref_clk_cntr_i_reg[9]_i_2__1\: unisim.vcomponents.LOOKAHEAD8
    generic map(
      LOOKB => "FALSE",
      LOOKD => "TRUE",
      LOOKF => "TRUE",
      LOOKH => "TRUE"
    )
        port map (
      CIN => \^src_in\(48),
      COUTB => \ref_clk_cntr_i_reg[9]_i_2__1_n_0\,
      COUTD => \ref_clk_cntr_i_reg[9]_i_2__1_n_1\,
      COUTF => \ref_clk_cntr_i_reg[9]_i_2__1_n_2\,
      COUTH => \ref_clk_cntr_i_reg[9]_i_2__1_n_3\,
      CYA => \ref_clk_cntr_i_reg[1]_i_1__1_n_2\,
      CYB => \ref_clk_cntr_i_reg[2]_i_1__1_n_2\,
      CYC => \ref_clk_cntr_i_reg[3]_i_1__1_n_2\,
      CYD => \ref_clk_cntr_i_reg[4]_i_1__1_n_2\,
      CYE => \ref_clk_cntr_i_reg[5]_i_1__1_n_2\,
      CYF => \ref_clk_cntr_i_reg[6]_i_1__1_n_2\,
      CYG => \ref_clk_cntr_i_reg[7]_i_1__1_n_2\,
      CYH => \ref_clk_cntr_i_reg[8]_i_1__1_n_2\,
      GEA => \ref_clk_cntr_i_reg[1]_i_1__1_n_0\,
      GEB => \ref_clk_cntr_i_reg[2]_i_1__1_n_0\,
      GEC => \ref_clk_cntr_i_reg[3]_i_1__1_n_0\,
      GED => \ref_clk_cntr_i_reg[4]_i_1__1_n_0\,
      GEE => \ref_clk_cntr_i_reg[5]_i_1__1_n_0\,
      GEF => \ref_clk_cntr_i_reg[6]_i_1__1_n_0\,
      GEG => \ref_clk_cntr_i_reg[7]_i_1__1_n_0\,
      GEH => \ref_clk_cntr_i_reg[8]_i_1__1_n_0\,
      PROPA => \ref_clk_cntr_i_reg[1]_i_1__1_n_3\,
      PROPB => \ref_clk_cntr_i_reg[2]_i_1__1_n_3\,
      PROPC => \ref_clk_cntr_i_reg[3]_i_1__1_n_3\,
      PROPD => \ref_clk_cntr_i_reg[4]_i_1__1_n_3\,
      PROPE => \ref_clk_cntr_i_reg[5]_i_1__1_n_3\,
      PROPF => \ref_clk_cntr_i_reg[6]_i_1__1_n_3\,
      PROPG => \ref_clk_cntr_i_reg[7]_i_1__1_n_3\,
      PROPH => \ref_clk_cntr_i_reg[8]_i_1__1_n_3\
    );
\rst_cnt_ref_i_1__1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => dest_arst,
      I1 => \rst_cnt_reg[0]_0\,
      O => rst_cnt_c
    );
rst_cnt_ref_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => '1',
      D => rst_cnt_c,
      Q => rst_cnt_ref,
      R => '0'
    );
\rst_cnt_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => '1',
      D => rst_cnt_c,
      Q => rst_cnt(0),
      R => '0'
    );
\rst_cnt_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => '1',
      D => rst_cnt_c,
      Q => rst_cnt(1),
      R => '0'
    );
\rst_cnt_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => '1',
      D => rst_cnt_c,
      Q => rst_cnt(2),
      R => '0'
    );
\rst_cnt_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => '1',
      D => rst_cnt_c,
      Q => rst_cnt(3),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_shell_utils_ucc_v1_0_0_frequency_counter__xdcDup__1\ is
  port (
    src_in : out STD_LOGIC_VECTOR ( 64 downto 0 );
    aclk_kernel_cont_00 : in STD_LOGIC;
    aclk_freerun : in STD_LOGIC;
    aclk_kernel_00 : in STD_LOGIC;
    dest_arst : in STD_LOGIC;
    \rst_cnt_reg[0]_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_shell_utils_ucc_v1_0_0_frequency_counter__xdcDup__1\ : entity is "shell_utils_ucc_v1_0_0_frequency_counter";
end \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_shell_utils_ucc_v1_0_0_frequency_counter__xdcDup__1\;

architecture STRUCTURE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_shell_utils_ucc_v1_0_0_frequency_counter__xdcDup__1\ is
  signal \CLKS[0].test_clk_cntr[0][0]_i_1__0_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][0]_i_2__0_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][0]_i_2__0_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][0]_i_2__0_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][0]_i_2__0_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][10]_i_1__0_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][10]_i_1__0_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][10]_i_1__0_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][10]_i_1__0_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][10]_i_2__0_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][10]_i_2__0_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][10]_i_2__0_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][10]_i_2__0_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][11]_i_1__0_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][11]_i_1__0_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][11]_i_1__0_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][11]_i_1__0_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][12]_i_1__0_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][12]_i_1__0_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][12]_i_1__0_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][12]_i_1__0_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][13]_i_1__0_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][13]_i_1__0_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][13]_i_1__0_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][13]_i_1__0_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][14]_i_1__0_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][14]_i_1__0_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][14]_i_1__0_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][14]_i_1__0_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][15]_i_1__0_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][15]_i_1__0_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][15]_i_1__0_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][15]_i_1__0_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][16]_i_1__0_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][16]_i_1__0_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][16]_i_1__0_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][16]_i_1__0_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][17]_i_1__0_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][17]_i_1__0_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][17]_i_1__0_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][17]_i_1__0_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][18]_i_1__0_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][18]_i_1__0_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][18]_i_1__0_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][18]_i_1__0_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][18]_i_2__0_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][18]_i_2__0_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][18]_i_2__0_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][18]_i_2__0_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][18]_i_3__0_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][18]_i_3__0_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][18]_i_3__0_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][18]_i_3__0_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][19]_i_1__0_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][19]_i_1__0_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][19]_i_1__0_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][19]_i_1__0_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][1]_i_1__0_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][1]_i_1__0_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][1]_i_1__0_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][1]_i_1__0_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][20]_i_1__0_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][20]_i_1__0_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][20]_i_1__0_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][20]_i_1__0_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][21]_i_1__0_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][21]_i_1__0_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][21]_i_1__0_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][21]_i_1__0_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][22]_i_1__0_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][22]_i_1__0_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][22]_i_1__0_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][22]_i_1__0_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][2]_i_1__0_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][2]_i_1__0_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][2]_i_1__0_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][2]_i_1__0_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][2]_i_2__0_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][2]_i_2__0_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][2]_i_2__0_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][2]_i_2__0_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][3]_i_1__0_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][3]_i_1__0_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][3]_i_1__0_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][3]_i_1__0_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][4]_i_1__0_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][4]_i_1__0_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][4]_i_1__0_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][4]_i_1__0_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][5]_i_1__0_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][5]_i_1__0_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][5]_i_1__0_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][5]_i_1__0_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][6]_i_1__0_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][6]_i_1__0_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][6]_i_1__0_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][6]_i_1__0_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][7]_i_1__0_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][7]_i_1__0_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][7]_i_1__0_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][7]_i_1__0_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][8]_i_1__0_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][8]_i_1__0_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][8]_i_1__0_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][8]_i_1__0_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][9]_i_1__0_n_0\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][9]_i_1__0_n_1\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][9]_i_1__0_n_2\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0][9]_i_1__0_n_3\ : STD_LOGIC;
  signal \CLKS[0].test_clk_cntr_reg[0]_0\ : STD_LOGIC_VECTOR ( 22 downto 0 );
  signal \CLKS[1].test_clk_cntr[1][0]_i_1_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][0]_i_2_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][0]_i_2_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][0]_i_2_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][0]_i_2_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][10]_i_1_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][10]_i_1_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][10]_i_1_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][10]_i_1_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][10]_i_2_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][10]_i_2_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][10]_i_2_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][10]_i_2_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][11]_i_1_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][11]_i_1_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][11]_i_1_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][11]_i_1_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][12]_i_1_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][12]_i_1_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][12]_i_1_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][12]_i_1_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][13]_i_1_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][13]_i_1_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][13]_i_1_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][13]_i_1_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][14]_i_1_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][14]_i_1_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][14]_i_1_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][14]_i_1_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][15]_i_1_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][15]_i_1_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][15]_i_1_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][15]_i_1_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][16]_i_1_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][16]_i_1_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][16]_i_1_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][16]_i_1_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][17]_i_1_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][17]_i_1_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][17]_i_1_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][17]_i_1_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][18]_i_1_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][18]_i_1_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][18]_i_1_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][18]_i_1_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][18]_i_2_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][18]_i_2_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][18]_i_2_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][18]_i_2_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][18]_i_3_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][18]_i_3_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][18]_i_3_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][18]_i_3_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][19]_i_1_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][19]_i_1_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][19]_i_1_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][19]_i_1_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][1]_i_1_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][1]_i_1_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][1]_i_1_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][1]_i_1_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][20]_i_1_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][20]_i_1_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][20]_i_1_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][20]_i_1_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][21]_i_1_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][21]_i_1_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][21]_i_1_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][21]_i_1_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][22]_i_1_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][22]_i_1_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][22]_i_1_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][22]_i_1_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][2]_i_1_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][2]_i_1_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][2]_i_1_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][2]_i_1_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][2]_i_2_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][2]_i_2_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][2]_i_2_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][2]_i_2_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][3]_i_1_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][3]_i_1_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][3]_i_1_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][3]_i_1_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][4]_i_1_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][4]_i_1_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][4]_i_1_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][4]_i_1_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][5]_i_1_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][5]_i_1_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][5]_i_1_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][5]_i_1_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][6]_i_1_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][6]_i_1_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][6]_i_1_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][6]_i_1_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][7]_i_1_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][7]_i_1_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][7]_i_1_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][7]_i_1_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][8]_i_1_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][8]_i_1_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][8]_i_1_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][8]_i_1_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][9]_i_1_n_0\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][9]_i_1_n_1\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][9]_i_1_n_2\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1][9]_i_1_n_3\ : STD_LOGIC;
  signal \CLKS[1].test_clk_cntr_reg[1]_1\ : STD_LOGIC_VECTOR ( 22 downto 0 );
  signal done : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of done : signal is "true";
  signal done_c : STD_LOGIC;
  signal done_ref_i_i_3_n_0 : STD_LOGIC;
  signal done_ref_i_i_4_n_0 : STD_LOGIC;
  signal done_synced_0 : STD_LOGIC;
  signal done_synced_1 : STD_LOGIC;
  signal \genblk1[0].cdc_freq_cntr_kernel_i_10_n_0\ : STD_LOGIC;
  signal \genblk1[0].cdc_freq_cntr_kernel_i_3_n_0\ : STD_LOGIC;
  signal \genblk1[0].cdc_freq_cntr_kernel_i_4_n_0\ : STD_LOGIC;
  signal \genblk1[0].cdc_freq_cntr_kernel_i_5_n_0\ : STD_LOGIC;
  signal \genblk1[0].cdc_freq_cntr_kernel_i_6_n_0\ : STD_LOGIC;
  signal \genblk1[0].cdc_freq_cntr_kernel_i_7_n_0\ : STD_LOGIC;
  signal \genblk1[0].cdc_freq_cntr_kernel_i_8_n_0\ : STD_LOGIC;
  signal \genblk1[0].cdc_freq_cntr_kernel_i_9_n_0\ : STD_LOGIC;
  signal p_0_in : STD_LOGIC_VECTOR ( 15 downto 1 );
  signal \ref_clk_cntr_i[0]_i_1_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[10]_i_1_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[10]_i_1_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[10]_i_1_n_3\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[11]_i_1_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[11]_i_1_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[11]_i_1_n_3\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[12]_i_1_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[12]_i_1_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[12]_i_1_n_3\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[13]_i_1_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[13]_i_1_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[13]_i_1_n_3\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[14]_i_1_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[14]_i_1_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[14]_i_1_n_3\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[15]_i_1_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[15]_i_1_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[15]_i_1_n_3\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[15]_i_2_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[15]_i_2_n_1\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[15]_i_2_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[15]_i_2_n_3\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[15]_i_3_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[15]_i_3_n_1\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[15]_i_3_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[15]_i_3_n_3\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[1]_i_1_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[1]_i_1_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[1]_i_1_n_3\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[2]_i_1_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[2]_i_1_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[2]_i_1_n_3\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[3]_i_1_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[3]_i_1_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[3]_i_1_n_3\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[4]_i_1_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[4]_i_1_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[4]_i_1_n_3\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[5]_i_1_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[5]_i_1_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[5]_i_1_n_3\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[6]_i_1_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[6]_i_1_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[6]_i_1_n_3\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[7]_i_1_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[7]_i_1_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[7]_i_1_n_3\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[8]_i_1_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[8]_i_1_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[8]_i_1_n_3\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[9]_i_1_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[9]_i_1_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[9]_i_1_n_3\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[9]_i_2_n_0\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[9]_i_2_n_1\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[9]_i_2_n_2\ : STD_LOGIC;
  signal \ref_clk_cntr_i_reg[9]_i_2_n_3\ : STD_LOGIC;
  signal rst_cnt : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute RTL_KEEP of rst_cnt : signal is "true";
  signal rst_cnt_c : STD_LOGIC;
  signal rst_cnt_ref : STD_LOGIC;
  attribute RTL_KEEP of rst_cnt_ref : signal is "true";
  signal rst_cnt_synced_0 : STD_LOGIC;
  signal rst_cnt_synced_1 : STD_LOGIC;
  signal sel : STD_LOGIC;
  signal \^src_in\ : STD_LOGIC_VECTOR ( 64 downto 0 );
  attribute DEST_SYNC_FF : integer;
  attribute DEST_SYNC_FF of \CLKS[0].cdc_done\ : label is 3;
  attribute INIT_SYNC_FF : integer;
  attribute INIT_SYNC_FF of \CLKS[0].cdc_done\ : label is 0;
  attribute SIM_ASSERT_CHK : integer;
  attribute SIM_ASSERT_CHK of \CLKS[0].cdc_done\ : label is 0;
  attribute SRC_INPUT_REG : integer;
  attribute SRC_INPUT_REG of \CLKS[0].cdc_done\ : label is 0;
  attribute VERSION : integer;
  attribute VERSION of \CLKS[0].cdc_done\ : label is 0;
  attribute WIDTH : integer;
  attribute WIDTH of \CLKS[0].cdc_done\ : label is 1;
  attribute XPM_CDC : string;
  attribute XPM_CDC of \CLKS[0].cdc_done\ : label is "ARRAY_SINGLE";
  attribute XPM_MODULE : string;
  attribute XPM_MODULE of \CLKS[0].cdc_done\ : label is "TRUE";
  attribute DEF_VAL : string;
  attribute DEF_VAL of \CLKS[0].cdc_rst_cn0\ : label is "1'b0";
  attribute DEST_SYNC_FF of \CLKS[0].cdc_rst_cn0\ : label is 3;
  attribute INIT_SYNC_FF of \CLKS[0].cdc_rst_cn0\ : label is 0;
  attribute INV_DEF_VAL : string;
  attribute INV_DEF_VAL of \CLKS[0].cdc_rst_cn0\ : label is "1'b1";
  attribute RST_ACTIVE_HIGH : integer;
  attribute RST_ACTIVE_HIGH of \CLKS[0].cdc_rst_cn0\ : label is 1;
  attribute VERSION of \CLKS[0].cdc_rst_cn0\ : label is 0;
  attribute XPM_CDC of \CLKS[0].cdc_rst_cn0\ : label is "ASYNC_RST";
  attribute XPM_MODULE of \CLKS[0].cdc_rst_cn0\ : label is "TRUE";
  attribute DEST_SYNC_FF of \CLKS[0].cdc_test_clk0_cntr\ : label is 2;
  attribute INIT_SYNC_FF of \CLKS[0].cdc_test_clk0_cntr\ : label is 0;
  attribute SIM_ASSERT_CHK of \CLKS[0].cdc_test_clk0_cntr\ : label is 0;
  attribute SRC_INPUT_REG of \CLKS[0].cdc_test_clk0_cntr\ : label is 0;
  attribute VERSION of \CLKS[0].cdc_test_clk0_cntr\ : label is 0;
  attribute WIDTH of \CLKS[0].cdc_test_clk0_cntr\ : label is 23;
  attribute XPM_CDC of \CLKS[0].cdc_test_clk0_cntr\ : label is "ARRAY_SINGLE";
  attribute XPM_MODULE of \CLKS[0].cdc_test_clk0_cntr\ : label is "TRUE";
  attribute DEST_SYNC_FF of \CLKS[1].cdc_done\ : label is 3;
  attribute INIT_SYNC_FF of \CLKS[1].cdc_done\ : label is 0;
  attribute SIM_ASSERT_CHK of \CLKS[1].cdc_done\ : label is 0;
  attribute SRC_INPUT_REG of \CLKS[1].cdc_done\ : label is 0;
  attribute VERSION of \CLKS[1].cdc_done\ : label is 0;
  attribute WIDTH of \CLKS[1].cdc_done\ : label is 1;
  attribute XPM_CDC of \CLKS[1].cdc_done\ : label is "ARRAY_SINGLE";
  attribute XPM_MODULE of \CLKS[1].cdc_done\ : label is "TRUE";
  attribute DEF_VAL of \CLKS[1].cdc_rst_cn0\ : label is "1'b0";
  attribute DEST_SYNC_FF of \CLKS[1].cdc_rst_cn0\ : label is 3;
  attribute INIT_SYNC_FF of \CLKS[1].cdc_rst_cn0\ : label is 0;
  attribute INV_DEF_VAL of \CLKS[1].cdc_rst_cn0\ : label is "1'b1";
  attribute RST_ACTIVE_HIGH of \CLKS[1].cdc_rst_cn0\ : label is 1;
  attribute VERSION of \CLKS[1].cdc_rst_cn0\ : label is 0;
  attribute XPM_CDC of \CLKS[1].cdc_rst_cn0\ : label is "ASYNC_RST";
  attribute XPM_MODULE of \CLKS[1].cdc_rst_cn0\ : label is "TRUE";
  attribute DEST_SYNC_FF of \CLKS[1].cdc_test_clk0_cntr\ : label is 2;
  attribute INIT_SYNC_FF of \CLKS[1].cdc_test_clk0_cntr\ : label is 0;
  attribute SIM_ASSERT_CHK of \CLKS[1].cdc_test_clk0_cntr\ : label is 0;
  attribute SRC_INPUT_REG of \CLKS[1].cdc_test_clk0_cntr\ : label is 0;
  attribute VERSION of \CLKS[1].cdc_test_clk0_cntr\ : label is 0;
  attribute WIDTH of \CLKS[1].cdc_test_clk0_cntr\ : label is 23;
  attribute XPM_CDC of \CLKS[1].cdc_test_clk0_cntr\ : label is "ARRAY_SINGLE";
  attribute XPM_MODULE of \CLKS[1].cdc_test_clk0_cntr\ : label is "TRUE";
  attribute KEEP : string;
  attribute KEEP of \done_reg[0]\ : label is "yes";
  attribute KEEP of \done_reg[1]\ : label is "yes";
  attribute KEEP of \done_reg[2]\ : label is "yes";
  attribute KEEP of \done_reg[3]\ : label is "yes";
  attribute KEEP of rst_cnt_ref_reg : label is "yes";
  attribute KEEP of \rst_cnt_reg[0]\ : label is "yes";
  attribute KEEP of \rst_cnt_reg[1]\ : label is "yes";
  attribute KEEP of \rst_cnt_reg[2]\ : label is "yes";
  attribute KEEP of \rst_cnt_reg[3]\ : label is "yes";
begin
  src_in(64 downto 0) <= \^src_in\(64 downto 0);
\CLKS[0].cdc_done\: entity work.\decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__6\
     port map (
      dest_clk => aclk_kernel_cont_00,
      dest_out(0) => done_synced_0,
      src_clk => '0',
      src_in(0) => done(0)
    );
\CLKS[0].cdc_rst_cn0\: entity work.\decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__2\
     port map (
      dest_arst => rst_cnt_synced_0,
      dest_clk => aclk_kernel_cont_00,
      src_arst => rst_cnt(0)
    );
\CLKS[0].cdc_test_clk0_cntr\: entity work.\decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__6\
     port map (
      dest_clk => aclk_freerun,
      dest_out(22 downto 0) => \^src_in\(46 downto 24),
      src_clk => '0',
      src_in(22 downto 0) => \CLKS[0].test_clk_cntr_reg[0]_0\(22 downto 0)
    );
\CLKS[0].test_clk_cntr[0][0]_i_1__0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => done_synced_0,
      O => \CLKS[0].test_clk_cntr[0][0]_i_1__0_n_0\
    );
\CLKS[0].test_clk_cntr_reg[0][0]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_cont_00,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1__0_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][0]_i_2__0_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(0)
    );
\CLKS[0].test_clk_cntr_reg[0][0]_i_2__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FFFFFF00FF0000FF"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][0]_i_2__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(0),
      I4 => '0',
      O51 => \CLKS[0].test_clk_cntr_reg[0][0]_i_2__0_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][0]_i_2__0_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][0]_i_2__0_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][10]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_cont_00,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1__0_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][10]_i_1__0_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(10)
    );
\CLKS[0].test_clk_cntr_reg[0][10]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][10]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(10),
      I4 => \CLKS[0].test_clk_cntr_reg[0][10]_i_2__0_n_0\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][10]_i_1__0_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][10]_i_1__0_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][10]_i_1__0_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][10]_i_2__0\: unisim.vcomponents.LOOKAHEAD8
    generic map(
      LOOKB => "TRUE",
      LOOKD => "TRUE",
      LOOKF => "TRUE",
      LOOKH => "TRUE"
    )
        port map (
      CIN => \CLKS[0].test_clk_cntr_reg[0][2]_i_2__0_n_3\,
      COUTB => \CLKS[0].test_clk_cntr_reg[0][10]_i_2__0_n_0\,
      COUTD => \CLKS[0].test_clk_cntr_reg[0][10]_i_2__0_n_1\,
      COUTF => \CLKS[0].test_clk_cntr_reg[0][10]_i_2__0_n_2\,
      COUTH => \CLKS[0].test_clk_cntr_reg[0][10]_i_2__0_n_3\,
      CYA => \CLKS[0].test_clk_cntr_reg[0][8]_i_1__0_n_2\,
      CYB => \CLKS[0].test_clk_cntr_reg[0][9]_i_1__0_n_2\,
      CYC => \CLKS[0].test_clk_cntr_reg[0][10]_i_1__0_n_2\,
      CYD => \CLKS[0].test_clk_cntr_reg[0][11]_i_1__0_n_2\,
      CYE => \CLKS[0].test_clk_cntr_reg[0][12]_i_1__0_n_2\,
      CYF => \CLKS[0].test_clk_cntr_reg[0][13]_i_1__0_n_2\,
      CYG => \CLKS[0].test_clk_cntr_reg[0][14]_i_1__0_n_2\,
      CYH => \CLKS[0].test_clk_cntr_reg[0][15]_i_1__0_n_2\,
      GEA => \CLKS[0].test_clk_cntr_reg[0][8]_i_1__0_n_0\,
      GEB => \CLKS[0].test_clk_cntr_reg[0][9]_i_1__0_n_0\,
      GEC => \CLKS[0].test_clk_cntr_reg[0][10]_i_1__0_n_0\,
      GED => \CLKS[0].test_clk_cntr_reg[0][11]_i_1__0_n_0\,
      GEE => \CLKS[0].test_clk_cntr_reg[0][12]_i_1__0_n_0\,
      GEF => \CLKS[0].test_clk_cntr_reg[0][13]_i_1__0_n_0\,
      GEG => \CLKS[0].test_clk_cntr_reg[0][14]_i_1__0_n_0\,
      GEH => \CLKS[0].test_clk_cntr_reg[0][15]_i_1__0_n_0\,
      PROPA => \CLKS[0].test_clk_cntr_reg[0][8]_i_1__0_n_3\,
      PROPB => \CLKS[0].test_clk_cntr_reg[0][9]_i_1__0_n_3\,
      PROPC => \CLKS[0].test_clk_cntr_reg[0][10]_i_1__0_n_3\,
      PROPD => \CLKS[0].test_clk_cntr_reg[0][11]_i_1__0_n_3\,
      PROPE => \CLKS[0].test_clk_cntr_reg[0][12]_i_1__0_n_3\,
      PROPF => \CLKS[0].test_clk_cntr_reg[0][13]_i_1__0_n_3\,
      PROPG => \CLKS[0].test_clk_cntr_reg[0][14]_i_1__0_n_3\,
      PROPH => \CLKS[0].test_clk_cntr_reg[0][15]_i_1__0_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][11]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_cont_00,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1__0_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][11]_i_1__0_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(11)
    );
\CLKS[0].test_clk_cntr_reg[0][11]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][11]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(11),
      I4 => \CLKS[0].test_clk_cntr_reg[0][10]_i_1__0_n_2\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][11]_i_1__0_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][11]_i_1__0_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][11]_i_1__0_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][12]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_cont_00,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1__0_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][12]_i_1__0_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(12)
    );
\CLKS[0].test_clk_cntr_reg[0][12]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][12]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(12),
      I4 => \CLKS[0].test_clk_cntr_reg[0][10]_i_2__0_n_1\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][12]_i_1__0_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][12]_i_1__0_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][12]_i_1__0_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][13]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_cont_00,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1__0_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][13]_i_1__0_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(13)
    );
\CLKS[0].test_clk_cntr_reg[0][13]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][13]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(13),
      I4 => \CLKS[0].test_clk_cntr_reg[0][12]_i_1__0_n_2\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][13]_i_1__0_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][13]_i_1__0_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][13]_i_1__0_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][14]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_cont_00,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1__0_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][14]_i_1__0_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(14)
    );
\CLKS[0].test_clk_cntr_reg[0][14]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][14]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(14),
      I4 => \CLKS[0].test_clk_cntr_reg[0][10]_i_2__0_n_2\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][14]_i_1__0_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][14]_i_1__0_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][14]_i_1__0_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][15]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_cont_00,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1__0_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][15]_i_1__0_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(15)
    );
\CLKS[0].test_clk_cntr_reg[0][15]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][15]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(15),
      I4 => \CLKS[0].test_clk_cntr_reg[0][14]_i_1__0_n_2\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][15]_i_1__0_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][15]_i_1__0_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][15]_i_1__0_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][16]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_cont_00,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1__0_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][16]_i_1__0_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(16)
    );
\CLKS[0].test_clk_cntr_reg[0][16]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][16]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(16),
      I4 => \CLKS[0].test_clk_cntr_reg[0][10]_i_2__0_n_3\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][16]_i_1__0_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][16]_i_1__0_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][16]_i_1__0_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][17]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_cont_00,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1__0_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][17]_i_1__0_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(17)
    );
\CLKS[0].test_clk_cntr_reg[0][17]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][17]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(17),
      I4 => \CLKS[0].test_clk_cntr_reg[0][16]_i_1__0_n_2\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][17]_i_1__0_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][17]_i_1__0_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][17]_i_1__0_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][18]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_cont_00,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1__0_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][18]_i_1__0_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(18)
    );
\CLKS[0].test_clk_cntr_reg[0][18]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][18]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(18),
      I4 => \CLKS[0].test_clk_cntr_reg[0][18]_i_2__0_n_0\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][18]_i_1__0_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][18]_i_1__0_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][18]_i_1__0_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][18]_i_2__0\: unisim.vcomponents.LOOKAHEAD8
    generic map(
      LOOKB => "TRUE",
      LOOKD => "TRUE",
      LOOKF => "TRUE",
      LOOKH => "TRUE"
    )
        port map (
      CIN => \CLKS[0].test_clk_cntr_reg[0][10]_i_2__0_n_3\,
      COUTB => \CLKS[0].test_clk_cntr_reg[0][18]_i_2__0_n_0\,
      COUTD => \CLKS[0].test_clk_cntr_reg[0][18]_i_2__0_n_1\,
      COUTF => \CLKS[0].test_clk_cntr_reg[0][18]_i_2__0_n_2\,
      COUTH => \CLKS[0].test_clk_cntr_reg[0][18]_i_2__0_n_3\,
      CYA => \CLKS[0].test_clk_cntr_reg[0][16]_i_1__0_n_2\,
      CYB => \CLKS[0].test_clk_cntr_reg[0][17]_i_1__0_n_2\,
      CYC => \CLKS[0].test_clk_cntr_reg[0][18]_i_1__0_n_2\,
      CYD => \CLKS[0].test_clk_cntr_reg[0][19]_i_1__0_n_2\,
      CYE => \CLKS[0].test_clk_cntr_reg[0][20]_i_1__0_n_2\,
      CYF => \CLKS[0].test_clk_cntr_reg[0][21]_i_1__0_n_2\,
      CYG => \CLKS[0].test_clk_cntr_reg[0][22]_i_1__0_n_2\,
      CYH => \CLKS[0].test_clk_cntr_reg[0][18]_i_3__0_n_2\,
      GEA => \CLKS[0].test_clk_cntr_reg[0][16]_i_1__0_n_0\,
      GEB => \CLKS[0].test_clk_cntr_reg[0][17]_i_1__0_n_0\,
      GEC => \CLKS[0].test_clk_cntr_reg[0][18]_i_1__0_n_0\,
      GED => \CLKS[0].test_clk_cntr_reg[0][19]_i_1__0_n_0\,
      GEE => \CLKS[0].test_clk_cntr_reg[0][20]_i_1__0_n_0\,
      GEF => \CLKS[0].test_clk_cntr_reg[0][21]_i_1__0_n_0\,
      GEG => \CLKS[0].test_clk_cntr_reg[0][22]_i_1__0_n_0\,
      GEH => \CLKS[0].test_clk_cntr_reg[0][18]_i_3__0_n_0\,
      PROPA => \CLKS[0].test_clk_cntr_reg[0][16]_i_1__0_n_3\,
      PROPB => \CLKS[0].test_clk_cntr_reg[0][17]_i_1__0_n_3\,
      PROPC => \CLKS[0].test_clk_cntr_reg[0][18]_i_1__0_n_3\,
      PROPD => \CLKS[0].test_clk_cntr_reg[0][19]_i_1__0_n_3\,
      PROPE => \CLKS[0].test_clk_cntr_reg[0][20]_i_1__0_n_3\,
      PROPF => \CLKS[0].test_clk_cntr_reg[0][21]_i_1__0_n_3\,
      PROPG => \CLKS[0].test_clk_cntr_reg[0][22]_i_1__0_n_3\,
      PROPH => \CLKS[0].test_clk_cntr_reg[0][18]_i_3__0_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][18]_i_3__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"00000000FF000000"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][18]_i_3__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => '0',
      I4 => '0',
      O51 => \CLKS[0].test_clk_cntr_reg[0][18]_i_3__0_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][18]_i_3__0_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][18]_i_3__0_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][19]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_cont_00,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1__0_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][19]_i_1__0_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(19)
    );
\CLKS[0].test_clk_cntr_reg[0][19]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][19]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(19),
      I4 => \CLKS[0].test_clk_cntr_reg[0][18]_i_1__0_n_2\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][19]_i_1__0_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][19]_i_1__0_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][19]_i_1__0_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][1]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_cont_00,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1__0_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][1]_i_1__0_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(1)
    );
\CLKS[0].test_clk_cntr_reg[0][1]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][1]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(1),
      I4 => \CLKS[0].test_clk_cntr_reg[0][0]_i_2__0_n_2\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][1]_i_1__0_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][1]_i_1__0_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][1]_i_1__0_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][20]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_cont_00,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1__0_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][20]_i_1__0_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(20)
    );
\CLKS[0].test_clk_cntr_reg[0][20]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][20]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(20),
      I4 => \CLKS[0].test_clk_cntr_reg[0][18]_i_2__0_n_1\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][20]_i_1__0_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][20]_i_1__0_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][20]_i_1__0_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][21]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_cont_00,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1__0_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][21]_i_1__0_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(21)
    );
\CLKS[0].test_clk_cntr_reg[0][21]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][21]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(21),
      I4 => \CLKS[0].test_clk_cntr_reg[0][20]_i_1__0_n_2\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][21]_i_1__0_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][21]_i_1__0_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][21]_i_1__0_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][22]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_cont_00,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1__0_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][22]_i_1__0_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(22)
    );
\CLKS[0].test_clk_cntr_reg[0][22]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00FF0000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][22]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(22),
      I4 => \CLKS[0].test_clk_cntr_reg[0][18]_i_2__0_n_2\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][22]_i_1__0_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][22]_i_1__0_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][22]_i_1__0_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][2]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_cont_00,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1__0_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][2]_i_1__0_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(2)
    );
\CLKS[0].test_clk_cntr_reg[0][2]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][2]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(2),
      I4 => \CLKS[0].test_clk_cntr_reg[0][2]_i_2__0_n_0\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][2]_i_1__0_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][2]_i_1__0_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][2]_i_1__0_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][2]_i_2__0\: unisim.vcomponents.LOOKAHEAD8
    generic map(
      LOOKB => "FALSE",
      LOOKD => "TRUE",
      LOOKF => "TRUE",
      LOOKH => "TRUE"
    )
        port map (
      CIN => '0',
      COUTB => \CLKS[0].test_clk_cntr_reg[0][2]_i_2__0_n_0\,
      COUTD => \CLKS[0].test_clk_cntr_reg[0][2]_i_2__0_n_1\,
      COUTF => \CLKS[0].test_clk_cntr_reg[0][2]_i_2__0_n_2\,
      COUTH => \CLKS[0].test_clk_cntr_reg[0][2]_i_2__0_n_3\,
      CYA => \CLKS[0].test_clk_cntr_reg[0][0]_i_2__0_n_2\,
      CYB => \CLKS[0].test_clk_cntr_reg[0][1]_i_1__0_n_2\,
      CYC => \CLKS[0].test_clk_cntr_reg[0][2]_i_1__0_n_2\,
      CYD => \CLKS[0].test_clk_cntr_reg[0][3]_i_1__0_n_2\,
      CYE => \CLKS[0].test_clk_cntr_reg[0][4]_i_1__0_n_2\,
      CYF => \CLKS[0].test_clk_cntr_reg[0][5]_i_1__0_n_2\,
      CYG => \CLKS[0].test_clk_cntr_reg[0][6]_i_1__0_n_2\,
      CYH => \CLKS[0].test_clk_cntr_reg[0][7]_i_1__0_n_2\,
      GEA => \CLKS[0].test_clk_cntr_reg[0][0]_i_2__0_n_0\,
      GEB => \CLKS[0].test_clk_cntr_reg[0][1]_i_1__0_n_0\,
      GEC => \CLKS[0].test_clk_cntr_reg[0][2]_i_1__0_n_0\,
      GED => \CLKS[0].test_clk_cntr_reg[0][3]_i_1__0_n_0\,
      GEE => \CLKS[0].test_clk_cntr_reg[0][4]_i_1__0_n_0\,
      GEF => \CLKS[0].test_clk_cntr_reg[0][5]_i_1__0_n_0\,
      GEG => \CLKS[0].test_clk_cntr_reg[0][6]_i_1__0_n_0\,
      GEH => \CLKS[0].test_clk_cntr_reg[0][7]_i_1__0_n_0\,
      PROPA => \CLKS[0].test_clk_cntr_reg[0][0]_i_2__0_n_3\,
      PROPB => \CLKS[0].test_clk_cntr_reg[0][1]_i_1__0_n_3\,
      PROPC => \CLKS[0].test_clk_cntr_reg[0][2]_i_1__0_n_3\,
      PROPD => \CLKS[0].test_clk_cntr_reg[0][3]_i_1__0_n_3\,
      PROPE => \CLKS[0].test_clk_cntr_reg[0][4]_i_1__0_n_3\,
      PROPF => \CLKS[0].test_clk_cntr_reg[0][5]_i_1__0_n_3\,
      PROPG => \CLKS[0].test_clk_cntr_reg[0][6]_i_1__0_n_3\,
      PROPH => \CLKS[0].test_clk_cntr_reg[0][7]_i_1__0_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][3]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_cont_00,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1__0_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][3]_i_1__0_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(3)
    );
\CLKS[0].test_clk_cntr_reg[0][3]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][3]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(3),
      I4 => \CLKS[0].test_clk_cntr_reg[0][2]_i_1__0_n_2\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][3]_i_1__0_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][3]_i_1__0_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][3]_i_1__0_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][4]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_cont_00,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1__0_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][4]_i_1__0_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(4)
    );
\CLKS[0].test_clk_cntr_reg[0][4]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][4]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(4),
      I4 => \CLKS[0].test_clk_cntr_reg[0][2]_i_2__0_n_1\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][4]_i_1__0_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][4]_i_1__0_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][4]_i_1__0_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][5]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_cont_00,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1__0_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][5]_i_1__0_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(5)
    );
\CLKS[0].test_clk_cntr_reg[0][5]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][5]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(5),
      I4 => \CLKS[0].test_clk_cntr_reg[0][4]_i_1__0_n_2\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][5]_i_1__0_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][5]_i_1__0_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][5]_i_1__0_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][6]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_cont_00,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1__0_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][6]_i_1__0_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(6)
    );
\CLKS[0].test_clk_cntr_reg[0][6]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][6]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(6),
      I4 => \CLKS[0].test_clk_cntr_reg[0][2]_i_2__0_n_2\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][6]_i_1__0_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][6]_i_1__0_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][6]_i_1__0_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][7]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_cont_00,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1__0_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][7]_i_1__0_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(7)
    );
\CLKS[0].test_clk_cntr_reg[0][7]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][7]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(7),
      I4 => \CLKS[0].test_clk_cntr_reg[0][6]_i_1__0_n_2\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][7]_i_1__0_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][7]_i_1__0_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][7]_i_1__0_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][8]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_cont_00,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1__0_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][8]_i_1__0_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(8)
    );
\CLKS[0].test_clk_cntr_reg[0][8]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][8]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(8),
      I4 => \CLKS[0].test_clk_cntr_reg[0][2]_i_2__0_n_3\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][8]_i_1__0_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][8]_i_1__0_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][8]_i_1__0_n_3\
    );
\CLKS[0].test_clk_cntr_reg[0][9]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_cont_00,
      CE => \CLKS[0].test_clk_cntr[0][0]_i_1__0_n_0\,
      CLR => rst_cnt_synced_0,
      D => \CLKS[0].test_clk_cntr_reg[0][9]_i_1__0_n_1\,
      Q => \CLKS[0].test_clk_cntr_reg[0]_0\(9)
    );
\CLKS[0].test_clk_cntr_reg[0][9]_i_1__0\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[0].test_clk_cntr_reg[0][9]_i_1__0_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[0].test_clk_cntr_reg[0]_0\(9),
      I4 => \CLKS[0].test_clk_cntr_reg[0][8]_i_1__0_n_2\,
      O51 => \CLKS[0].test_clk_cntr_reg[0][9]_i_1__0_n_1\,
      O52 => \CLKS[0].test_clk_cntr_reg[0][9]_i_1__0_n_2\,
      PROP => \CLKS[0].test_clk_cntr_reg[0][9]_i_1__0_n_3\
    );
\CLKS[1].cdc_done\: entity work.\decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0__7\
     port map (
      dest_clk => aclk_kernel_00,
      dest_out(0) => done_synced_1,
      src_clk => '0',
      src_in(0) => done(1)
    );
\CLKS[1].cdc_rst_cn0\: entity work.\decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__3\
     port map (
      dest_arst => rst_cnt_synced_1,
      dest_clk => aclk_kernel_00,
      src_arst => rst_cnt(1)
    );
\CLKS[1].cdc_test_clk0_cntr\: entity work.\decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized1__7\
     port map (
      dest_clk => aclk_freerun,
      dest_out(22 downto 0) => \^src_in\(22 downto 0),
      src_clk => '0',
      src_in(22 downto 0) => \CLKS[1].test_clk_cntr_reg[1]_1\(22 downto 0)
    );
\CLKS[1].test_clk_cntr[1][0]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => done_synced_1,
      O => \CLKS[1].test_clk_cntr[1][0]_i_1_n_0\
    );
\CLKS[1].test_clk_cntr_reg[1][0]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_00,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][0]_i_2_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(0)
    );
\CLKS[1].test_clk_cntr_reg[1][0]_i_2\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FFFFFF00FF0000FF"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][0]_i_2_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(0),
      I4 => '0',
      O51 => \CLKS[1].test_clk_cntr_reg[1][0]_i_2_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][0]_i_2_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][0]_i_2_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][10]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_00,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][10]_i_1_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(10)
    );
\CLKS[1].test_clk_cntr_reg[1][10]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][10]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(10),
      I4 => \CLKS[1].test_clk_cntr_reg[1][10]_i_2_n_0\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][10]_i_1_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][10]_i_1_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][10]_i_1_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][10]_i_2\: unisim.vcomponents.LOOKAHEAD8
    generic map(
      LOOKB => "TRUE",
      LOOKD => "TRUE",
      LOOKF => "TRUE",
      LOOKH => "TRUE"
    )
        port map (
      CIN => \CLKS[1].test_clk_cntr_reg[1][2]_i_2_n_3\,
      COUTB => \CLKS[1].test_clk_cntr_reg[1][10]_i_2_n_0\,
      COUTD => \CLKS[1].test_clk_cntr_reg[1][10]_i_2_n_1\,
      COUTF => \CLKS[1].test_clk_cntr_reg[1][10]_i_2_n_2\,
      COUTH => \CLKS[1].test_clk_cntr_reg[1][10]_i_2_n_3\,
      CYA => \CLKS[1].test_clk_cntr_reg[1][8]_i_1_n_2\,
      CYB => \CLKS[1].test_clk_cntr_reg[1][9]_i_1_n_2\,
      CYC => \CLKS[1].test_clk_cntr_reg[1][10]_i_1_n_2\,
      CYD => \CLKS[1].test_clk_cntr_reg[1][11]_i_1_n_2\,
      CYE => \CLKS[1].test_clk_cntr_reg[1][12]_i_1_n_2\,
      CYF => \CLKS[1].test_clk_cntr_reg[1][13]_i_1_n_2\,
      CYG => \CLKS[1].test_clk_cntr_reg[1][14]_i_1_n_2\,
      CYH => \CLKS[1].test_clk_cntr_reg[1][15]_i_1_n_2\,
      GEA => \CLKS[1].test_clk_cntr_reg[1][8]_i_1_n_0\,
      GEB => \CLKS[1].test_clk_cntr_reg[1][9]_i_1_n_0\,
      GEC => \CLKS[1].test_clk_cntr_reg[1][10]_i_1_n_0\,
      GED => \CLKS[1].test_clk_cntr_reg[1][11]_i_1_n_0\,
      GEE => \CLKS[1].test_clk_cntr_reg[1][12]_i_1_n_0\,
      GEF => \CLKS[1].test_clk_cntr_reg[1][13]_i_1_n_0\,
      GEG => \CLKS[1].test_clk_cntr_reg[1][14]_i_1_n_0\,
      GEH => \CLKS[1].test_clk_cntr_reg[1][15]_i_1_n_0\,
      PROPA => \CLKS[1].test_clk_cntr_reg[1][8]_i_1_n_3\,
      PROPB => \CLKS[1].test_clk_cntr_reg[1][9]_i_1_n_3\,
      PROPC => \CLKS[1].test_clk_cntr_reg[1][10]_i_1_n_3\,
      PROPD => \CLKS[1].test_clk_cntr_reg[1][11]_i_1_n_3\,
      PROPE => \CLKS[1].test_clk_cntr_reg[1][12]_i_1_n_3\,
      PROPF => \CLKS[1].test_clk_cntr_reg[1][13]_i_1_n_3\,
      PROPG => \CLKS[1].test_clk_cntr_reg[1][14]_i_1_n_3\,
      PROPH => \CLKS[1].test_clk_cntr_reg[1][15]_i_1_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][11]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_00,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][11]_i_1_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(11)
    );
\CLKS[1].test_clk_cntr_reg[1][11]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][11]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(11),
      I4 => \CLKS[1].test_clk_cntr_reg[1][10]_i_1_n_2\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][11]_i_1_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][11]_i_1_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][11]_i_1_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][12]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_00,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][12]_i_1_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(12)
    );
\CLKS[1].test_clk_cntr_reg[1][12]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][12]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(12),
      I4 => \CLKS[1].test_clk_cntr_reg[1][10]_i_2_n_1\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][12]_i_1_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][12]_i_1_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][12]_i_1_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][13]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_00,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][13]_i_1_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(13)
    );
\CLKS[1].test_clk_cntr_reg[1][13]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][13]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(13),
      I4 => \CLKS[1].test_clk_cntr_reg[1][12]_i_1_n_2\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][13]_i_1_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][13]_i_1_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][13]_i_1_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][14]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_00,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][14]_i_1_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(14)
    );
\CLKS[1].test_clk_cntr_reg[1][14]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][14]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(14),
      I4 => \CLKS[1].test_clk_cntr_reg[1][10]_i_2_n_2\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][14]_i_1_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][14]_i_1_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][14]_i_1_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][15]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_00,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][15]_i_1_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(15)
    );
\CLKS[1].test_clk_cntr_reg[1][15]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][15]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(15),
      I4 => \CLKS[1].test_clk_cntr_reg[1][14]_i_1_n_2\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][15]_i_1_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][15]_i_1_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][15]_i_1_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][16]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_00,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][16]_i_1_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(16)
    );
\CLKS[1].test_clk_cntr_reg[1][16]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][16]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(16),
      I4 => \CLKS[1].test_clk_cntr_reg[1][10]_i_2_n_3\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][16]_i_1_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][16]_i_1_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][16]_i_1_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][17]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_00,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][17]_i_1_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(17)
    );
\CLKS[1].test_clk_cntr_reg[1][17]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][17]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(17),
      I4 => \CLKS[1].test_clk_cntr_reg[1][16]_i_1_n_2\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][17]_i_1_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][17]_i_1_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][17]_i_1_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][18]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_00,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][18]_i_1_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(18)
    );
\CLKS[1].test_clk_cntr_reg[1][18]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][18]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(18),
      I4 => \CLKS[1].test_clk_cntr_reg[1][18]_i_2_n_0\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][18]_i_1_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][18]_i_1_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][18]_i_1_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][18]_i_2\: unisim.vcomponents.LOOKAHEAD8
    generic map(
      LOOKB => "TRUE",
      LOOKD => "TRUE",
      LOOKF => "TRUE",
      LOOKH => "TRUE"
    )
        port map (
      CIN => \CLKS[1].test_clk_cntr_reg[1][10]_i_2_n_3\,
      COUTB => \CLKS[1].test_clk_cntr_reg[1][18]_i_2_n_0\,
      COUTD => \CLKS[1].test_clk_cntr_reg[1][18]_i_2_n_1\,
      COUTF => \CLKS[1].test_clk_cntr_reg[1][18]_i_2_n_2\,
      COUTH => \CLKS[1].test_clk_cntr_reg[1][18]_i_2_n_3\,
      CYA => \CLKS[1].test_clk_cntr_reg[1][16]_i_1_n_2\,
      CYB => \CLKS[1].test_clk_cntr_reg[1][17]_i_1_n_2\,
      CYC => \CLKS[1].test_clk_cntr_reg[1][18]_i_1_n_2\,
      CYD => \CLKS[1].test_clk_cntr_reg[1][19]_i_1_n_2\,
      CYE => \CLKS[1].test_clk_cntr_reg[1][20]_i_1_n_2\,
      CYF => \CLKS[1].test_clk_cntr_reg[1][21]_i_1_n_2\,
      CYG => \CLKS[1].test_clk_cntr_reg[1][22]_i_1_n_2\,
      CYH => \CLKS[1].test_clk_cntr_reg[1][18]_i_3_n_2\,
      GEA => \CLKS[1].test_clk_cntr_reg[1][16]_i_1_n_0\,
      GEB => \CLKS[1].test_clk_cntr_reg[1][17]_i_1_n_0\,
      GEC => \CLKS[1].test_clk_cntr_reg[1][18]_i_1_n_0\,
      GED => \CLKS[1].test_clk_cntr_reg[1][19]_i_1_n_0\,
      GEE => \CLKS[1].test_clk_cntr_reg[1][20]_i_1_n_0\,
      GEF => \CLKS[1].test_clk_cntr_reg[1][21]_i_1_n_0\,
      GEG => \CLKS[1].test_clk_cntr_reg[1][22]_i_1_n_0\,
      GEH => \CLKS[1].test_clk_cntr_reg[1][18]_i_3_n_0\,
      PROPA => \CLKS[1].test_clk_cntr_reg[1][16]_i_1_n_3\,
      PROPB => \CLKS[1].test_clk_cntr_reg[1][17]_i_1_n_3\,
      PROPC => \CLKS[1].test_clk_cntr_reg[1][18]_i_1_n_3\,
      PROPD => \CLKS[1].test_clk_cntr_reg[1][19]_i_1_n_3\,
      PROPE => \CLKS[1].test_clk_cntr_reg[1][20]_i_1_n_3\,
      PROPF => \CLKS[1].test_clk_cntr_reg[1][21]_i_1_n_3\,
      PROPG => \CLKS[1].test_clk_cntr_reg[1][22]_i_1_n_3\,
      PROPH => \CLKS[1].test_clk_cntr_reg[1][18]_i_3_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][18]_i_3\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"00000000FF000000"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][18]_i_3_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => '0',
      I4 => '0',
      O51 => \CLKS[1].test_clk_cntr_reg[1][18]_i_3_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][18]_i_3_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][18]_i_3_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][19]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_00,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][19]_i_1_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(19)
    );
\CLKS[1].test_clk_cntr_reg[1][19]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][19]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(19),
      I4 => \CLKS[1].test_clk_cntr_reg[1][18]_i_1_n_2\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][19]_i_1_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][19]_i_1_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][19]_i_1_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][1]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_00,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][1]_i_1_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(1)
    );
\CLKS[1].test_clk_cntr_reg[1][1]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][1]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(1),
      I4 => \CLKS[1].test_clk_cntr_reg[1][0]_i_2_n_2\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][1]_i_1_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][1]_i_1_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][1]_i_1_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][20]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_00,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][20]_i_1_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(20)
    );
\CLKS[1].test_clk_cntr_reg[1][20]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][20]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(20),
      I4 => \CLKS[1].test_clk_cntr_reg[1][18]_i_2_n_1\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][20]_i_1_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][20]_i_1_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][20]_i_1_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][21]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_00,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][21]_i_1_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(21)
    );
\CLKS[1].test_clk_cntr_reg[1][21]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][21]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(21),
      I4 => \CLKS[1].test_clk_cntr_reg[1][20]_i_1_n_2\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][21]_i_1_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][21]_i_1_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][21]_i_1_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][22]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_00,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][22]_i_1_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(22)
    );
\CLKS[1].test_clk_cntr_reg[1][22]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00FF0000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][22]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(22),
      I4 => \CLKS[1].test_clk_cntr_reg[1][18]_i_2_n_2\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][22]_i_1_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][22]_i_1_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][22]_i_1_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][2]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_00,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][2]_i_1_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(2)
    );
\CLKS[1].test_clk_cntr_reg[1][2]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][2]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(2),
      I4 => \CLKS[1].test_clk_cntr_reg[1][2]_i_2_n_0\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][2]_i_1_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][2]_i_1_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][2]_i_1_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][2]_i_2\: unisim.vcomponents.LOOKAHEAD8
    generic map(
      LOOKB => "FALSE",
      LOOKD => "TRUE",
      LOOKF => "TRUE",
      LOOKH => "TRUE"
    )
        port map (
      CIN => '0',
      COUTB => \CLKS[1].test_clk_cntr_reg[1][2]_i_2_n_0\,
      COUTD => \CLKS[1].test_clk_cntr_reg[1][2]_i_2_n_1\,
      COUTF => \CLKS[1].test_clk_cntr_reg[1][2]_i_2_n_2\,
      COUTH => \CLKS[1].test_clk_cntr_reg[1][2]_i_2_n_3\,
      CYA => \CLKS[1].test_clk_cntr_reg[1][0]_i_2_n_2\,
      CYB => \CLKS[1].test_clk_cntr_reg[1][1]_i_1_n_2\,
      CYC => \CLKS[1].test_clk_cntr_reg[1][2]_i_1_n_2\,
      CYD => \CLKS[1].test_clk_cntr_reg[1][3]_i_1_n_2\,
      CYE => \CLKS[1].test_clk_cntr_reg[1][4]_i_1_n_2\,
      CYF => \CLKS[1].test_clk_cntr_reg[1][5]_i_1_n_2\,
      CYG => \CLKS[1].test_clk_cntr_reg[1][6]_i_1_n_2\,
      CYH => \CLKS[1].test_clk_cntr_reg[1][7]_i_1_n_2\,
      GEA => \CLKS[1].test_clk_cntr_reg[1][0]_i_2_n_0\,
      GEB => \CLKS[1].test_clk_cntr_reg[1][1]_i_1_n_0\,
      GEC => \CLKS[1].test_clk_cntr_reg[1][2]_i_1_n_0\,
      GED => \CLKS[1].test_clk_cntr_reg[1][3]_i_1_n_0\,
      GEE => \CLKS[1].test_clk_cntr_reg[1][4]_i_1_n_0\,
      GEF => \CLKS[1].test_clk_cntr_reg[1][5]_i_1_n_0\,
      GEG => \CLKS[1].test_clk_cntr_reg[1][6]_i_1_n_0\,
      GEH => \CLKS[1].test_clk_cntr_reg[1][7]_i_1_n_0\,
      PROPA => \CLKS[1].test_clk_cntr_reg[1][0]_i_2_n_3\,
      PROPB => \CLKS[1].test_clk_cntr_reg[1][1]_i_1_n_3\,
      PROPC => \CLKS[1].test_clk_cntr_reg[1][2]_i_1_n_3\,
      PROPD => \CLKS[1].test_clk_cntr_reg[1][3]_i_1_n_3\,
      PROPE => \CLKS[1].test_clk_cntr_reg[1][4]_i_1_n_3\,
      PROPF => \CLKS[1].test_clk_cntr_reg[1][5]_i_1_n_3\,
      PROPG => \CLKS[1].test_clk_cntr_reg[1][6]_i_1_n_3\,
      PROPH => \CLKS[1].test_clk_cntr_reg[1][7]_i_1_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][3]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_00,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][3]_i_1_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(3)
    );
\CLKS[1].test_clk_cntr_reg[1][3]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][3]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(3),
      I4 => \CLKS[1].test_clk_cntr_reg[1][2]_i_1_n_2\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][3]_i_1_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][3]_i_1_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][3]_i_1_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][4]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_00,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][4]_i_1_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(4)
    );
\CLKS[1].test_clk_cntr_reg[1][4]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][4]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(4),
      I4 => \CLKS[1].test_clk_cntr_reg[1][2]_i_2_n_1\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][4]_i_1_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][4]_i_1_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][4]_i_1_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][5]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_00,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][5]_i_1_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(5)
    );
\CLKS[1].test_clk_cntr_reg[1][5]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][5]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(5),
      I4 => \CLKS[1].test_clk_cntr_reg[1][4]_i_1_n_2\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][5]_i_1_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][5]_i_1_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][5]_i_1_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][6]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_00,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][6]_i_1_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(6)
    );
\CLKS[1].test_clk_cntr_reg[1][6]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][6]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(6),
      I4 => \CLKS[1].test_clk_cntr_reg[1][2]_i_2_n_2\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][6]_i_1_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][6]_i_1_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][6]_i_1_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][7]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_00,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][7]_i_1_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(7)
    );
\CLKS[1].test_clk_cntr_reg[1][7]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][7]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(7),
      I4 => \CLKS[1].test_clk_cntr_reg[1][6]_i_1_n_2\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][7]_i_1_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][7]_i_1_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][7]_i_1_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][8]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_00,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][8]_i_1_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(8)
    );
\CLKS[1].test_clk_cntr_reg[1][8]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][8]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(8),
      I4 => \CLKS[1].test_clk_cntr_reg[1][2]_i_2_n_3\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][8]_i_1_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][8]_i_1_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][8]_i_1_n_3\
    );
\CLKS[1].test_clk_cntr_reg[1][9]\: unisim.vcomponents.FDCE
     port map (
      C => aclk_kernel_00,
      CE => \CLKS[1].test_clk_cntr[1][0]_i_1_n_0\,
      CLR => rst_cnt_synced_1,
      D => \CLKS[1].test_clk_cntr_reg[1][9]_i_1_n_1\,
      Q => \CLKS[1].test_clk_cntr_reg[1]_1\(9)
    );
\CLKS[1].test_clk_cntr_reg[1][9]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \CLKS[1].test_clk_cntr_reg[1][9]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \CLKS[1].test_clk_cntr_reg[1]_1\(9),
      I4 => \CLKS[1].test_clk_cntr_reg[1][8]_i_1_n_2\,
      O51 => \CLKS[1].test_clk_cntr_reg[1][9]_i_1_n_1\,
      O52 => \CLKS[1].test_clk_cntr_reg[1][9]_i_1_n_2\,
      PROP => \CLKS[1].test_clk_cntr_reg[1][9]_i_1_n_3\
    );
done_ref_i_i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^src_in\(64),
      O => sel
    );
done_ref_i_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0002000000000000"
    )
        port map (
      I0 => done_ref_i_i_3_n_0,
      I1 => \^src_in\(49),
      I2 => \^src_in\(48),
      I3 => \^src_in\(51),
      I4 => \^src_in\(50),
      I5 => done_ref_i_i_4_n_0,
      O => done_c
    );
done_ref_i_i_3: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000100000000"
    )
        port map (
      I0 => \^src_in\(60),
      I1 => \^src_in\(61),
      I2 => \^src_in\(58),
      I3 => \^src_in\(59),
      I4 => \^src_in\(62),
      I5 => \^src_in\(63),
      O => done_ref_i_i_3_n_0
    );
done_ref_i_i_4: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000100000000000"
    )
        port map (
      I0 => \^src_in\(54),
      I1 => \^src_in\(55),
      I2 => \^src_in\(52),
      I3 => \^src_in\(53),
      I4 => \^src_in\(56),
      I5 => \^src_in\(57),
      O => done_ref_i_i_4_n_0
    );
done_ref_i_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => sel,
      D => done_c,
      Q => \^src_in\(64),
      R => rst_cnt_ref
    );
\done_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => sel,
      D => done_c,
      Q => done(0),
      R => rst_cnt_ref
    );
\done_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => sel,
      D => done_c,
      Q => done(1),
      R => rst_cnt_ref
    );
\done_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => sel,
      D => done_c,
      Q => done(2),
      R => rst_cnt_ref
    );
\done_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => sel,
      D => done_c,
      Q => done(3),
      R => rst_cnt_ref
    );
\genblk1[0].cdc_freq_cntr_kernel_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8000"
    )
        port map (
      I0 => \genblk1[0].cdc_freq_cntr_kernel_i_3_n_0\,
      I1 => \genblk1[0].cdc_freq_cntr_kernel_i_4_n_0\,
      I2 => \genblk1[0].cdc_freq_cntr_kernel_i_5_n_0\,
      I3 => \genblk1[0].cdc_freq_cntr_kernel_i_6_n_0\,
      O => \^src_in\(47)
    );
\genblk1[0].cdc_freq_cntr_kernel_i_10\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"80000000"
    )
        port map (
      I0 => \^src_in\(0),
      I1 => \^src_in\(1),
      I2 => \^src_in\(2),
      I3 => \^src_in\(4),
      I4 => \^src_in\(3),
      O => \genblk1[0].cdc_freq_cntr_kernel_i_10_n_0\
    );
\genblk1[0].cdc_freq_cntr_kernel_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8000"
    )
        port map (
      I0 => \genblk1[0].cdc_freq_cntr_kernel_i_7_n_0\,
      I1 => \genblk1[0].cdc_freq_cntr_kernel_i_8_n_0\,
      I2 => \genblk1[0].cdc_freq_cntr_kernel_i_9_n_0\,
      I3 => \genblk1[0].cdc_freq_cntr_kernel_i_10_n_0\,
      O => \^src_in\(23)
    );
\genblk1[0].cdc_freq_cntr_kernel_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8000000000000000"
    )
        port map (
      I0 => \^src_in\(37),
      I1 => \^src_in\(38),
      I2 => \^src_in\(35),
      I3 => \^src_in\(36),
      I4 => \^src_in\(40),
      I5 => \^src_in\(39),
      O => \genblk1[0].cdc_freq_cntr_kernel_i_3_n_0\
    );
\genblk1[0].cdc_freq_cntr_kernel_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8000000000000000"
    )
        port map (
      I0 => \^src_in\(43),
      I1 => \^src_in\(44),
      I2 => \^src_in\(41),
      I3 => \^src_in\(42),
      I4 => \^src_in\(46),
      I5 => \^src_in\(45),
      O => \genblk1[0].cdc_freq_cntr_kernel_i_4_n_0\
    );
\genblk1[0].cdc_freq_cntr_kernel_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8000000000000000"
    )
        port map (
      I0 => \^src_in\(31),
      I1 => \^src_in\(32),
      I2 => \^src_in\(29),
      I3 => \^src_in\(30),
      I4 => \^src_in\(34),
      I5 => \^src_in\(33),
      O => \genblk1[0].cdc_freq_cntr_kernel_i_5_n_0\
    );
\genblk1[0].cdc_freq_cntr_kernel_i_6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"80000000"
    )
        port map (
      I0 => \^src_in\(24),
      I1 => \^src_in\(25),
      I2 => \^src_in\(26),
      I3 => \^src_in\(28),
      I4 => \^src_in\(27),
      O => \genblk1[0].cdc_freq_cntr_kernel_i_6_n_0\
    );
\genblk1[0].cdc_freq_cntr_kernel_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8000000000000000"
    )
        port map (
      I0 => \^src_in\(13),
      I1 => \^src_in\(14),
      I2 => \^src_in\(11),
      I3 => \^src_in\(12),
      I4 => \^src_in\(16),
      I5 => \^src_in\(15),
      O => \genblk1[0].cdc_freq_cntr_kernel_i_7_n_0\
    );
\genblk1[0].cdc_freq_cntr_kernel_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8000000000000000"
    )
        port map (
      I0 => \^src_in\(19),
      I1 => \^src_in\(20),
      I2 => \^src_in\(17),
      I3 => \^src_in\(18),
      I4 => \^src_in\(22),
      I5 => \^src_in\(21),
      O => \genblk1[0].cdc_freq_cntr_kernel_i_8_n_0\
    );
\genblk1[0].cdc_freq_cntr_kernel_i_9\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8000000000000000"
    )
        port map (
      I0 => \^src_in\(7),
      I1 => \^src_in\(8),
      I2 => \^src_in\(5),
      I3 => \^src_in\(6),
      I4 => \^src_in\(10),
      I5 => \^src_in\(9),
      O => \genblk1[0].cdc_freq_cntr_kernel_i_9_n_0\
    );
\ref_clk_cntr_i[0]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"21"
    )
        port map (
      I0 => \^src_in\(48),
      I1 => rst_cnt_ref,
      I2 => \^src_in\(64),
      O => \ref_clk_cntr_i[0]_i_1_n_0\
    );
\ref_clk_cntr_i_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => '1',
      D => \ref_clk_cntr_i[0]_i_1_n_0\,
      Q => \^src_in\(48),
      R => '0'
    );
\ref_clk_cntr_i_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => sel,
      D => p_0_in(10),
      Q => \^src_in\(58),
      R => rst_cnt_ref
    );
\ref_clk_cntr_i_reg[10]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \ref_clk_cntr_i_reg[10]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \^src_in\(58),
      I4 => \ref_clk_cntr_i_reg[9]_i_1_n_2\,
      O51 => p_0_in(10),
      O52 => \ref_clk_cntr_i_reg[10]_i_1_n_2\,
      PROP => \ref_clk_cntr_i_reg[10]_i_1_n_3\
    );
\ref_clk_cntr_i_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => sel,
      D => p_0_in(11),
      Q => \^src_in\(59),
      R => rst_cnt_ref
    );
\ref_clk_cntr_i_reg[11]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \ref_clk_cntr_i_reg[11]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \^src_in\(59),
      I4 => \ref_clk_cntr_i_reg[15]_i_2_n_0\,
      O51 => p_0_in(11),
      O52 => \ref_clk_cntr_i_reg[11]_i_1_n_2\,
      PROP => \ref_clk_cntr_i_reg[11]_i_1_n_3\
    );
\ref_clk_cntr_i_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => sel,
      D => p_0_in(12),
      Q => \^src_in\(60),
      R => rst_cnt_ref
    );
\ref_clk_cntr_i_reg[12]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \ref_clk_cntr_i_reg[12]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \^src_in\(60),
      I4 => \ref_clk_cntr_i_reg[11]_i_1_n_2\,
      O51 => p_0_in(12),
      O52 => \ref_clk_cntr_i_reg[12]_i_1_n_2\,
      PROP => \ref_clk_cntr_i_reg[12]_i_1_n_3\
    );
\ref_clk_cntr_i_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => sel,
      D => p_0_in(13),
      Q => \^src_in\(61),
      R => rst_cnt_ref
    );
\ref_clk_cntr_i_reg[13]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \ref_clk_cntr_i_reg[13]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \^src_in\(61),
      I4 => \ref_clk_cntr_i_reg[15]_i_2_n_1\,
      O51 => p_0_in(13),
      O52 => \ref_clk_cntr_i_reg[13]_i_1_n_2\,
      PROP => \ref_clk_cntr_i_reg[13]_i_1_n_3\
    );
\ref_clk_cntr_i_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => sel,
      D => p_0_in(14),
      Q => \^src_in\(62),
      R => rst_cnt_ref
    );
\ref_clk_cntr_i_reg[14]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \ref_clk_cntr_i_reg[14]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \^src_in\(62),
      I4 => \ref_clk_cntr_i_reg[13]_i_1_n_2\,
      O51 => p_0_in(14),
      O52 => \ref_clk_cntr_i_reg[14]_i_1_n_2\,
      PROP => \ref_clk_cntr_i_reg[14]_i_1_n_3\
    );
\ref_clk_cntr_i_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => sel,
      D => p_0_in(15),
      Q => \^src_in\(63),
      R => rst_cnt_ref
    );
\ref_clk_cntr_i_reg[15]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00FF0000FFFF00"
    )
        port map (
      GE => \ref_clk_cntr_i_reg[15]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \^src_in\(63),
      I4 => \ref_clk_cntr_i_reg[15]_i_2_n_2\,
      O51 => p_0_in(15),
      O52 => \ref_clk_cntr_i_reg[15]_i_1_n_2\,
      PROP => \ref_clk_cntr_i_reg[15]_i_1_n_3\
    );
\ref_clk_cntr_i_reg[15]_i_2\: unisim.vcomponents.LOOKAHEAD8
    generic map(
      LOOKB => "TRUE",
      LOOKD => "TRUE",
      LOOKF => "TRUE",
      LOOKH => "TRUE"
    )
        port map (
      CIN => \ref_clk_cntr_i_reg[9]_i_2_n_3\,
      COUTB => \ref_clk_cntr_i_reg[15]_i_2_n_0\,
      COUTD => \ref_clk_cntr_i_reg[15]_i_2_n_1\,
      COUTF => \ref_clk_cntr_i_reg[15]_i_2_n_2\,
      COUTH => \ref_clk_cntr_i_reg[15]_i_2_n_3\,
      CYA => \ref_clk_cntr_i_reg[9]_i_1_n_2\,
      CYB => \ref_clk_cntr_i_reg[10]_i_1_n_2\,
      CYC => \ref_clk_cntr_i_reg[11]_i_1_n_2\,
      CYD => \ref_clk_cntr_i_reg[12]_i_1_n_2\,
      CYE => \ref_clk_cntr_i_reg[13]_i_1_n_2\,
      CYF => \ref_clk_cntr_i_reg[14]_i_1_n_2\,
      CYG => \ref_clk_cntr_i_reg[15]_i_1_n_2\,
      CYH => \ref_clk_cntr_i_reg[15]_i_3_n_2\,
      GEA => \ref_clk_cntr_i_reg[9]_i_1_n_0\,
      GEB => \ref_clk_cntr_i_reg[10]_i_1_n_0\,
      GEC => \ref_clk_cntr_i_reg[11]_i_1_n_0\,
      GED => \ref_clk_cntr_i_reg[12]_i_1_n_0\,
      GEE => \ref_clk_cntr_i_reg[13]_i_1_n_0\,
      GEF => \ref_clk_cntr_i_reg[14]_i_1_n_0\,
      GEG => \ref_clk_cntr_i_reg[15]_i_1_n_0\,
      GEH => \ref_clk_cntr_i_reg[15]_i_3_n_0\,
      PROPA => \ref_clk_cntr_i_reg[9]_i_1_n_3\,
      PROPB => \ref_clk_cntr_i_reg[10]_i_1_n_3\,
      PROPC => \ref_clk_cntr_i_reg[11]_i_1_n_3\,
      PROPD => \ref_clk_cntr_i_reg[12]_i_1_n_3\,
      PROPE => \ref_clk_cntr_i_reg[13]_i_1_n_3\,
      PROPF => \ref_clk_cntr_i_reg[14]_i_1_n_3\,
      PROPG => \ref_clk_cntr_i_reg[15]_i_1_n_3\,
      PROPH => \ref_clk_cntr_i_reg[15]_i_3_n_3\
    );
\ref_clk_cntr_i_reg[15]_i_3\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"00000000FF000000"
    )
        port map (
      GE => \ref_clk_cntr_i_reg[15]_i_3_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => '0',
      I4 => '0',
      O51 => \ref_clk_cntr_i_reg[15]_i_3_n_1\,
      O52 => \ref_clk_cntr_i_reg[15]_i_3_n_2\,
      PROP => \ref_clk_cntr_i_reg[15]_i_3_n_3\
    );
\ref_clk_cntr_i_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => sel,
      D => p_0_in(1),
      Q => \^src_in\(49),
      R => rst_cnt_ref
    );
\ref_clk_cntr_i_reg[1]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \ref_clk_cntr_i_reg[1]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \^src_in\(49),
      I4 => \^src_in\(48),
      O51 => p_0_in(1),
      O52 => \ref_clk_cntr_i_reg[1]_i_1_n_2\,
      PROP => \ref_clk_cntr_i_reg[1]_i_1_n_3\
    );
\ref_clk_cntr_i_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => sel,
      D => p_0_in(2),
      Q => \^src_in\(50),
      R => rst_cnt_ref
    );
\ref_clk_cntr_i_reg[2]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \ref_clk_cntr_i_reg[2]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \^src_in\(50),
      I4 => \ref_clk_cntr_i_reg[1]_i_1_n_2\,
      O51 => p_0_in(2),
      O52 => \ref_clk_cntr_i_reg[2]_i_1_n_2\,
      PROP => \ref_clk_cntr_i_reg[2]_i_1_n_3\
    );
\ref_clk_cntr_i_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => sel,
      D => p_0_in(3),
      Q => \^src_in\(51),
      R => rst_cnt_ref
    );
\ref_clk_cntr_i_reg[3]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \ref_clk_cntr_i_reg[3]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \^src_in\(51),
      I4 => \ref_clk_cntr_i_reg[9]_i_2_n_0\,
      O51 => p_0_in(3),
      O52 => \ref_clk_cntr_i_reg[3]_i_1_n_2\,
      PROP => \ref_clk_cntr_i_reg[3]_i_1_n_3\
    );
\ref_clk_cntr_i_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => sel,
      D => p_0_in(4),
      Q => \^src_in\(52),
      R => rst_cnt_ref
    );
\ref_clk_cntr_i_reg[4]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \ref_clk_cntr_i_reg[4]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \^src_in\(52),
      I4 => \ref_clk_cntr_i_reg[3]_i_1_n_2\,
      O51 => p_0_in(4),
      O52 => \ref_clk_cntr_i_reg[4]_i_1_n_2\,
      PROP => \ref_clk_cntr_i_reg[4]_i_1_n_3\
    );
\ref_clk_cntr_i_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => sel,
      D => p_0_in(5),
      Q => \^src_in\(53),
      R => rst_cnt_ref
    );
\ref_clk_cntr_i_reg[5]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \ref_clk_cntr_i_reg[5]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \^src_in\(53),
      I4 => \ref_clk_cntr_i_reg[9]_i_2_n_1\,
      O51 => p_0_in(5),
      O52 => \ref_clk_cntr_i_reg[5]_i_1_n_2\,
      PROP => \ref_clk_cntr_i_reg[5]_i_1_n_3\
    );
\ref_clk_cntr_i_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => sel,
      D => p_0_in(6),
      Q => \^src_in\(54),
      R => rst_cnt_ref
    );
\ref_clk_cntr_i_reg[6]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \ref_clk_cntr_i_reg[6]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \^src_in\(54),
      I4 => \ref_clk_cntr_i_reg[5]_i_1_n_2\,
      O51 => p_0_in(6),
      O52 => \ref_clk_cntr_i_reg[6]_i_1_n_2\,
      PROP => \ref_clk_cntr_i_reg[6]_i_1_n_3\
    );
\ref_clk_cntr_i_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => sel,
      D => p_0_in(7),
      Q => \^src_in\(55),
      R => rst_cnt_ref
    );
\ref_clk_cntr_i_reg[7]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \ref_clk_cntr_i_reg[7]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \^src_in\(55),
      I4 => \ref_clk_cntr_i_reg[9]_i_2_n_2\,
      O51 => p_0_in(7),
      O52 => \ref_clk_cntr_i_reg[7]_i_1_n_2\,
      PROP => \ref_clk_cntr_i_reg[7]_i_1_n_3\
    );
\ref_clk_cntr_i_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => sel,
      D => p_0_in(8),
      Q => \^src_in\(56),
      R => rst_cnt_ref
    );
\ref_clk_cntr_i_reg[8]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \ref_clk_cntr_i_reg[8]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \^src_in\(56),
      I4 => \ref_clk_cntr_i_reg[7]_i_1_n_2\,
      O51 => p_0_in(8),
      O52 => \ref_clk_cntr_i_reg[8]_i_1_n_2\,
      PROP => \ref_clk_cntr_i_reg[8]_i_1_n_3\
    );
\ref_clk_cntr_i_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => sel,
      D => p_0_in(9),
      Q => \^src_in\(57),
      R => rst_cnt_ref
    );
\ref_clk_cntr_i_reg[9]_i_1\: unisim.vcomponents.LUT6CY
    generic map(
      INIT => X"FF00000000FFFF00"
    )
        port map (
      GE => \ref_clk_cntr_i_reg[9]_i_1_n_0\,
      I0 => '1',
      I1 => '1',
      I2 => '1',
      I3 => \^src_in\(57),
      I4 => \ref_clk_cntr_i_reg[9]_i_2_n_3\,
      O51 => p_0_in(9),
      O52 => \ref_clk_cntr_i_reg[9]_i_1_n_2\,
      PROP => \ref_clk_cntr_i_reg[9]_i_1_n_3\
    );
\ref_clk_cntr_i_reg[9]_i_2\: unisim.vcomponents.LOOKAHEAD8
    generic map(
      LOOKB => "FALSE",
      LOOKD => "TRUE",
      LOOKF => "TRUE",
      LOOKH => "TRUE"
    )
        port map (
      CIN => \^src_in\(48),
      COUTB => \ref_clk_cntr_i_reg[9]_i_2_n_0\,
      COUTD => \ref_clk_cntr_i_reg[9]_i_2_n_1\,
      COUTF => \ref_clk_cntr_i_reg[9]_i_2_n_2\,
      COUTH => \ref_clk_cntr_i_reg[9]_i_2_n_3\,
      CYA => \ref_clk_cntr_i_reg[1]_i_1_n_2\,
      CYB => \ref_clk_cntr_i_reg[2]_i_1_n_2\,
      CYC => \ref_clk_cntr_i_reg[3]_i_1_n_2\,
      CYD => \ref_clk_cntr_i_reg[4]_i_1_n_2\,
      CYE => \ref_clk_cntr_i_reg[5]_i_1_n_2\,
      CYF => \ref_clk_cntr_i_reg[6]_i_1_n_2\,
      CYG => \ref_clk_cntr_i_reg[7]_i_1_n_2\,
      CYH => \ref_clk_cntr_i_reg[8]_i_1_n_2\,
      GEA => \ref_clk_cntr_i_reg[1]_i_1_n_0\,
      GEB => \ref_clk_cntr_i_reg[2]_i_1_n_0\,
      GEC => \ref_clk_cntr_i_reg[3]_i_1_n_0\,
      GED => \ref_clk_cntr_i_reg[4]_i_1_n_0\,
      GEE => \ref_clk_cntr_i_reg[5]_i_1_n_0\,
      GEF => \ref_clk_cntr_i_reg[6]_i_1_n_0\,
      GEG => \ref_clk_cntr_i_reg[7]_i_1_n_0\,
      GEH => \ref_clk_cntr_i_reg[8]_i_1_n_0\,
      PROPA => \ref_clk_cntr_i_reg[1]_i_1_n_3\,
      PROPB => \ref_clk_cntr_i_reg[2]_i_1_n_3\,
      PROPC => \ref_clk_cntr_i_reg[3]_i_1_n_3\,
      PROPD => \ref_clk_cntr_i_reg[4]_i_1_n_3\,
      PROPE => \ref_clk_cntr_i_reg[5]_i_1_n_3\,
      PROPF => \ref_clk_cntr_i_reg[6]_i_1_n_3\,
      PROPG => \ref_clk_cntr_i_reg[7]_i_1_n_3\,
      PROPH => \ref_clk_cntr_i_reg[8]_i_1_n_3\
    );
rst_cnt_ref_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => dest_arst,
      I1 => \rst_cnt_reg[0]_0\,
      O => rst_cnt_c
    );
rst_cnt_ref_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => '1',
      D => rst_cnt_c,
      Q => rst_cnt_ref,
      R => '0'
    );
\rst_cnt_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => '1',
      D => rst_cnt_c,
      Q => rst_cnt(0),
      R => '0'
    );
\rst_cnt_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => '1',
      D => rst_cnt_c,
      Q => rst_cnt(1),
      R => '0'
    );
\rst_cnt_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => '1',
      D => rst_cnt_c,
      Q => rst_cnt(2),
      R => '0'
    );
\rst_cnt_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_freerun,
      CE => '1',
      D => rst_cnt_c,
      Q => rst_cnt(3),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_shell_utils_ucc_v1_0_0_shutdown_latch is
  port (
    src_in : out STD_LOGIC;
    shutdown_latch : out STD_LOGIC;
    src_arst : out STD_LOGIC;
    clk_kernel_01_locked_0 : out STD_LOGIC;
    \syncstages_ff_reg[2][64]\ : out STD_LOGIC;
    power_down : out STD_LOGIC;
    shutdown_clocks : in STD_LOGIC;
    aclk_ctrl : in STD_LOGIC;
    SS : in STD_LOGIC_VECTOR ( 0 to 0 );
    Request_Ack_d1_reg_0 : in STD_LOGIC;
    clk_kernel_00_locked : in STD_LOGIC;
    clk_kernel_01_locked : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[0]\ : in STD_LOGIC;
    dest_out : in STD_LOGIC_VECTOR ( 0 to 0 );
    \s_axi_ctrl_mgmt_rdata_i_reg[0]_0\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i_reg[0]_1\ : in STD_LOGIC;
    s_axi_ctrl_mgmt_araddr : in STD_LOGIC_VECTOR ( 4 downto 0 );
    \s_axi_ctrl_mgmt_rdata_i_reg[0]_2\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i[0]_i_3_0\ : in STD_LOGIC;
    \s_axi_ctrl_mgmt_rdata_i[0]_i_3_1\ : in STD_LOGIC;
    power_down_out_d1 : in STD_LOGIC;
    power_down_out_d1_0 : in STD_LOGIC;
    p_6_in : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Q : in STD_LOGIC_VECTOR ( 15 downto 0 )
  );
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_shell_utils_ucc_v1_0_0_shutdown_latch;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_shell_utils_ucc_v1_0_0_shutdown_latch is
  signal Request : STD_LOGIC;
  signal Request0 : STD_LOGIC;
  signal Request_Ack_d1 : STD_LOGIC;
  signal Request_Latch_int : STD_LOGIC;
  signal Request_Latch_int0 : STD_LOGIC;
  signal Request_SW_reduced : STD_LOGIC;
  signal Request_SW_reduced_i_2_n_0 : STD_LOGIC;
  signal Request_SW_reduced_i_3_n_0 : STD_LOGIC;
  signal Request_SW_reduced_i_4_n_0 : STD_LOGIC;
  signal Shutdown_Latch_int : STD_LOGIC;
  signal Shutdown_Latch_int0 : STD_LOGIC;
  signal Shutdown_Release : STD_LOGIC;
  signal Shutdown_Release0 : STD_LOGIC;
  signal dest_out_0 : STD_LOGIC;
  signal eqOp : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[0]_i_10_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[0]_i_3_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[0]_i_7_n_0\ : STD_LOGIC;
  signal \^shutdown_latch\ : STD_LOGIC;
  signal \^src_in\ : STD_LOGIC;
  attribute DEST_SYNC_FF : integer;
  attribute DEST_SYNC_FF of CDC_SCR : label is 4;
  attribute INIT_SYNC_FF : integer;
  attribute INIT_SYNC_FF of CDC_SCR : label is 0;
  attribute SIM_ASSERT_CHK : integer;
  attribute SIM_ASSERT_CHK of CDC_SCR : label is 0;
  attribute SRC_INPUT_REG : integer;
  attribute SRC_INPUT_REG of CDC_SCR : label is 0;
  attribute VERSION : integer;
  attribute VERSION of CDC_SCR : label is 0;
  attribute XPM_CDC : string;
  attribute XPM_CDC of CDC_SCR : label is "SINGLE";
  attribute XPM_MODULE : string;
  attribute XPM_MODULE of CDC_SCR : label is "TRUE";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of LCK_CDC_i_1 : label is "soft_lutpair0";
  attribute SOFT_HLUTNM of \LCK_CDC_i_1__0\ : label is "soft_lutpair2";
  attribute SOFT_HLUTNM of Request_Latch_int_i_1 : label is "soft_lutpair1";
  attribute SOFT_HLUTNM of Shutdown_Release_i_1 : label is "soft_lutpair1";
  attribute SOFT_HLUTNM of power_down_INST_0 : label is "soft_lutpair2";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[0]_i_10\ : label is "soft_lutpair0";
begin
  shutdown_latch <= \^shutdown_latch\;
  src_in <= \^src_in\;
CDC_SCR: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single
     port map (
      dest_clk => aclk_ctrl,
      dest_out => dest_out_0,
      src_clk => '0',
      src_in => shutdown_clocks
    );
LCK_CDC_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => clk_kernel_00_locked,
      I1 => \^shutdown_latch\,
      O => src_arst
    );
\LCK_CDC_i_1__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => clk_kernel_01_locked,
      I1 => \^shutdown_latch\,
      O => clk_kernel_01_locked_0
    );
Request_Ack_d1_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => Request_Ack_d1_reg_0,
      Q => Request_Ack_d1,
      R => '0'
    );
Request_Latch_int_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8F88"
    )
        port map (
      I0 => p_6_in(1),
      I1 => Request,
      I2 => Request_Ack_d1_reg_0,
      I3 => Request_Latch_int,
      O => Request_Latch_int0
    );
Request_Latch_int_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => Request_Latch_int0,
      Q => Request_Latch_int,
      R => SS(0)
    );
Request_Latch_reg: unisim.vcomponents.FDRE
     port map (
      C => aclk_ctrl,
      CE => '1',
      D => Request_Latch_int,
      Q => \^src_in\,
      R => '0'
    );
Request_SW_reduced_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0020000000000000"
    )
        port map (
      I0 => Request_SW_reduced_i_2_n_0,
      I1 => Q(1),
      I2 => Q(0),
      I3 => Q(2),
      I4 => Q(3),
      I5 => Request_SW_reduced_i_3_n_0,
      O => eqOp
    );
Request_SW_reduced_i_2: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0100"
    )
        port map (
      I0 => Q(7),
      I1 => Q(6),
      I2 => Q(5),
      I3 => Q(4),
      O => Request_SW_reduced_i_2_n_0
    );
Request_SW_reduced_i_3: unisim.vcomponents.LUT5
    generic map(
      INIT => X"20000000"
    )
        port map (
      I0 => Q(12),
      I1 => Q(13),
      I2 => Q(14),
      I3 => Q(15),
      I4 => Request_SW_reduced_i_4_n_0,
      O => Request_SW_reduced_i_3_n_0
    );
Request_SW_reduced_i_4: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4000"
    )
        port map (
      I0 => Q(10),
      I1 => Q(11),
      I2 => Q(9),
      I3 => Q(8),
      O => Request_SW_reduced_i_4_n_0
    );
Request_SW_reduced_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => eqOp,
      Q => Request_SW_reduced,
      R => '0'
    );
Request_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => dest_out_0,
      I1 => Request_SW_reduced,
      O => Request0
    );
Request_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => Request0,
      Q => Request,
      R => SS(0)
    );
Shutdown_Latch_int_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => p_6_in(1),
      I1 => Request,
      I2 => Shutdown_Release,
      I3 => Shutdown_Latch_int,
      O => Shutdown_Latch_int0
    );
Shutdown_Latch_int_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => Shutdown_Latch_int0,
      Q => Shutdown_Latch_int,
      R => '0'
    );
Shutdown_Latch_reg: unisim.vcomponents.FDRE
     port map (
      C => aclk_ctrl,
      CE => '1',
      D => Shutdown_Latch_int,
      Q => \^shutdown_latch\,
      R => '0'
    );
Shutdown_Release_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => Request_Ack_d1,
      I1 => Request_Ack_d1_reg_0,
      O => Shutdown_Release0
    );
Shutdown_Release_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => Shutdown_Release0,
      Q => Shutdown_Release,
      R => SS(0)
    );
power_down_INST_0: unisim.vcomponents.LUT3
    generic map(
      INIT => X"80"
    )
        port map (
      I0 => \^shutdown_latch\,
      I1 => power_down_out_d1,
      I2 => power_down_out_d1_0,
      O => power_down
    );
\s_axi_ctrl_mgmt_rdata_i[0]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFEEE"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i_reg[0]\,
      I1 => \s_axi_ctrl_mgmt_rdata_i[0]_i_3_n_0\,
      I2 => dest_out(0),
      I3 => \s_axi_ctrl_mgmt_rdata_i_reg[0]_0\,
      I4 => \s_axi_ctrl_mgmt_rdata_i_reg[0]_1\,
      O => \syncstages_ff_reg[2][64]\
    );
\s_axi_ctrl_mgmt_rdata_i[0]_i_10\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFFE2"
    )
        port map (
      I0 => p_6_in(0),
      I1 => s_axi_ctrl_mgmt_araddr(2),
      I2 => \^shutdown_latch\,
      I3 => s_axi_ctrl_mgmt_araddr(4),
      I4 => s_axi_ctrl_mgmt_araddr(3),
      O => \s_axi_ctrl_mgmt_rdata_i[0]_i_10_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[0]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF100010001000"
    )
        port map (
      I0 => s_axi_ctrl_mgmt_araddr(0),
      I1 => s_axi_ctrl_mgmt_araddr(2),
      I2 => s_axi_ctrl_mgmt_araddr(1),
      I3 => \^src_in\,
      I4 => \s_axi_ctrl_mgmt_rdata_i_reg[0]_2\,
      I5 => \s_axi_ctrl_mgmt_rdata_i[0]_i_7_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[0]_i_3_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[0]_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000FD00000000"
    )
        port map (
      I0 => s_axi_ctrl_mgmt_araddr(3),
      I1 => s_axi_ctrl_mgmt_araddr(4),
      I2 => \s_axi_ctrl_mgmt_rdata_i[0]_i_3_0\,
      I3 => \s_axi_ctrl_mgmt_rdata_i[0]_i_3_1\,
      I4 => s_axi_ctrl_mgmt_araddr(1),
      I5 => \s_axi_ctrl_mgmt_rdata_i[0]_i_10_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[0]_i_7_n_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_shell_utils_ucc_v1_0_0_aclk_kernel is
  port (
    CLK : out STD_LOGIC;
    aclk_kernel_cont_01 : out STD_LOGIC;
    aclk_kernel_01 : out STD_LOGIC;
    rst_async_kernel_01 : out STD_LOGIC;
    ext_tog_ctrl_kernel_01_out : out STD_LOGIC;
    power_down_out_d1 : out STD_LOGIC;
    \syncstages_ff_reg[0]\ : in STD_LOGIC;
    p_6_in : in STD_LOGIC_VECTOR ( 8 downto 0 );
    src_in : in STD_LOGIC;
    aresetn_ctrl : in STD_LOGIC;
    \arststages_ff_reg[0]\ : in STD_LOGIC;
    \arststages_ff_reg[0]_0\ : in STD_LOGIC;
    shutdown_latch : in STD_LOGIC;
    clk_in_kernel_01 : in STD_LOGIC;
    ext_tog_ctrl_kernel_01_in : in STD_LOGIC;
    ext_tog_ctrl_kernel_01_enable : in STD_LOGIC
  );
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_shell_utils_ucc_v1_0_0_aclk_kernel;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_shell_utils_ucc_v1_0_0_aclk_kernel is
begin
clock_throttling_aclk_kernel_00: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_shell_utils_ucc_v1_0_0_clock_throttling
     port map (
      ICCLK_0 => CLK,
      aclk_kernel_01 => aclk_kernel_01,
      aclk_kernel_cont_01 => aclk_kernel_cont_01,
      aresetn_ctrl => aresetn_ctrl,
      \arststages_ff_reg[0]\ => \arststages_ff_reg[0]\,
      \arststages_ff_reg[0]_0\ => \arststages_ff_reg[0]_0\,
      clk_in_kernel_01 => clk_in_kernel_01,
      ext_tog_ctrl_kernel_01_enable => ext_tog_ctrl_kernel_01_enable,
      ext_tog_ctrl_kernel_01_in => ext_tog_ctrl_kernel_01_in,
      ext_tog_ctrl_kernel_01_out => ext_tog_ctrl_kernel_01_out,
      p_6_in(8 downto 0) => p_6_in(8 downto 0),
      power_down_out_d1 => power_down_out_d1,
      rst_async_kernel_01 => rst_async_kernel_01,
      shutdown_latch => shutdown_latch,
      src_in => src_in,
      \syncstages_ff_reg[0]\ => \syncstages_ff_reg[0]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_shell_utils_ucc_v1_0_0_aclk_kernel__xdcDup__1\ is
  port (
    CLK : out STD_LOGIC;
    aclk_kernel_cont_00 : out STD_LOGIC;
    aclk_kernel_00 : out STD_LOGIC;
    rst_async_kernel_00 : out STD_LOGIC;
    ext_tog_ctrl_kernel_00_out : out STD_LOGIC;
    power_down_out_d1 : out STD_LOGIC;
    \syncstages_ff_reg[0]\ : in STD_LOGIC;
    p_6_in : in STD_LOGIC_VECTOR ( 8 downto 0 );
    src_in : in STD_LOGIC;
    aresetn_ctrl : in STD_LOGIC;
    src_arst : in STD_LOGIC;
    \arststages_ff_reg[0]\ : in STD_LOGIC;
    shutdown_latch : in STD_LOGIC;
    clk_in_kernel_00 : in STD_LOGIC;
    ext_tog_ctrl_kernel_00_in : in STD_LOGIC;
    ext_tog_ctrl_kernel_00_enable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_shell_utils_ucc_v1_0_0_aclk_kernel__xdcDup__1\ : entity is "shell_utils_ucc_v1_0_0_aclk_kernel";
end \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_shell_utils_ucc_v1_0_0_aclk_kernel__xdcDup__1\;

architecture STRUCTURE of \decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_shell_utils_ucc_v1_0_0_aclk_kernel__xdcDup__1\ is
begin
clock_throttling_aclk_kernel_00: entity work.\decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_shell_utils_ucc_v1_0_0_clock_throttling__xdcDup__1\
     port map (
      ICCLK_0 => CLK,
      aclk_kernel_00 => aclk_kernel_00,
      aclk_kernel_cont_00 => aclk_kernel_cont_00,
      aresetn_ctrl => aresetn_ctrl,
      \arststages_ff_reg[0]\ => \arststages_ff_reg[0]\,
      clk_in_kernel_00 => clk_in_kernel_00,
      ext_tog_ctrl_kernel_00_enable => ext_tog_ctrl_kernel_00_enable,
      ext_tog_ctrl_kernel_00_in => ext_tog_ctrl_kernel_00_in,
      ext_tog_ctrl_kernel_00_out => ext_tog_ctrl_kernel_00_out,
      p_6_in(8 downto 0) => p_6_in(8 downto 0),
      power_down_out_d1 => power_down_out_d1,
      rst_async_kernel_00 => rst_async_kernel_00,
      shutdown_latch => shutdown_latch,
      src_arst => src_arst,
      src_in => src_in,
      \syncstages_ff_reg[0]\ => \syncstages_ff_reg[0]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_shell_utils_ucc_v1_0_0_top is
  port (
    aclk_ctrl : in STD_LOGIC;
    aclk_freerun : in STD_LOGIC;
    aclk_pcie : in STD_LOGIC;
    aresetn_ctrl : in STD_LOGIC;
    aclk_kernel_00 : out STD_LOGIC;
    aclk_kernel_01 : out STD_LOGIC;
    aclk_kernel_02 : out STD_LOGIC;
    aclk_kernel_03 : out STD_LOGIC;
    aclk_kernel_04 : out STD_LOGIC;
    aclk_kernel_05 : out STD_LOGIC;
    aclk_kernel_cont_00 : out STD_LOGIC;
    aclk_kernel_cont_01 : out STD_LOGIC;
    aclk_kernel_cont_02 : out STD_LOGIC;
    aclk_kernel_cont_03 : out STD_LOGIC;
    aclk_kernel_cont_04 : out STD_LOGIC;
    aclk_kernel_cont_05 : out STD_LOGIC;
    aclk_ext_tog_kernel_00 : out STD_LOGIC;
    aclk_ext_tog_kernel_01 : out STD_LOGIC;
    aclk_ext_tog_kernel_02 : out STD_LOGIC;
    aclk_ext_tog_kernel_03 : out STD_LOGIC;
    aclk_ext_tog_kernel_04 : out STD_LOGIC;
    aclk_ext_tog_kernel_05 : out STD_LOGIC;
    clk_in_kernel_00 : in STD_LOGIC;
    clk_in_kernel_01 : in STD_LOGIC;
    clk_in_kernel_02 : in STD_LOGIC;
    clk_in_kernel_03 : in STD_LOGIC;
    clk_in_kernel_04 : in STD_LOGIC;
    clk_in_kernel_05 : in STD_LOGIC;
    clk_kernel_00_locked : in STD_LOGIC;
    clk_kernel_01_locked : in STD_LOGIC;
    clk_kernel_02_locked : in STD_LOGIC;
    clk_kernel_03_locked : in STD_LOGIC;
    clk_kernel_04_locked : in STD_LOGIC;
    clk_kernel_05_locked : in STD_LOGIC;
    ext_tog_ctrl_kernel_00_enable : in STD_LOGIC;
    ext_tog_ctrl_kernel_01_enable : in STD_LOGIC;
    ext_tog_ctrl_kernel_02_enable : in STD_LOGIC;
    ext_tog_ctrl_kernel_03_enable : in STD_LOGIC;
    ext_tog_ctrl_kernel_04_enable : in STD_LOGIC;
    ext_tog_ctrl_kernel_05_enable : in STD_LOGIC;
    ext_tog_ctrl_kernel_00_in : in STD_LOGIC;
    ext_tog_ctrl_kernel_01_in : in STD_LOGIC;
    ext_tog_ctrl_kernel_02_in : in STD_LOGIC;
    ext_tog_ctrl_kernel_03_in : in STD_LOGIC;
    ext_tog_ctrl_kernel_04_in : in STD_LOGIC;
    ext_tog_ctrl_kernel_05_in : in STD_LOGIC;
    ext_tog_ctrl_kernel_00_out : out STD_LOGIC;
    ext_tog_ctrl_kernel_01_out : out STD_LOGIC;
    ext_tog_ctrl_kernel_02_out : out STD_LOGIC;
    ext_tog_ctrl_kernel_03_out : out STD_LOGIC;
    ext_tog_ctrl_kernel_04_out : out STD_LOGIC;
    ext_tog_ctrl_kernel_05_out : out STD_LOGIC;
    rst_async_kernel_00 : out STD_LOGIC;
    rst_async_kernel_01 : out STD_LOGIC;
    rst_async_kernel_02 : out STD_LOGIC;
    rst_async_kernel_03 : out STD_LOGIC;
    rst_async_kernel_04 : out STD_LOGIC;
    rst_async_kernel_05 : out STD_LOGIC;
    power_down : out STD_LOGIC;
    shutdown_clocks : in STD_LOGIC;
    s_axi_ctrl_mgmt_araddr : in STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_ctrl_mgmt_arready : out STD_LOGIC;
    s_axi_ctrl_mgmt_arvalid : in STD_LOGIC;
    s_axi_ctrl_mgmt_awaddr : in STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_ctrl_mgmt_awready : out STD_LOGIC;
    s_axi_ctrl_mgmt_awvalid : in STD_LOGIC;
    s_axi_ctrl_mgmt_bready : in STD_LOGIC;
    s_axi_ctrl_mgmt_bresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_ctrl_mgmt_bvalid : out STD_LOGIC;
    s_axi_ctrl_mgmt_rdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_ctrl_mgmt_rready : in STD_LOGIC;
    s_axi_ctrl_mgmt_rresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_ctrl_mgmt_rvalid : out STD_LOGIC;
    s_axi_ctrl_mgmt_wdata : in STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_ctrl_mgmt_wready : out STD_LOGIC;
    s_axi_ctrl_mgmt_wstrb : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_ctrl_mgmt_wvalid : in STD_LOGIC
  );
  attribute C_EXT_TOG_ENABLE : integer;
  attribute C_EXT_TOG_ENABLE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_shell_utils_ucc_v1_0_0_top : entity is 1;
  attribute C_FREQ_CNT_REF_CLK_HZ : integer;
  attribute C_FREQ_CNT_REF_CLK_HZ of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_shell_utils_ucc_v1_0_0_top : entity is 33333;
  attribute C_NUM_CLOCKS : integer;
  attribute C_NUM_CLOCKS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_shell_utils_ucc_v1_0_0_top : entity is 2;
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_shell_utils_ucc_v1_0_0_top;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_shell_utils_ucc_v1_0_0_top is
  signal \<const0>\ : STD_LOGIC;
  signal Request_SW : STD_LOGIC;
  signal \Request_SW[15]_i_2_n_0\ : STD_LOGIC;
  signal \Request_SW[15]_i_3_n_0\ : STD_LOGIC;
  signal \Request_SW[15]_i_4_n_0\ : STD_LOGIC;
  signal \Request_SW[15]_i_5_n_0\ : STD_LOGIC;
  signal \Request_SW_reg_n_0_[0]\ : STD_LOGIC;
  signal \Request_SW_reg_n_0_[10]\ : STD_LOGIC;
  signal \Request_SW_reg_n_0_[11]\ : STD_LOGIC;
  signal \Request_SW_reg_n_0_[12]\ : STD_LOGIC;
  signal \Request_SW_reg_n_0_[13]\ : STD_LOGIC;
  signal \Request_SW_reg_n_0_[14]\ : STD_LOGIC;
  signal \Request_SW_reg_n_0_[15]\ : STD_LOGIC;
  signal \Request_SW_reg_n_0_[1]\ : STD_LOGIC;
  signal \Request_SW_reg_n_0_[2]\ : STD_LOGIC;
  signal \Request_SW_reg_n_0_[3]\ : STD_LOGIC;
  signal \Request_SW_reg_n_0_[4]\ : STD_LOGIC;
  signal \Request_SW_reg_n_0_[5]\ : STD_LOGIC;
  signal \Request_SW_reg_n_0_[6]\ : STD_LOGIC;
  signal \Request_SW_reg_n_0_[7]\ : STD_LOGIC;
  signal \Request_SW_reg_n_0_[8]\ : STD_LOGIC;
  signal \Request_SW_reg_n_0_[9]\ : STD_LOGIC;
  signal \^aclk_kernel_00\ : STD_LOGIC;
  signal \^aclk_kernel_01\ : STD_LOGIC;
  signal \^aclk_kernel_cont_00\ : STD_LOGIC;
  signal \^aclk_kernel_cont_01\ : STD_LOGIC;
  signal aresetn_aclk_freerun : STD_LOGIC;
  signal cdc_freq_cntr_aclk_n_65 : STD_LOGIC;
  signal cdc_freq_cntr_aclk_n_66 : STD_LOGIC;
  signal cdc_freq_cntr_aclk_n_67 : STD_LOGIC;
  signal cdc_freq_cntr_aclk_n_68 : STD_LOGIC;
  signal cdc_freq_cntr_aclk_n_69 : STD_LOGIC;
  signal cdc_freq_cntr_aclk_n_70 : STD_LOGIC;
  signal cdc_freq_cntr_aclk_n_71 : STD_LOGIC;
  signal cdc_freq_cntr_aclk_n_72 : STD_LOGIC;
  signal cdc_freq_cntr_aclk_n_73 : STD_LOGIC;
  signal cdc_freq_cntr_aclk_n_74 : STD_LOGIC;
  signal cdc_freq_cntr_aclk_n_75 : STD_LOGIC;
  signal cdc_freq_cntr_aclk_n_76 : STD_LOGIC;
  signal cdc_freq_cntr_aclk_n_77 : STD_LOGIC;
  signal cdc_freq_cntr_aclk_n_78 : STD_LOGIC;
  signal cdc_freq_cntr_aclk_n_79 : STD_LOGIC;
  signal cdc_freq_cntr_aclk_n_80 : STD_LOGIC;
  signal cdc_freq_cntr_aclk_n_81 : STD_LOGIC;
  signal cdc_freq_cntr_aclk_n_82 : STD_LOGIC;
  signal cdc_freq_cntr_aclk_n_83 : STD_LOGIC;
  signal cdc_freq_cntr_aclk_n_84 : STD_LOGIC;
  signal cdc_freq_cntr_aclk_n_85 : STD_LOGIC;
  signal cdc_freq_cntr_aclk_n_86 : STD_LOGIC;
  signal cdc_freq_cntr_aclk_n_87 : STD_LOGIC;
  signal cdc_freq_cntr_aclk_n_88 : STD_LOGIC;
  signal cdc_freq_cntr_aclk_n_89 : STD_LOGIC;
  signal cdc_freq_cntr_aclk_n_90 : STD_LOGIC;
  signal cdc_freq_cntr_aclk_n_91 : STD_LOGIC;
  signal cdc_freq_cntr_aclk_n_92 : STD_LOGIC;
  signal cdc_freq_cntr_aclk_n_93 : STD_LOGIC;
  signal cdc_freq_cntr_aclk_n_94 : STD_LOGIC;
  signal cdc_freq_cntr_aclk_n_95 : STD_LOGIC;
  signal cdc_freq_cntr_aclk_n_96 : STD_LOGIC;
  signal clear : STD_LOGIC;
  signal clock_shutdown_latch_n_4 : STD_LOGIC;
  signal \clock_throttling_aclk_kernel_00/Locked_gated\ : STD_LOGIC;
  signal \clock_throttling_aclk_kernel_00/Locked_gated_0\ : STD_LOGIC;
  signal \clock_throttling_aclk_kernel_00/power_down_out_d1\ : STD_LOGIC;
  signal \clock_throttling_aclk_kernel_00/power_down_out_d1_6\ : STD_LOGIC;
  signal clock_throttling_avg_n_0 : STD_LOGIC;
  signal clock_throttling_avg_n_1 : STD_LOGIC;
  signal clock_throttling_avg_n_10 : STD_LOGIC;
  signal clock_throttling_avg_n_11 : STD_LOGIC;
  signal clock_throttling_avg_n_12 : STD_LOGIC;
  signal clock_throttling_avg_n_13 : STD_LOGIC;
  signal clock_throttling_avg_n_2 : STD_LOGIC;
  signal clock_throttling_avg_n_3 : STD_LOGIC;
  signal clock_throttling_avg_n_4 : STD_LOGIC;
  signal clock_throttling_avg_n_5 : STD_LOGIC;
  signal clock_throttling_avg_n_6 : STD_LOGIC;
  signal clock_throttling_avg_n_7 : STD_LOGIC;
  signal clock_throttling_avg_n_8 : STD_LOGIC;
  signal clock_throttling_avg_n_9 : STD_LOGIC;
  signal cmd_stall : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal \cmd_stall[0]_i_1_n_0\ : STD_LOGIC;
  signal \cmd_stall[1]_i_1_n_0\ : STD_LOGIC;
  signal \cmd_stall[2]_i_1_n_0\ : STD_LOGIC;
  signal \cmd_stall[3]_i_1_n_0\ : STD_LOGIC;
  signal \cmd_stall[4]_i_1_n_0\ : STD_LOGIC;
  signal \cmd_stall[4]_i_2_n_0\ : STD_LOGIC;
  signal \cmd_stall[4]_i_3_n_0\ : STD_LOGIC;
  signal done_ref_aclk : STD_LOGIC;
  signal \done_ref_aclk_d[4]_i_1_n_0\ : STD_LOGIC;
  signal \done_ref_aclk_d[4]_i_2_n_0\ : STD_LOGIC;
  signal done_ref_aclk_d_reg : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal done_ref_aclk_fr : STD_LOGIC;
  signal done_ref_i : STD_LOGIC;
  signal done_ref_kernel_0 : STD_LOGIC;
  signal done_ref_kernel_1 : STD_LOGIC;
  signal done_ref_kernel_fr_1 : STD_LOGIC;
  signal done_test_aclk_i_1_n_0 : STD_LOGIC;
  signal done_test_aclk_reg_n_0 : STD_LOGIC;
  signal frequency_counter_aclk_n_17 : STD_LOGIC;
  signal frequency_counter_aclk_n_41 : STD_LOGIC;
  signal gapping_demand_pending : STD_LOGIC;
  signal gapping_demand_pending_i_1_n_0 : STD_LOGIC;
  signal gapping_demand_toggle_i_1_n_0 : STD_LOGIC;
  signal gapping_demand_toggle_reg_n_0 : STD_LOGIC;
  signal \genblk1[0].done_ref_kernel_d[4]_i_1_n_0\ : STD_LOGIC;
  signal \genblk1[0].done_ref_kernel_d_reg\ : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal \genblk1[0].done_test_kernel[0]_i_1_n_0\ : STD_LOGIC;
  signal \genblk1[0].done_test_kernel_reg\ : STD_LOGIC;
  signal \genblk1[1].done_ref_kernel_d[9]_i_1_n_0\ : STD_LOGIC;
  signal \genblk1[1].done_ref_kernel_d[9]_i_2_n_0\ : STD_LOGIC;
  signal \genblk1[1].done_ref_kernel_d_reg\ : STD_LOGIC_VECTOR ( 9 downto 5 );
  signal \genblk1[1].done_test_kernel[1]_i_1_n_0\ : STD_LOGIC;
  signal \genblk1[1].done_test_kernel_reg\ : STD_LOGIC;
  signal \genblk1[1].frequency_counter_kernel_inst_n_17\ : STD_LOGIC;
  signal \genblk1[1].frequency_counter_kernel_inst_n_41\ : STD_LOGIC;
  signal p_0_in : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal p_0_in0 : STD_LOGIC;
  signal \p_0_in__0\ : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal p_1_in : STD_LOGIC;
  signal p_2_in : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal \p_2_in__0\ : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal p_3_in : STD_LOGIC_VECTOR ( 0 to 0 );
  signal p_4_in : STD_LOGIC_VECTOR ( 0 to 0 );
  signal p_6_in : STD_LOGIC_VECTOR ( 24 downto 0 );
  signal ref_clk_cntr_i_reg : STD_LOGIC_VECTOR ( 15 downto 0 );
  signal ref_clk_cntr_i_reg_5 : STD_LOGIC_VECTOR ( 15 downto 0 );
  signal ref_clk_cntr_i_reg_9 : STD_LOGIC_VECTOR ( 15 downto 0 );
  signal ref_cntr_aclk : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal ref_cntr_kernel : STD_LOGIC_VECTOR ( 63 downto 0 );
  signal request_ack : STD_LOGIC;
  signal request_ack_i_2_n_0 : STD_LOGIC;
  signal request_ack_reg_n_0 : STD_LOGIC;
  signal request_latch : STD_LOGIC;
  signal \^s_axi_ctrl_mgmt_arready\ : STD_LOGIC;
  signal s_axi_ctrl_mgmt_arready_i_i_2_n_0 : STD_LOGIC;
  signal s_axi_ctrl_mgmt_arready_i_i_3_n_0 : STD_LOGIC;
  signal \^s_axi_ctrl_mgmt_awready\ : STD_LOGIC;
  signal s_axi_ctrl_mgmt_awready_i0 : STD_LOGIC;
  signal s_axi_ctrl_mgmt_awready_i_i_1_n_0 : STD_LOGIC;
  signal \^s_axi_ctrl_mgmt_bvalid\ : STD_LOGIC;
  signal s_axi_ctrl_mgmt_bvalid_i_i_1_n_0 : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[0]_i_2_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[0]_i_4_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[0]_i_5_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[0]_i_6_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[0]_i_8_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[0]_i_9_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[10]_i_1_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[10]_i_2_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[10]_i_3_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[10]_i_4_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[10]_i_5_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[10]_i_6_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[11]_i_1_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[11]_i_2_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[11]_i_3_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[11]_i_4_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[11]_i_5_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[11]_i_6_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[12]_i_1_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[12]_i_2_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[12]_i_3_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[12]_i_4_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[12]_i_5_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[12]_i_6_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[13]_i_1_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[13]_i_2_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[13]_i_3_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[13]_i_4_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[13]_i_5_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[13]_i_6_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[14]_i_1_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[14]_i_2_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[14]_i_3_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[14]_i_4_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[14]_i_5_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[14]_i_6_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[15]_i_1_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[15]_i_2_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[15]_i_3_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[15]_i_4_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[15]_i_5_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[15]_i_6_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[15]_i_7_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[16]_i_2_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[16]_i_4_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[16]_i_5_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[16]_i_7_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[16]_i_8_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[17]_i_3_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[17]_i_4_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[17]_i_5_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[17]_i_6_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[18]_i_2_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[18]_i_4_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[18]_i_5_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[18]_i_6_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[19]_i_3_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[19]_i_4_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[19]_i_5_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[19]_i_6_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[19]_i_7_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[19]_i_8_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[1]_i_1_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[1]_i_2_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[1]_i_3_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[1]_i_4_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[1]_i_5_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[1]_i_6_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[1]_i_7_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[1]_i_8_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[20]_i_2_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[20]_i_4_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[20]_i_5_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[21]_i_2_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[21]_i_3_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[21]_i_4_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[21]_i_7_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[22]_i_2_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[22]_i_3_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[22]_i_4_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[22]_i_6_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[22]_i_7_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[22]_i_9_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[23]_i_2_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[23]_i_3_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[23]_i_5_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[23]_i_6_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[24]_i_2_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[24]_i_3_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[24]_i_5_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[24]_i_6_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[24]_i_7_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[24]_i_9_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[25]_i_2_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[25]_i_3_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[25]_i_5_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[25]_i_6_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[26]_i_2_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[26]_i_3_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[26]_i_5_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[26]_i_6_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[27]_i_2_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[27]_i_3_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[27]_i_5_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[27]_i_6_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[28]_i_2_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[28]_i_3_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[28]_i_5_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[28]_i_6_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[29]_i_2_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[29]_i_3_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[29]_i_5_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[29]_i_6_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[29]_i_7_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[2]_i_1_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[2]_i_2_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[2]_i_3_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[2]_i_4_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[2]_i_5_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[2]_i_6_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[30]_i_1_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[30]_i_2_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[30]_i_3_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[30]_i_4_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[31]_i_10_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[31]_i_11_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[31]_i_12_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[31]_i_1_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[31]_i_2_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[31]_i_3_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[31]_i_4_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[31]_i_5_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[31]_i_6_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[31]_i_7_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[31]_i_8_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[31]_i_9_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[3]_i_1_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[3]_i_2_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[3]_i_3_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[3]_i_4_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[3]_i_5_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[3]_i_6_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[3]_i_7_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[4]_i_1_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[4]_i_2_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[4]_i_3_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[4]_i_4_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[4]_i_5_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[4]_i_6_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[5]_i_1_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[5]_i_2_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[5]_i_3_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[5]_i_4_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[5]_i_5_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[5]_i_6_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[6]_i_1_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[6]_i_2_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[6]_i_3_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[6]_i_4_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[6]_i_5_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[6]_i_6_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[7]_i_1_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[7]_i_2_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[7]_i_3_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[7]_i_4_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[7]_i_5_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[7]_i_6_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[7]_i_6_n_1\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[7]_i_7_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[8]_i_1_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[8]_i_2_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[8]_i_3_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[8]_i_4_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[8]_i_5_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[8]_i_6_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[9]_i_1_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[9]_i_2_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[9]_i_3_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[9]_i_4_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[9]_i_5_n_0\ : STD_LOGIC;
  signal \s_axi_ctrl_mgmt_rdata_i[9]_i_6_n_0\ : STD_LOGIC;
  signal \^s_axi_ctrl_mgmt_rvalid\ : STD_LOGIC;
  signal s_axi_ctrl_mgmt_rvalid_i_i_1_n_0 : STD_LOGIC;
  signal shutdown_latch : STD_LOGIC;
  signal test_clk_cntr_synced_01 : STD_LOGIC;
  signal test_clk_cntr_synced_11 : STD_LOGIC;
  signal \test_clk_cntr_synced_i[0]_2\ : STD_LOGIC_VECTOR ( 22 downto 0 );
  signal \test_clk_cntr_synced_i[0]_4\ : STD_LOGIC_VECTOR ( 22 downto 0 );
  signal \test_clk_cntr_synced_i[0]_8\ : STD_LOGIC_VECTOR ( 22 downto 0 );
  signal \test_clk_cntr_synced_i[1]_1\ : STD_LOGIC_VECTOR ( 22 downto 0 );
  signal \test_clk_cntr_synced_i[1]_3\ : STD_LOGIC_VECTOR ( 22 downto 0 );
  signal \test_clk_cntr_synced_i[1]_7\ : STD_LOGIC_VECTOR ( 22 downto 0 );
  signal test_cntr0_aclk : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal test_cntr0_kernel : STD_LOGIC_VECTOR ( 63 downto 0 );
  signal test_cntr1_kernel : STD_LOGIC_VECTOR ( 63 downto 0 );
  signal user_rst_aclk_fr : STD_LOGIC;
  signal user_rst_aclk_i_1_n_0 : STD_LOGIC;
  signal user_rst_aclk_i_2_n_0 : STD_LOGIC;
  signal \user_rst_d[2]_i_2_n_0\ : STD_LOGIC;
  signal \user_rst_d[3]_i_2_n_0\ : STD_LOGIC;
  signal \user_rst_d[4]_i_1_n_0\ : STD_LOGIC;
  signal \user_rst_d[4]_i_3_n_0\ : STD_LOGIC;
  signal \user_rst_d[4]_i_4_n_0\ : STD_LOGIC;
  signal \user_rst_d[4]_i_5_n_0\ : STD_LOGIC;
  signal \user_rst_d_reg_n_0_[0]\ : STD_LOGIC;
  signal \user_rst_d_reg_n_0_[1]\ : STD_LOGIC;
  signal \user_rst_d_reg_n_0_[2]\ : STD_LOGIC;
  signal \user_rst_d_reg_n_0_[4]\ : STD_LOGIC;
  signal \user_rst_kernel[0]_i_1_n_0\ : STD_LOGIC;
  signal \user_rst_kernel[0]_i_2_n_0\ : STD_LOGIC;
  signal \user_rst_kernel[1]_i_10_n_0\ : STD_LOGIC;
  signal \user_rst_kernel[1]_i_1_n_0\ : STD_LOGIC;
  signal \user_rst_kernel[1]_i_2_n_0\ : STD_LOGIC;
  signal \user_rst_kernel[1]_i_3_n_0\ : STD_LOGIC;
  signal \user_rst_kernel[1]_i_4_n_0\ : STD_LOGIC;
  signal \user_rst_kernel[1]_i_5_n_0\ : STD_LOGIC;
  signal \user_rst_kernel[1]_i_6_n_0\ : STD_LOGIC;
  signal \user_rst_kernel[1]_i_7_n_0\ : STD_LOGIC;
  signal \user_rst_kernel[1]_i_8_n_0\ : STD_LOGIC;
  signal \user_rst_kernel[1]_i_9_n_0\ : STD_LOGIC;
  signal user_rst_kernel_fr_0 : STD_LOGIC;
  signal user_rst_kernel_fr_1 : STD_LOGIC;
  signal \user_rst_kernel_reg_n_0_[0]\ : STD_LOGIC;
  signal \user_rst_kernel_reg_n_0_[1]\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Request_SW[15]_i_3\ : label is "soft_lutpair25";
  attribute SOFT_HLUTNM of \Request_SW[15]_i_4\ : label is "soft_lutpair8";
  attribute SOFT_HLUTNM of \Request_SW[15]_i_5\ : label is "soft_lutpair24";
  attribute DEST_SYNC_FF : integer;
  attribute DEST_SYNC_FF of cdc_freq_cntr_aclk : label is 2;
  attribute INIT_SYNC_FF : integer;
  attribute INIT_SYNC_FF of cdc_freq_cntr_aclk : label is 0;
  attribute SIM_ASSERT_CHK : integer;
  attribute SIM_ASSERT_CHK of cdc_freq_cntr_aclk : label is 0;
  attribute SRC_INPUT_REG : integer;
  attribute SRC_INPUT_REG of cdc_freq_cntr_aclk : label is 0;
  attribute VERSION : integer;
  attribute VERSION of cdc_freq_cntr_aclk : label is 0;
  attribute WIDTH : integer;
  attribute WIDTH of cdc_freq_cntr_aclk : label is 97;
  attribute XPM_CDC : string;
  attribute XPM_CDC of cdc_freq_cntr_aclk : label is "ARRAY_SINGLE";
  attribute XPM_MODULE : string;
  attribute XPM_MODULE of cdc_freq_cntr_aclk : label is "TRUE";
  attribute DEF_VAL : string;
  attribute DEF_VAL of cdc_user_rst_aclk : label is "1'b0";
  attribute DEST_SYNC_FF of cdc_user_rst_aclk : label is 3;
  attribute INIT_SYNC_FF of cdc_user_rst_aclk : label is 0;
  attribute INV_DEF_VAL : string;
  attribute INV_DEF_VAL of cdc_user_rst_aclk : label is "1'b1";
  attribute RST_ACTIVE_HIGH : integer;
  attribute RST_ACTIVE_HIGH of cdc_user_rst_aclk : label is 1;
  attribute VERSION of cdc_user_rst_aclk : label is 0;
  attribute XPM_CDC of cdc_user_rst_aclk : label is "ASYNC_RST";
  attribute XPM_MODULE of cdc_user_rst_aclk : label is "TRUE";
  attribute SOFT_HLUTNM of \cmd_stall[0]_i_1\ : label is "soft_lutpair26";
  attribute SOFT_HLUTNM of \cmd_stall[1]_i_1\ : label is "soft_lutpair13";
  attribute SOFT_HLUTNM of \cmd_stall[2]_i_1\ : label is "soft_lutpair13";
  attribute SOFT_HLUTNM of \cmd_stall[4]_i_2\ : label is "soft_lutpair26";
  attribute SOFT_HLUTNM of \cmd_stall[4]_i_3\ : label is "soft_lutpair9";
  attribute SOFT_HLUTNM of \done_ref_aclk_d[1]_i_1\ : label is "soft_lutpair58";
  attribute SOFT_HLUTNM of \done_ref_aclk_d[2]_i_1\ : label is "soft_lutpair58";
  attribute SOFT_HLUTNM of \done_ref_aclk_d[3]_i_1\ : label is "soft_lutpair20";
  attribute SOFT_HLUTNM of \done_ref_aclk_d[4]_i_3\ : label is "soft_lutpair20";
  attribute SOFT_HLUTNM of gapping_demand_pending_i_1 : label is "soft_lutpair11";
  attribute SOFT_HLUTNM of gapping_demand_toggle_i_1 : label is "soft_lutpair11";
  attribute DEST_SYNC_FF of \genblk1[0].cdc_freq_cntr_kernel\ : label is 3;
  attribute INIT_SYNC_FF of \genblk1[0].cdc_freq_cntr_kernel\ : label is 0;
  attribute SIM_ASSERT_CHK of \genblk1[0].cdc_freq_cntr_kernel\ : label is 0;
  attribute SRC_INPUT_REG of \genblk1[0].cdc_freq_cntr_kernel\ : label is 0;
  attribute VERSION of \genblk1[0].cdc_freq_cntr_kernel\ : label is 0;
  attribute WIDTH of \genblk1[0].cdc_freq_cntr_kernel\ : label is 97;
  attribute XPM_CDC of \genblk1[0].cdc_freq_cntr_kernel\ : label is "ARRAY_SINGLE";
  attribute XPM_MODULE of \genblk1[0].cdc_freq_cntr_kernel\ : label is "TRUE";
  attribute DEF_VAL of \genblk1[0].cdc_user_rst_kernel\ : label is "1'b0";
  attribute DEST_SYNC_FF of \genblk1[0].cdc_user_rst_kernel\ : label is 3;
  attribute INIT_SYNC_FF of \genblk1[0].cdc_user_rst_kernel\ : label is 0;
  attribute INV_DEF_VAL of \genblk1[0].cdc_user_rst_kernel\ : label is "1'b1";
  attribute RST_ACTIVE_HIGH of \genblk1[0].cdc_user_rst_kernel\ : label is 1;
  attribute VERSION of \genblk1[0].cdc_user_rst_kernel\ : label is 0;
  attribute XPM_CDC of \genblk1[0].cdc_user_rst_kernel\ : label is "ASYNC_RST";
  attribute XPM_MODULE of \genblk1[0].cdc_user_rst_kernel\ : label is "TRUE";
  attribute SOFT_HLUTNM of \genblk1[0].done_ref_kernel_d[1]_i_1\ : label is "soft_lutpair59";
  attribute SOFT_HLUTNM of \genblk1[0].done_ref_kernel_d[2]_i_1\ : label is "soft_lutpair59";
  attribute SOFT_HLUTNM of \genblk1[0].done_ref_kernel_d[3]_i_1\ : label is "soft_lutpair21";
  attribute SOFT_HLUTNM of \genblk1[0].done_ref_kernel_d[4]_i_3\ : label is "soft_lutpair21";
  attribute DEST_SYNC_FF of \genblk1[1].cdc_freq_cntr_kernel\ : label is 3;
  attribute INIT_SYNC_FF of \genblk1[1].cdc_freq_cntr_kernel\ : label is 0;
  attribute SIM_ASSERT_CHK of \genblk1[1].cdc_freq_cntr_kernel\ : label is 0;
  attribute SRC_INPUT_REG of \genblk1[1].cdc_freq_cntr_kernel\ : label is 0;
  attribute VERSION of \genblk1[1].cdc_freq_cntr_kernel\ : label is 0;
  attribute WIDTH of \genblk1[1].cdc_freq_cntr_kernel\ : label is 97;
  attribute XPM_CDC of \genblk1[1].cdc_freq_cntr_kernel\ : label is "ARRAY_SINGLE";
  attribute XPM_MODULE of \genblk1[1].cdc_freq_cntr_kernel\ : label is "TRUE";
  attribute DEF_VAL of \genblk1[1].cdc_user_rst_kernel\ : label is "1'b0";
  attribute DEST_SYNC_FF of \genblk1[1].cdc_user_rst_kernel\ : label is 3;
  attribute INIT_SYNC_FF of \genblk1[1].cdc_user_rst_kernel\ : label is 0;
  attribute INV_DEF_VAL of \genblk1[1].cdc_user_rst_kernel\ : label is "1'b1";
  attribute RST_ACTIVE_HIGH of \genblk1[1].cdc_user_rst_kernel\ : label is 1;
  attribute VERSION of \genblk1[1].cdc_user_rst_kernel\ : label is 0;
  attribute XPM_CDC of \genblk1[1].cdc_user_rst_kernel\ : label is "ASYNC_RST";
  attribute XPM_MODULE of \genblk1[1].cdc_user_rst_kernel\ : label is "TRUE";
  attribute SOFT_HLUTNM of \genblk1[1].done_ref_kernel_d[6]_i_1\ : label is "soft_lutpair60";
  attribute SOFT_HLUTNM of \genblk1[1].done_ref_kernel_d[7]_i_1\ : label is "soft_lutpair60";
  attribute SOFT_HLUTNM of \genblk1[1].done_ref_kernel_d[8]_i_1\ : label is "soft_lutpair22";
  attribute SOFT_HLUTNM of \genblk1[1].done_ref_kernel_d[9]_i_3\ : label is "soft_lutpair22";
  attribute DEF_VAL of psreset_aclk_freerun : label is "1'b1";
  attribute DEST_SYNC_FF of psreset_aclk_freerun : label is 3;
  attribute INIT_SYNC_FF of psreset_aclk_freerun : label is 0;
  attribute INV_DEF_VAL of psreset_aclk_freerun : label is "1'b0";
  attribute RST_ACTIVE_HIGH of psreset_aclk_freerun : label is 0;
  attribute VERSION of psreset_aclk_freerun : label is 0;
  attribute XPM_CDC of psreset_aclk_freerun : label is "ASYNC_RST";
  attribute XPM_MODULE of psreset_aclk_freerun : label is "TRUE";
  attribute SOFT_HLUTNM of request_ack_i_2 : label is "soft_lutpair25";
  attribute SOFT_HLUTNM of s_axi_ctrl_mgmt_arready_i_i_2 : label is "soft_lutpair34";
  attribute SOFT_HLUTNM of s_axi_ctrl_mgmt_arready_i_i_3 : label is "soft_lutpair14";
  attribute SOFT_HLUTNM of s_axi_ctrl_mgmt_awready_i_i_1 : label is "soft_lutpair8";
  attribute SOFT_HLUTNM of s_axi_ctrl_mgmt_awready_i_i_2 : label is "soft_lutpair9";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[0]_i_9\ : label is "soft_lutpair19";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[10]_i_2\ : label is "soft_lutpair39";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[10]_i_5\ : label is "soft_lutpair45";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[11]_i_2\ : label is "soft_lutpair39";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[11]_i_5\ : label is "soft_lutpair45";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[12]_i_2\ : label is "soft_lutpair40";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[12]_i_5\ : label is "soft_lutpair46";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[13]_i_2\ : label is "soft_lutpair40";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[13]_i_5\ : label is "soft_lutpair46";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[14]_i_2\ : label is "soft_lutpair41";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[14]_i_3\ : label is "soft_lutpair19";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[14]_i_5\ : label is "soft_lutpair47";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[15]_i_2\ : label is "soft_lutpair41";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[15]_i_3\ : label is "soft_lutpair18";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[15]_i_5\ : label is "soft_lutpair47";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[15]_i_7\ : label is "soft_lutpair23";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[16]_i_5\ : label is "soft_lutpair12";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[16]_i_7\ : label is "soft_lutpair33";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[17]_i_3\ : label is "soft_lutpair42";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[17]_i_4\ : label is "soft_lutpair32";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[17]_i_5\ : label is "soft_lutpair51";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[18]_i_4\ : label is "soft_lutpair35";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[18]_i_6\ : label is "soft_lutpair15";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[19]_i_3\ : label is "soft_lutpair42";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[19]_i_4\ : label is "soft_lutpair16";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[19]_i_5\ : label is "soft_lutpair32";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[19]_i_6\ : label is "soft_lutpair51";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[19]_i_7\ : label is "soft_lutpair27";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[1]_i_3\ : label is "soft_lutpair27";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[1]_i_8\ : label is "soft_lutpair10";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[20]_i_5\ : label is "soft_lutpair16";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[21]_i_2\ : label is "soft_lutpair33";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[21]_i_3\ : label is "soft_lutpair55";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[22]_i_7\ : label is "soft_lutpair28";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[22]_i_9\ : label is "soft_lutpair12";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[23]_i_6\ : label is "soft_lutpair52";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[24]_i_3\ : label is "soft_lutpair18";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[24]_i_6\ : label is "soft_lutpair55";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[24]_i_7\ : label is "soft_lutpair10";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[24]_i_9\ : label is "soft_lutpair17";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[25]_i_6\ : label is "soft_lutpair52";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[26]_i_6\ : label is "soft_lutpair53";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[27]_i_6\ : label is "soft_lutpair53";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[28]_i_6\ : label is "soft_lutpair54";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[29]_i_6\ : label is "soft_lutpair54";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[29]_i_7\ : label is "soft_lutpair23";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[2]_i_2\ : label is "soft_lutpair29";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[2]_i_3\ : label is "soft_lutpair43";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[2]_i_5\ : label is "soft_lutpair48";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[30]_i_2\ : label is "soft_lutpair28";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[31]_i_10\ : label is "soft_lutpair15";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[31]_i_6\ : label is "soft_lutpair35";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[3]_i_2\ : label is "soft_lutpair17";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[3]_i_3\ : label is "soft_lutpair29";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[3]_i_4\ : label is "soft_lutpair43";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[3]_i_6\ : label is "soft_lutpair48";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[4]_i_3\ : label is "soft_lutpair36";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[4]_i_4\ : label is "soft_lutpair30";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[4]_i_5\ : label is "soft_lutpair49";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[5]_i_3\ : label is "soft_lutpair36";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[5]_i_4\ : label is "soft_lutpair30";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[5]_i_5\ : label is "soft_lutpair49";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[6]_i_3\ : label is "soft_lutpair37";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[6]_i_4\ : label is "soft_lutpair31";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[6]_i_5\ : label is "soft_lutpair50";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[7]_i_3\ : label is "soft_lutpair37";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[7]_i_4\ : label is "soft_lutpair31";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[7]_i_5\ : label is "soft_lutpair50";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[8]_i_2\ : label is "soft_lutpair38";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[8]_i_5\ : label is "soft_lutpair44";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[9]_i_2\ : label is "soft_lutpair38";
  attribute SOFT_HLUTNM of \s_axi_ctrl_mgmt_rdata_i[9]_i_5\ : label is "soft_lutpair44";
  attribute SOFT_HLUTNM of s_axi_ctrl_mgmt_rvalid_i_i_1 : label is "soft_lutpair34";
  attribute SOFT_HLUTNM of \user_rst_d[2]_i_2\ : label is "soft_lutpair57";
  attribute SOFT_HLUTNM of \user_rst_d[3]_i_2\ : label is "soft_lutpair57";
  attribute SOFT_HLUTNM of \user_rst_d[4]_i_3\ : label is "soft_lutpair24";
  attribute SOFT_HLUTNM of \user_rst_d[4]_i_4\ : label is "soft_lutpair14";
  attribute SOFT_HLUTNM of \user_rst_kernel[0]_i_2\ : label is "soft_lutpair56";
  attribute SOFT_HLUTNM of \user_rst_kernel[1]_i_4\ : label is "soft_lutpair56";
begin
  aclk_ext_tog_kernel_02 <= \<const0>\;
  aclk_ext_tog_kernel_03 <= \<const0>\;
  aclk_ext_tog_kernel_04 <= \<const0>\;
  aclk_ext_tog_kernel_05 <= \<const0>\;
  aclk_kernel_00 <= \^aclk_kernel_00\;
  aclk_kernel_01 <= \^aclk_kernel_01\;
  aclk_kernel_02 <= \<const0>\;
  aclk_kernel_03 <= \<const0>\;
  aclk_kernel_04 <= \<const0>\;
  aclk_kernel_05 <= \<const0>\;
  aclk_kernel_cont_00 <= \^aclk_kernel_cont_00\;
  aclk_kernel_cont_01 <= \^aclk_kernel_cont_01\;
  aclk_kernel_cont_02 <= \<const0>\;
  aclk_kernel_cont_03 <= \<const0>\;
  aclk_kernel_cont_04 <= \<const0>\;
  aclk_kernel_cont_05 <= \<const0>\;
  ext_tog_ctrl_kernel_02_out <= \<const0>\;
  ext_tog_ctrl_kernel_03_out <= \<const0>\;
  ext_tog_ctrl_kernel_04_out <= \<const0>\;
  ext_tog_ctrl_kernel_05_out <= \<const0>\;
  rst_async_kernel_02 <= \<const0>\;
  rst_async_kernel_03 <= \<const0>\;
  rst_async_kernel_04 <= \<const0>\;
  rst_async_kernel_05 <= \<const0>\;
  s_axi_ctrl_mgmt_arready <= \^s_axi_ctrl_mgmt_arready\;
  s_axi_ctrl_mgmt_awready <= \^s_axi_ctrl_mgmt_awready\;
  s_axi_ctrl_mgmt_bresp(1) <= \<const0>\;
  s_axi_ctrl_mgmt_bresp(0) <= \<const0>\;
  s_axi_ctrl_mgmt_bvalid <= \^s_axi_ctrl_mgmt_bvalid\;
  s_axi_ctrl_mgmt_rresp(1) <= \<const0>\;
  s_axi_ctrl_mgmt_rresp(0) <= \<const0>\;
  s_axi_ctrl_mgmt_rvalid <= \^s_axi_ctrl_mgmt_rvalid\;
  s_axi_ctrl_mgmt_wready <= \^s_axi_ctrl_mgmt_awready\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Request_SW[15]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000100000000000"
    )
        port map (
      I0 => \Request_SW[15]_i_2_n_0\,
      I1 => \Request_SW[15]_i_3_n_0\,
      I2 => s_axi_ctrl_mgmt_awaddr(3),
      I3 => s_axi_ctrl_mgmt_awaddr(12),
      I4 => \Request_SW[15]_i_4_n_0\,
      I5 => \Request_SW[15]_i_5_n_0\,
      O => Request_SW
    );
\Request_SW[15]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => s_axi_ctrl_mgmt_awaddr(4),
      I1 => s_axi_ctrl_mgmt_awaddr(5),
      I2 => s_axi_ctrl_mgmt_awaddr(6),
      I3 => s_axi_ctrl_mgmt_awaddr(7),
      O => \Request_SW[15]_i_2_n_0\
    );
\Request_SW[15]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => s_axi_ctrl_mgmt_awaddr(8),
      I1 => s_axi_ctrl_mgmt_awaddr(9),
      I2 => s_axi_ctrl_mgmt_awaddr(2),
      O => \Request_SW[15]_i_3_n_0\
    );
\Request_SW[15]_i_4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFDFFF"
    )
        port map (
      I0 => s_axi_ctrl_mgmt_awready_i0,
      I1 => \^s_axi_ctrl_mgmt_awready\,
      I2 => s_axi_ctrl_mgmt_wvalid,
      I3 => s_axi_ctrl_mgmt_awvalid,
      I4 => \^s_axi_ctrl_mgmt_bvalid\,
      O => \Request_SW[15]_i_4_n_0\
    );
\Request_SW[15]_i_5\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000001"
    )
        port map (
      I0 => s_axi_ctrl_mgmt_awaddr(15),
      I1 => s_axi_ctrl_mgmt_awaddr(11),
      I2 => s_axi_ctrl_mgmt_awaddr(10),
      I3 => s_axi_ctrl_mgmt_awaddr(14),
      I4 => s_axi_ctrl_mgmt_awaddr(13),
      O => \Request_SW[15]_i_5_n_0\
    );
\Request_SW_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => Request_SW,
      D => s_axi_ctrl_mgmt_wdata(4),
      Q => \Request_SW_reg_n_0_[0]\,
      R => clear
    );
\Request_SW_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => Request_SW,
      D => s_axi_ctrl_mgmt_wdata(14),
      Q => \Request_SW_reg_n_0_[10]\,
      R => clear
    );
\Request_SW_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => Request_SW,
      D => s_axi_ctrl_mgmt_wdata(15),
      Q => \Request_SW_reg_n_0_[11]\,
      R => clear
    );
\Request_SW_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => Request_SW,
      D => s_axi_ctrl_mgmt_wdata(16),
      Q => \Request_SW_reg_n_0_[12]\,
      R => clear
    );
\Request_SW_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => Request_SW,
      D => s_axi_ctrl_mgmt_wdata(17),
      Q => \Request_SW_reg_n_0_[13]\,
      R => clear
    );
\Request_SW_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => Request_SW,
      D => s_axi_ctrl_mgmt_wdata(18),
      Q => \Request_SW_reg_n_0_[14]\,
      R => clear
    );
\Request_SW_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => Request_SW,
      D => s_axi_ctrl_mgmt_wdata(19),
      Q => \Request_SW_reg_n_0_[15]\,
      R => clear
    );
\Request_SW_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => Request_SW,
      D => s_axi_ctrl_mgmt_wdata(5),
      Q => \Request_SW_reg_n_0_[1]\,
      R => clear
    );
\Request_SW_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => Request_SW,
      D => s_axi_ctrl_mgmt_wdata(6),
      Q => \Request_SW_reg_n_0_[2]\,
      R => clear
    );
\Request_SW_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => Request_SW,
      D => s_axi_ctrl_mgmt_wdata(7),
      Q => \Request_SW_reg_n_0_[3]\,
      R => clear
    );
\Request_SW_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => Request_SW,
      D => s_axi_ctrl_mgmt_wdata(8),
      Q => \Request_SW_reg_n_0_[4]\,
      R => clear
    );
\Request_SW_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => Request_SW,
      D => s_axi_ctrl_mgmt_wdata(9),
      Q => \Request_SW_reg_n_0_[5]\,
      R => clear
    );
\Request_SW_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => Request_SW,
      D => s_axi_ctrl_mgmt_wdata(10),
      Q => \Request_SW_reg_n_0_[6]\,
      R => clear
    );
\Request_SW_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => Request_SW,
      D => s_axi_ctrl_mgmt_wdata(11),
      Q => \Request_SW_reg_n_0_[7]\,
      R => clear
    );
\Request_SW_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => Request_SW,
      D => s_axi_ctrl_mgmt_wdata(12),
      Q => \Request_SW_reg_n_0_[8]\,
      R => clear
    );
\Request_SW_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => Request_SW,
      D => s_axi_ctrl_mgmt_wdata(13),
      Q => \Request_SW_reg_n_0_[9]\,
      R => clear
    );
cdc_freq_cntr_aclk: entity work.\decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized3\
     port map (
      dest_clk => aclk_ctrl,
      dest_out(96) => done_ref_aclk,
      dest_out(95 downto 64) => ref_cntr_aclk(31 downto 0),
      dest_out(63 downto 32) => test_cntr0_aclk(31 downto 0),
      dest_out(31) => cdc_freq_cntr_aclk_n_65,
      dest_out(30) => cdc_freq_cntr_aclk_n_66,
      dest_out(29) => cdc_freq_cntr_aclk_n_67,
      dest_out(28) => cdc_freq_cntr_aclk_n_68,
      dest_out(27) => cdc_freq_cntr_aclk_n_69,
      dest_out(26) => cdc_freq_cntr_aclk_n_70,
      dest_out(25) => cdc_freq_cntr_aclk_n_71,
      dest_out(24) => cdc_freq_cntr_aclk_n_72,
      dest_out(23) => cdc_freq_cntr_aclk_n_73,
      dest_out(22) => cdc_freq_cntr_aclk_n_74,
      dest_out(21) => cdc_freq_cntr_aclk_n_75,
      dest_out(20) => cdc_freq_cntr_aclk_n_76,
      dest_out(19) => cdc_freq_cntr_aclk_n_77,
      dest_out(18) => cdc_freq_cntr_aclk_n_78,
      dest_out(17) => cdc_freq_cntr_aclk_n_79,
      dest_out(16) => cdc_freq_cntr_aclk_n_80,
      dest_out(15) => cdc_freq_cntr_aclk_n_81,
      dest_out(14) => cdc_freq_cntr_aclk_n_82,
      dest_out(13) => cdc_freq_cntr_aclk_n_83,
      dest_out(12) => cdc_freq_cntr_aclk_n_84,
      dest_out(11) => cdc_freq_cntr_aclk_n_85,
      dest_out(10) => cdc_freq_cntr_aclk_n_86,
      dest_out(9) => cdc_freq_cntr_aclk_n_87,
      dest_out(8) => cdc_freq_cntr_aclk_n_88,
      dest_out(7) => cdc_freq_cntr_aclk_n_89,
      dest_out(6) => cdc_freq_cntr_aclk_n_90,
      dest_out(5) => cdc_freq_cntr_aclk_n_91,
      dest_out(4) => cdc_freq_cntr_aclk_n_92,
      dest_out(3) => cdc_freq_cntr_aclk_n_93,
      dest_out(2) => cdc_freq_cntr_aclk_n_94,
      dest_out(1) => cdc_freq_cntr_aclk_n_95,
      dest_out(0) => cdc_freq_cntr_aclk_n_96,
      src_clk => '0',
      src_in(96) => done_ref_aclk_fr,
      src_in(95 downto 80) => B"0000000000000000",
      src_in(79 downto 64) => ref_clk_cntr_i_reg(15 downto 0),
      src_in(63) => frequency_counter_aclk_n_17,
      src_in(62 downto 55) => B"00000000",
      src_in(54 downto 32) => \test_clk_cntr_synced_i[0]_2\(22 downto 0),
      src_in(31) => frequency_counter_aclk_n_41,
      src_in(30 downto 23) => B"00000000",
      src_in(22 downto 0) => \test_clk_cntr_synced_i[1]_1\(22 downto 0)
    );
cdc_user_rst_aclk: entity work.\decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1\
     port map (
      dest_arst => user_rst_aclk_fr,
      dest_clk => aclk_freerun,
      src_arst => p_3_in(0)
    );
clock_shutdown_latch: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_shell_utils_ucc_v1_0_0_shutdown_latch
     port map (
      Q(15) => \Request_SW_reg_n_0_[15]\,
      Q(14) => \Request_SW_reg_n_0_[14]\,
      Q(13) => \Request_SW_reg_n_0_[13]\,
      Q(12) => \Request_SW_reg_n_0_[12]\,
      Q(11) => \Request_SW_reg_n_0_[11]\,
      Q(10) => \Request_SW_reg_n_0_[10]\,
      Q(9) => \Request_SW_reg_n_0_[9]\,
      Q(8) => \Request_SW_reg_n_0_[8]\,
      Q(7) => \Request_SW_reg_n_0_[7]\,
      Q(6) => \Request_SW_reg_n_0_[6]\,
      Q(5) => \Request_SW_reg_n_0_[5]\,
      Q(4) => \Request_SW_reg_n_0_[4]\,
      Q(3) => \Request_SW_reg_n_0_[3]\,
      Q(2) => \Request_SW_reg_n_0_[2]\,
      Q(1) => \Request_SW_reg_n_0_[1]\,
      Q(0) => \Request_SW_reg_n_0_[0]\,
      Request_Ack_d1_reg_0 => request_ack_reg_n_0,
      SS(0) => clear,
      aclk_ctrl => aclk_ctrl,
      clk_kernel_00_locked => clk_kernel_00_locked,
      clk_kernel_01_locked => clk_kernel_01_locked,
      clk_kernel_01_locked_0 => \clock_throttling_aclk_kernel_00/Locked_gated\,
      dest_out(0) => ref_cntr_kernel(32),
      p_6_in(1) => p_6_in(20),
      p_6_in(0) => p_6_in(0),
      power_down => power_down,
      power_down_out_d1 => \clock_throttling_aclk_kernel_00/power_down_out_d1\,
      power_down_out_d1_0 => \clock_throttling_aclk_kernel_00/power_down_out_d1_6\,
      s_axi_ctrl_mgmt_araddr(4) => s_axi_ctrl_mgmt_araddr(15),
      s_axi_ctrl_mgmt_araddr(3 downto 2) => s_axi_ctrl_mgmt_araddr(13 downto 12),
      s_axi_ctrl_mgmt_araddr(1 downto 0) => s_axi_ctrl_mgmt_araddr(3 downto 2),
      \s_axi_ctrl_mgmt_rdata_i[0]_i_3_0\ => p_3_in(0),
      \s_axi_ctrl_mgmt_rdata_i[0]_i_3_1\ => \s_axi_ctrl_mgmt_rdata_i[31]_i_10_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[0]\ => \s_axi_ctrl_mgmt_rdata_i[0]_i_2_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[0]_0\ => \s_axi_ctrl_mgmt_rdata_i[31]_i_7_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[0]_1\ => \s_axi_ctrl_mgmt_rdata_i[0]_i_4_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[0]_2\ => \s_axi_ctrl_mgmt_rdata_i[0]_i_6_n_0\,
      shutdown_clocks => shutdown_clocks,
      shutdown_latch => shutdown_latch,
      src_arst => \clock_throttling_aclk_kernel_00/Locked_gated_0\,
      src_in => request_latch,
      \syncstages_ff_reg[2][64]\ => clock_shutdown_latch_n_4
    );
clock_throttling_avg: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_shell_utils_ucc_v1_0_0_throttling_avg
     port map (
      D(1) => clock_throttling_avg_n_0,
      D(0) => clock_throttling_avg_n_1,
      Q(2) => \Request_SW_reg_n_0_[15]\,
      Q(1) => \Request_SW_reg_n_0_[13]\,
      Q(0) => \Request_SW_reg_n_0_[12]\,
      Rate_Upd_Tog_d1_reg_0 => gapping_demand_toggle_reg_n_0,
      SS(0) => clear,
      aclk_ctrl => aclk_ctrl,
      aresetn_ctrl => aresetn_ctrl,
      dest_out(4) => test_cntr0_kernel(21),
      dest_out(3) => test_cntr1_kernel(24),
      dest_out(2 downto 0) => test_cntr1_kernel(22 downto 20),
      p_6_in(9) => p_6_in(24),
      p_6_in(8) => p_6_in(20),
      p_6_in(7 downto 0) => p_6_in(7 downto 0),
      s_axi_ctrl_mgmt_araddr(5) => s_axi_ctrl_mgmt_araddr(15),
      s_axi_ctrl_mgmt_araddr(4 downto 3) => s_axi_ctrl_mgmt_araddr(13 downto 12),
      s_axi_ctrl_mgmt_araddr(2 downto 0) => s_axi_ctrl_mgmt_araddr(4 downto 2),
      \s_axi_ctrl_mgmt_rdata_i[16]_i_3_0\ => \s_axi_ctrl_mgmt_rdata_i[0]_i_9_n_0\,
      \s_axi_ctrl_mgmt_rdata_i[21]_i_5_0\ => \s_axi_ctrl_mgmt_rdata_i[21]_i_7_n_0\,
      \s_axi_ctrl_mgmt_rdata_i[22]_i_5_0\ => \s_axi_ctrl_mgmt_rdata_i[22]_i_9_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[16]\ => \s_axi_ctrl_mgmt_rdata_i[16]_i_2_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[16]_0\ => \s_axi_ctrl_mgmt_rdata_i[16]_i_4_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[16]_1\ => \s_axi_ctrl_mgmt_rdata_i[16]_i_5_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[17]\ => \s_axi_ctrl_mgmt_rdata_i[17]_i_3_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[17]_0\ => \s_axi_ctrl_mgmt_rdata_i[19]_i_4_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[17]_1\ => \s_axi_ctrl_mgmt_rdata_i[17]_i_4_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[17]_2\ => \s_axi_ctrl_mgmt_rdata_i[17]_i_5_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[17]_3\ => \s_axi_ctrl_mgmt_rdata_i[29]_i_7_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[17]_4\ => \s_axi_ctrl_mgmt_rdata_i[19]_i_7_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[17]_5\ => \s_axi_ctrl_mgmt_rdata_i[3]_i_2_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[18]\ => \s_axi_ctrl_mgmt_rdata_i[18]_i_2_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[18]_0\ => \s_axi_ctrl_mgmt_rdata_i[18]_i_4_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[18]_1\ => \s_axi_ctrl_mgmt_rdata_i[18]_i_5_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[18]_2\ => \s_axi_ctrl_mgmt_rdata_i[18]_i_6_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[19]\ => \s_axi_ctrl_mgmt_rdata_i[19]_i_3_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[19]_0\ => \s_axi_ctrl_mgmt_rdata_i[19]_i_5_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[19]_1\ => \s_axi_ctrl_mgmt_rdata_i[19]_i_6_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[20]\ => \s_axi_ctrl_mgmt_rdata_i[31]_i_8_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[20]_0\ => \s_axi_ctrl_mgmt_rdata_i[20]_i_2_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[20]_1\ => \s_axi_ctrl_mgmt_rdata_i[24]_i_3_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[20]_2\ => \s_axi_ctrl_mgmt_rdata_i[20]_i_4_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[20]_3\ => \s_axi_ctrl_mgmt_rdata_i[7]_i_6_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[21]\ => \s_axi_ctrl_mgmt_rdata_i[22]_i_2_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[21]_0\ => \s_axi_ctrl_mgmt_rdata_i[21]_i_2_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[21]_1\ => \s_axi_ctrl_mgmt_rdata_i[21]_i_3_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[21]_2\ => \s_axi_ctrl_mgmt_rdata_i[21]_i_4_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[22]\ => \s_axi_ctrl_mgmt_rdata_i[22]_i_3_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[22]_0\(8) => ref_cntr_kernel(54),
      \s_axi_ctrl_mgmt_rdata_i_reg[22]_0\(7 downto 6) => test_cntr0_kernel(54 downto 53),
      \s_axi_ctrl_mgmt_rdata_i_reg[22]_0\(5) => test_cntr1_kernel(56),
      \s_axi_ctrl_mgmt_rdata_i_reg[22]_0\(4 downto 2) => test_cntr1_kernel(54 downto 52),
      \s_axi_ctrl_mgmt_rdata_i_reg[22]_0\(1) => test_cntr1_kernel(50),
      \s_axi_ctrl_mgmt_rdata_i_reg[22]_0\(0) => test_cntr1_kernel(48),
      \s_axi_ctrl_mgmt_rdata_i_reg[22]_1\ => \s_axi_ctrl_mgmt_rdata_i[22]_i_4_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[22]_2\ => \s_axi_ctrl_mgmt_rdata_i[22]_i_7_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[22]_3\ => \s_axi_ctrl_mgmt_rdata_i[31]_i_7_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[23]\ => \s_axi_ctrl_mgmt_rdata_i[23]_i_2_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[23]_0\ => \s_axi_ctrl_mgmt_rdata_i[23]_i_3_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[23]_1\ => \s_axi_ctrl_mgmt_rdata_i[23]_i_5_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[23]_2\ => \s_axi_ctrl_mgmt_rdata_i[23]_i_6_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[24]\ => \s_axi_ctrl_mgmt_rdata_i[24]_i_2_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[24]_0\ => \s_axi_ctrl_mgmt_rdata_i[24]_i_5_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[25]\ => \s_axi_ctrl_mgmt_rdata_i[25]_i_2_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[25]_0\ => \s_axi_ctrl_mgmt_rdata_i[25]_i_3_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[25]_1\ => \s_axi_ctrl_mgmt_rdata_i[25]_i_5_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[25]_2\ => \s_axi_ctrl_mgmt_rdata_i[25]_i_6_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[26]\ => \s_axi_ctrl_mgmt_rdata_i[26]_i_2_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[26]_0\ => \s_axi_ctrl_mgmt_rdata_i[26]_i_3_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[26]_1\ => \s_axi_ctrl_mgmt_rdata_i[26]_i_5_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[26]_2\ => \s_axi_ctrl_mgmt_rdata_i[26]_i_6_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[27]\ => \s_axi_ctrl_mgmt_rdata_i[27]_i_2_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[27]_0\ => \s_axi_ctrl_mgmt_rdata_i[27]_i_3_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[27]_1\ => \s_axi_ctrl_mgmt_rdata_i[27]_i_5_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[27]_2\ => \s_axi_ctrl_mgmt_rdata_i[27]_i_6_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[28]\ => \s_axi_ctrl_mgmt_rdata_i[28]_i_2_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[28]_0\ => \s_axi_ctrl_mgmt_rdata_i[28]_i_3_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[28]_1\ => \s_axi_ctrl_mgmt_rdata_i[28]_i_5_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[28]_2\ => \s_axi_ctrl_mgmt_rdata_i[28]_i_6_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[29]\(13 downto 9) => ref_cntr_aclk(29 downto 25),
      \s_axi_ctrl_mgmt_rdata_i_reg[29]\(8 downto 7) => ref_cntr_aclk(23 downto 22),
      \s_axi_ctrl_mgmt_rdata_i_reg[29]\(6) => ref_cntr_aclk(19),
      \s_axi_ctrl_mgmt_rdata_i_reg[29]\(5) => ref_cntr_aclk(17),
      \s_axi_ctrl_mgmt_rdata_i_reg[29]\(4) => test_cntr0_aclk(22),
      \s_axi_ctrl_mgmt_rdata_i_reg[29]\(3) => cdc_freq_cntr_aclk_n_74,
      \s_axi_ctrl_mgmt_rdata_i_reg[29]\(2) => cdc_freq_cntr_aclk_n_77,
      \s_axi_ctrl_mgmt_rdata_i_reg[29]\(1) => cdc_freq_cntr_aclk_n_79,
      \s_axi_ctrl_mgmt_rdata_i_reg[29]\(0) => cdc_freq_cntr_aclk_n_80,
      \s_axi_ctrl_mgmt_rdata_i_reg[29]_0\ => \s_axi_ctrl_mgmt_rdata_i[29]_i_2_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[29]_1\ => \s_axi_ctrl_mgmt_rdata_i[29]_i_3_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[29]_2\ => \s_axi_ctrl_mgmt_rdata_i[29]_i_5_n_0\,
      \s_axi_ctrl_mgmt_rdata_i_reg[29]_3\ => \s_axi_ctrl_mgmt_rdata_i[29]_i_6_n_0\,
      \syncstages_ff_reg[1][81]\ => clock_throttling_avg_n_3,
      \syncstages_ff_reg[1][83]\ => clock_throttling_avg_n_5,
      \syncstages_ff_reg[2][16]\ => clock_throttling_avg_n_2,
      \syncstages_ff_reg[2][18]\ => clock_throttling_avg_n_4,
      \syncstages_ff_reg[2][20]\ => clock_throttling_avg_n_6,
      \syncstages_ff_reg[2][23]\ => clock_throttling_avg_n_7,
      \syncstages_ff_reg[2][24]\ => clock_throttling_avg_n_8,
      \syncstages_ff_reg[2][25]\ => clock_throttling_avg_n_9,
      \syncstages_ff_reg[2][26]\ => clock_throttling_avg_n_10,
      \syncstages_ff_reg[2][27]\ => clock_throttling_avg_n_11,
      \syncstages_ff_reg[2][28]\ => clock_throttling_avg_n_12,
      \syncstages_ff_reg[2][29]\ => clock_throttling_avg_n_13
    );
\cmd_stall[0]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"70"
    )
        port map (
      I0 => cmd_stall(0),
      I1 => \Request_SW[15]_i_4_n_0\,
      I2 => aresetn_ctrl,
      O => \cmd_stall[0]_i_1_n_0\
    );
\cmd_stall[1]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"C44C"
    )
        port map (
      I0 => \Request_SW[15]_i_4_n_0\,
      I1 => aresetn_ctrl,
      I2 => cmd_stall(0),
      I3 => cmd_stall(1),
      O => \cmd_stall[1]_i_1_n_0\
    );
\cmd_stall[2]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FD005700"
    )
        port map (
      I0 => \Request_SW[15]_i_4_n_0\,
      I1 => cmd_stall(0),
      I2 => cmd_stall(1),
      I3 => aresetn_ctrl,
      I4 => cmd_stall(2),
      O => \cmd_stall[2]_i_1_n_0\
    );
\cmd_stall[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFD000055570000"
    )
        port map (
      I0 => \Request_SW[15]_i_4_n_0\,
      I1 => cmd_stall(1),
      I2 => cmd_stall(0),
      I3 => cmd_stall(2),
      I4 => aresetn_ctrl,
      I5 => cmd_stall(3),
      O => \cmd_stall[3]_i_1_n_0\
    );
\cmd_stall[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"777F777777777777"
    )
        port map (
      I0 => s_axi_ctrl_mgmt_awready_i0,
      I1 => aresetn_ctrl,
      I2 => \^s_axi_ctrl_mgmt_awready\,
      I3 => \^s_axi_ctrl_mgmt_bvalid\,
      I4 => s_axi_ctrl_mgmt_awvalid,
      I5 => s_axi_ctrl_mgmt_wvalid,
      O => \cmd_stall[4]_i_1_n_0\
    );
\cmd_stall[4]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"D700"
    )
        port map (
      I0 => \Request_SW[15]_i_4_n_0\,
      I1 => \cmd_stall[4]_i_3_n_0\,
      I2 => cmd_stall(4),
      I3 => aresetn_ctrl,
      O => \cmd_stall[4]_i_2_n_0\
    );
\cmd_stall[4]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => cmd_stall(2),
      I1 => cmd_stall(0),
      I2 => cmd_stall(1),
      I3 => cmd_stall(3),
      O => \cmd_stall[4]_i_3_n_0\
    );
\cmd_stall_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \cmd_stall[4]_i_1_n_0\,
      D => \cmd_stall[0]_i_1_n_0\,
      Q => cmd_stall(0),
      R => '0'
    );
\cmd_stall_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \cmd_stall[4]_i_1_n_0\,
      D => \cmd_stall[1]_i_1_n_0\,
      Q => cmd_stall(1),
      R => '0'
    );
\cmd_stall_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \cmd_stall[4]_i_1_n_0\,
      D => \cmd_stall[2]_i_1_n_0\,
      Q => cmd_stall(2),
      R => '0'
    );
\cmd_stall_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \cmd_stall[4]_i_1_n_0\,
      D => \cmd_stall[3]_i_1_n_0\,
      Q => cmd_stall(3),
      R => '0'
    );
\cmd_stall_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \cmd_stall[4]_i_1_n_0\,
      D => \cmd_stall[4]_i_2_n_0\,
      Q => cmd_stall(4),
      R => '0'
    );
\done_ref_aclk_d[0]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => done_ref_aclk_d_reg(0),
      O => \p_0_in__0\(0)
    );
\done_ref_aclk_d[1]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => done_ref_aclk_d_reg(0),
      I1 => done_ref_aclk_d_reg(1),
      O => \p_0_in__0\(1)
    );
\done_ref_aclk_d[2]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"78"
    )
        port map (
      I0 => done_ref_aclk_d_reg(1),
      I1 => done_ref_aclk_d_reg(0),
      I2 => done_ref_aclk_d_reg(2),
      O => \p_0_in__0\(2)
    );
\done_ref_aclk_d[3]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F80"
    )
        port map (
      I0 => done_ref_aclk_d_reg(2),
      I1 => done_ref_aclk_d_reg(0),
      I2 => done_ref_aclk_d_reg(1),
      I3 => done_ref_aclk_d_reg(3),
      O => \p_0_in__0\(3)
    );
\done_ref_aclk_d[4]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => aresetn_ctrl,
      I1 => done_ref_aclk,
      O => \done_ref_aclk_d[4]_i_1_n_0\
    );
\done_ref_aclk_d[4]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"7FFFFFFF"
    )
        port map (
      I0 => done_ref_aclk_d_reg(3),
      I1 => done_ref_aclk_d_reg(1),
      I2 => done_ref_aclk_d_reg(0),
      I3 => done_ref_aclk_d_reg(2),
      I4 => done_ref_aclk_d_reg(4),
      O => \done_ref_aclk_d[4]_i_2_n_0\
    );
\done_ref_aclk_d[4]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"7FFF8000"
    )
        port map (
      I0 => done_ref_aclk_d_reg(3),
      I1 => done_ref_aclk_d_reg(1),
      I2 => done_ref_aclk_d_reg(0),
      I3 => done_ref_aclk_d_reg(2),
      I4 => done_ref_aclk_d_reg(4),
      O => \p_0_in__0\(4)
    );
\done_ref_aclk_d_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => aclk_ctrl,
      CE => \done_ref_aclk_d[4]_i_2_n_0\,
      D => \p_0_in__0\(0),
      Q => done_ref_aclk_d_reg(0),
      R => \done_ref_aclk_d[4]_i_1_n_0\
    );
\done_ref_aclk_d_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => aclk_ctrl,
      CE => \done_ref_aclk_d[4]_i_2_n_0\,
      D => \p_0_in__0\(1),
      Q => done_ref_aclk_d_reg(1),
      R => \done_ref_aclk_d[4]_i_1_n_0\
    );
\done_ref_aclk_d_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => aclk_ctrl,
      CE => \done_ref_aclk_d[4]_i_2_n_0\,
      D => \p_0_in__0\(2),
      Q => done_ref_aclk_d_reg(2),
      R => \done_ref_aclk_d[4]_i_1_n_0\
    );
\done_ref_aclk_d_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => aclk_ctrl,
      CE => \done_ref_aclk_d[4]_i_2_n_0\,
      D => \p_0_in__0\(3),
      Q => done_ref_aclk_d_reg(3),
      R => \done_ref_aclk_d[4]_i_1_n_0\
    );
\done_ref_aclk_d_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => aclk_ctrl,
      CE => \done_ref_aclk_d[4]_i_2_n_0\,
      D => \p_0_in__0\(4),
      Q => done_ref_aclk_d_reg(4),
      R => \done_ref_aclk_d[4]_i_1_n_0\
    );
done_test_aclk_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"C4"
    )
        port map (
      I0 => \done_ref_aclk_d[4]_i_2_n_0\,
      I1 => done_ref_aclk,
      I2 => done_test_aclk_reg_n_0,
      O => done_test_aclk_i_1_n_0
    );
done_test_aclk_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => done_test_aclk_i_1_n_0,
      Q => done_test_aclk_reg_n_0,
      R => clear
    );
ext_tog_ctrl_enable_sw_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => request_ack,
      D => s_axi_ctrl_mgmt_wdata(24),
      Q => p_6_in(24),
      R => clear
    );
frequency_counter_aclk: entity work.\decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_shell_utils_ucc_v1_0_0_frequency_counter__parameterized0\
     port map (
      aclk_ctrl => aclk_ctrl,
      aclk_freerun => aclk_freerun,
      aclk_pcie => aclk_pcie,
      dest_arst => user_rst_aclk_fr,
      \rst_cnt_reg[0]_0\ => aresetn_aclk_freerun,
      src_in(64) => done_ref_aclk_fr,
      src_in(63 downto 48) => ref_clk_cntr_i_reg(15 downto 0),
      src_in(47) => frequency_counter_aclk_n_17,
      src_in(46 downto 24) => \test_clk_cntr_synced_i[0]_2\(22 downto 0),
      src_in(23) => frequency_counter_aclk_n_41,
      src_in(22 downto 0) => \test_clk_cntr_synced_i[1]_1\(22 downto 0)
    );
gapping_demand_pending_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00AA0CCC"
    )
        port map (
      I0 => s_axi_ctrl_mgmt_awready_i0,
      I1 => gapping_demand_pending,
      I2 => s_axi_ctrl_mgmt_bready,
      I3 => \^s_axi_ctrl_mgmt_bvalid\,
      I4 => request_ack,
      O => gapping_demand_pending_i_1_n_0
    );
gapping_demand_pending_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => gapping_demand_pending_i_1_n_0,
      Q => gapping_demand_pending,
      R => clear
    );
\gapping_demand_reg[0]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => aclk_ctrl,
      CE => request_ack,
      D => s_axi_ctrl_mgmt_wdata(0),
      Q => p_6_in(0),
      S => clear
    );
\gapping_demand_reg[1]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => aclk_ctrl,
      CE => request_ack,
      D => s_axi_ctrl_mgmt_wdata(1),
      Q => p_6_in(1),
      S => clear
    );
\gapping_demand_reg[2]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => aclk_ctrl,
      CE => request_ack,
      D => s_axi_ctrl_mgmt_wdata(2),
      Q => p_6_in(2),
      S => clear
    );
\gapping_demand_reg[3]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => aclk_ctrl,
      CE => request_ack,
      D => s_axi_ctrl_mgmt_wdata(3),
      Q => p_6_in(3),
      S => clear
    );
\gapping_demand_reg[4]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => aclk_ctrl,
      CE => request_ack,
      D => s_axi_ctrl_mgmt_wdata(4),
      Q => p_6_in(4),
      S => clear
    );
\gapping_demand_reg[5]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => aclk_ctrl,
      CE => request_ack,
      D => s_axi_ctrl_mgmt_wdata(5),
      Q => p_6_in(5),
      S => clear
    );
\gapping_demand_reg[6]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => aclk_ctrl,
      CE => request_ack,
      D => s_axi_ctrl_mgmt_wdata(6),
      Q => p_6_in(6),
      S => clear
    );
\gapping_demand_reg[7]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => aclk_ctrl,
      CE => request_ack,
      D => s_axi_ctrl_mgmt_wdata(7),
      Q => p_6_in(7),
      S => clear
    );
gapping_demand_toggle_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F80"
    )
        port map (
      I0 => gapping_demand_pending,
      I1 => s_axi_ctrl_mgmt_bready,
      I2 => \^s_axi_ctrl_mgmt_bvalid\,
      I3 => gapping_demand_toggle_reg_n_0,
      O => gapping_demand_toggle_i_1_n_0
    );
gapping_demand_toggle_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => gapping_demand_toggle_i_1_n_0,
      Q => gapping_demand_toggle_reg_n_0,
      R => clear
    );
\genblk1[0].aclk_kernel_inst\: entity work.\decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_shell_utils_ucc_v1_0_0_aclk_kernel__xdcDup__1\
     port map (
      CLK => aclk_ext_tog_kernel_00,
      aclk_kernel_00 => \^aclk_kernel_00\,
      aclk_kernel_cont_00 => \^aclk_kernel_cont_00\,
      aresetn_ctrl => aresetn_ctrl,
      \arststages_ff_reg[0]\ => p_4_in(0),
      clk_in_kernel_00 => clk_in_kernel_00,
      ext_tog_ctrl_kernel_00_enable => ext_tog_ctrl_kernel_00_enable,
      ext_tog_ctrl_kernel_00_in => ext_tog_ctrl_kernel_00_in,
      ext_tog_ctrl_kernel_00_out => ext_tog_ctrl_kernel_00_out,
      p_6_in(8) => p_6_in(24),
      p_6_in(7 downto 0) => p_6_in(7 downto 0),
      power_down_out_d1 => \clock_throttling_aclk_kernel_00/power_down_out_d1\,
      rst_async_kernel_00 => rst_async_kernel_00,
      shutdown_latch => shutdown_latch,
      src_arst => \clock_throttling_aclk_kernel_00/Locked_gated_0\,
      src_in => request_latch,
      \syncstages_ff_reg[0]\ => gapping_demand_toggle_reg_n_0
    );
\genblk1[0].cdc_freq_cntr_kernel\: entity work.\decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized2__2\
     port map (
      dest_clk => aclk_ctrl,
      dest_out(96) => done_ref_kernel_0,
      dest_out(95 downto 64) => ref_cntr_kernel(31 downto 0),
      dest_out(63 downto 32) => test_cntr0_kernel(31 downto 0),
      dest_out(31 downto 0) => test_cntr1_kernel(31 downto 0),
      src_clk => '0',
      src_in(96) => done_ref_i,
      src_in(95 downto 80) => B"0000000000000000",
      src_in(79 downto 64) => ref_clk_cntr_i_reg_5(15 downto 0),
      src_in(63) => test_clk_cntr_synced_01,
      src_in(62 downto 55) => B"00000000",
      src_in(54 downto 32) => \test_clk_cntr_synced_i[0]_4\(22 downto 0),
      src_in(31) => test_clk_cntr_synced_11,
      src_in(30 downto 23) => B"00000000",
      src_in(22 downto 0) => \test_clk_cntr_synced_i[1]_3\(22 downto 0)
    );
\genblk1[0].cdc_user_rst_kernel\: entity work.\decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__4\
     port map (
      dest_arst => user_rst_kernel_fr_0,
      dest_clk => aclk_freerun,
      src_arst => \user_rst_kernel_reg_n_0_[0]\
    );
\genblk1[0].done_ref_kernel_d[0]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \genblk1[0].done_ref_kernel_d_reg\(0),
      O => p_2_in(0)
    );
\genblk1[0].done_ref_kernel_d[1]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => \genblk1[0].done_ref_kernel_d_reg\(0),
      I1 => \genblk1[0].done_ref_kernel_d_reg\(1),
      O => p_2_in(1)
    );
\genblk1[0].done_ref_kernel_d[2]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"78"
    )
        port map (
      I0 => \genblk1[0].done_ref_kernel_d_reg\(1),
      I1 => \genblk1[0].done_ref_kernel_d_reg\(0),
      I2 => \genblk1[0].done_ref_kernel_d_reg\(2),
      O => p_2_in(2)
    );
\genblk1[0].done_ref_kernel_d[3]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F80"
    )
        port map (
      I0 => \genblk1[0].done_ref_kernel_d_reg\(2),
      I1 => \genblk1[0].done_ref_kernel_d_reg\(0),
      I2 => \genblk1[0].done_ref_kernel_d_reg\(1),
      I3 => \genblk1[0].done_ref_kernel_d_reg\(3),
      O => p_2_in(3)
    );
\genblk1[0].done_ref_kernel_d[4]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => aresetn_ctrl,
      I1 => done_ref_kernel_0,
      O => \genblk1[0].done_ref_kernel_d[4]_i_1_n_0\
    );
\genblk1[0].done_ref_kernel_d[4]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"7FFFFFFF"
    )
        port map (
      I0 => \genblk1[0].done_ref_kernel_d_reg\(3),
      I1 => \genblk1[0].done_ref_kernel_d_reg\(1),
      I2 => \genblk1[0].done_ref_kernel_d_reg\(0),
      I3 => \genblk1[0].done_ref_kernel_d_reg\(2),
      I4 => \genblk1[0].done_ref_kernel_d_reg\(4),
      O => p_1_in
    );
\genblk1[0].done_ref_kernel_d[4]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"7FFF8000"
    )
        port map (
      I0 => \genblk1[0].done_ref_kernel_d_reg\(3),
      I1 => \genblk1[0].done_ref_kernel_d_reg\(1),
      I2 => \genblk1[0].done_ref_kernel_d_reg\(0),
      I3 => \genblk1[0].done_ref_kernel_d_reg\(2),
      I4 => \genblk1[0].done_ref_kernel_d_reg\(4),
      O => p_2_in(4)
    );
\genblk1[0].done_ref_kernel_d_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => aclk_ctrl,
      CE => p_1_in,
      D => p_2_in(0),
      Q => \genblk1[0].done_ref_kernel_d_reg\(0),
      R => \genblk1[0].done_ref_kernel_d[4]_i_1_n_0\
    );
\genblk1[0].done_ref_kernel_d_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => aclk_ctrl,
      CE => p_1_in,
      D => p_2_in(1),
      Q => \genblk1[0].done_ref_kernel_d_reg\(1),
      R => \genblk1[0].done_ref_kernel_d[4]_i_1_n_0\
    );
\genblk1[0].done_ref_kernel_d_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => aclk_ctrl,
      CE => p_1_in,
      D => p_2_in(2),
      Q => \genblk1[0].done_ref_kernel_d_reg\(2),
      R => \genblk1[0].done_ref_kernel_d[4]_i_1_n_0\
    );
\genblk1[0].done_ref_kernel_d_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => aclk_ctrl,
      CE => p_1_in,
      D => p_2_in(3),
      Q => \genblk1[0].done_ref_kernel_d_reg\(3),
      R => \genblk1[0].done_ref_kernel_d[4]_i_1_n_0\
    );
\genblk1[0].done_ref_kernel_d_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => aclk_ctrl,
      CE => p_1_in,
      D => p_2_in(4),
      Q => \genblk1[0].done_ref_kernel_d_reg\(4),
      R => \genblk1[0].done_ref_kernel_d[4]_i_1_n_0\
    );
\genblk1[0].done_test_kernel[0]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"C4"
    )
        port map (
      I0 => p_1_in,
      I1 => done_ref_kernel_0,
      I2 => \genblk1[0].done_test_kernel_reg\,
      O => \genblk1[0].done_test_kernel[0]_i_1_n_0\
    );
\genblk1[0].done_test_kernel_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => aclk_ctrl,
      CE => '1',
      D => \genblk1[0].done_test_kernel[0]_i_1_n_0\,
      Q => \genblk1[0].done_test_kernel_reg\,
      R => clear
    );
\genblk1[0].frequency_counter_kernel_inst\: entity work.\decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_shell_utils_ucc_v1_0_0_frequency_counter__xdcDup__1\
     port map (
      aclk_freerun => aclk_freerun,
      aclk_kernel_00 => \^aclk_kernel_00\,
      aclk_kernel_cont_00 => \^aclk_kernel_cont_00\,
      dest_arst => user_rst_kernel_fr_0,
      \rst_cnt_reg[0]_0\ => aresetn_aclk_freerun,
      src_in(64) => done_ref_i,
      src_in(63 downto 48) => ref_clk_cntr_i_reg_5(15 downto 0),
      src_in(47) => test_clk_cntr_synced_01,
      src_in(46 downto 24) => \test_clk_cntr_synced_i[0]_4\(22 downto 0),
      src_in(23) => test_clk_cntr_synced_11,
      src_in(22 downto 0) => \test_clk_cntr_synced_i[1]_3\(22 downto 0)
    );
\genblk1[1].aclk_kernel_inst\: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_shell_utils_ucc_v1_0_0_aclk_kernel
     port map (
      CLK => aclk_ext_tog_kernel_01,
      aclk_kernel_01 => \^aclk_kernel_01\,
      aclk_kernel_cont_01 => \^aclk_kernel_cont_01\,
      aresetn_ctrl => aresetn_ctrl,
      \arststages_ff_reg[0]\ => \clock_throttling_aclk_kernel_00/Locked_gated\,
      \arststages_ff_reg[0]_0\ => p_4_in(0),
      clk_in_kernel_01 => clk_in_kernel_01,
      ext_tog_ctrl_kernel_01_enable => ext_tog_ctrl_kernel_01_enable,
      ext_tog_ctrl_kernel_01_in => ext_tog_ctrl_kernel_01_in,
      ext_tog_ctrl_kernel_01_out => ext_tog_ctrl_kernel_01_out,
      p_6_in(8) => p_6_in(24),
      p_6_in(7 downto 0) => p_6_in(7 downto 0),
      power_down_out_d1 => \clock_throttling_aclk_kernel_00/power_down_out_d1_6\,
      rst_async_kernel_01 => rst_async_kernel_01,
      shutdown_latch => shutdown_latch,
      src_in => request_latch,
      \syncstages_ff_reg[0]\ => gapping_demand_toggle_reg_n_0
    );
\genblk1[1].cdc_freq_cntr_kernel\: entity work.\decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized2\
     port map (
      dest_clk => aclk_ctrl,
      dest_out(96) => done_ref_kernel_1,
      dest_out(95 downto 64) => ref_cntr_kernel(63 downto 32),
      dest_out(63 downto 32) => test_cntr0_kernel(63 downto 32),
      dest_out(31 downto 0) => test_cntr1_kernel(63 downto 32),
      src_clk => '0',
      src_in(96) => done_ref_kernel_fr_1,
      src_in(95 downto 80) => B"0000000000000000",
      src_in(79 downto 64) => ref_clk_cntr_i_reg_9(15 downto 0),
      src_in(63) => \genblk1[1].frequency_counter_kernel_inst_n_17\,
      src_in(62 downto 55) => B"00000000",
      src_in(54 downto 32) => \test_clk_cntr_synced_i[0]_8\(22 downto 0),
      src_in(31) => \genblk1[1].frequency_counter_kernel_inst_n_41\,
      src_in(30 downto 23) => B"00000000",
      src_in(22 downto 0) => \test_clk_cntr_synced_i[1]_7\(22 downto 0)
    );
\genblk1[1].cdc_user_rst_kernel\: entity work.\decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized1__7\
     port map (
      dest_arst => user_rst_kernel_fr_1,
      dest_clk => aclk_freerun,
      src_arst => \user_rst_kernel_reg_n_0_[1]\
    );
\genblk1[1].done_ref_kernel_d[5]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \genblk1[1].done_ref_kernel_d_reg\(5),
      O => \p_2_in__0\(0)
    );
\genblk1[1].done_ref_kernel_d[6]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => \genblk1[1].done_ref_kernel_d_reg\(5),
      I1 => \genblk1[1].done_ref_kernel_d_reg\(6),
      O => \p_2_in__0\(1)
    );
\genblk1[1].done_ref_kernel_d[7]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"78"
    )
        port map (
      I0 => \genblk1[1].done_ref_kernel_d_reg\(6),
      I1 => \genblk1[1].done_ref_kernel_d_reg\(5),
      I2 => \genblk1[1].done_ref_kernel_d_reg\(7),
      O => \p_2_in__0\(2)
    );
\genblk1[1].done_ref_kernel_d[8]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F80"
    )
        port map (
      I0 => \genblk1[1].done_ref_kernel_d_reg\(7),
      I1 => \genblk1[1].done_ref_kernel_d_reg\(5),
      I2 => \genblk1[1].done_ref_kernel_d_reg\(6),
      I3 => \genblk1[1].done_ref_kernel_d_reg\(8),
      O => \p_2_in__0\(3)
    );
\genblk1[1].done_ref_kernel_d[9]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => aresetn_ctrl,
      I1 => done_ref_kernel_1,
      O => \genblk1[1].done_ref_kernel_d[9]_i_1_n_0\
    );
\genblk1[1].done_ref_kernel_d[9]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"7FFFFFFF"
    )
        port map (
      I0 => \genblk1[1].done_ref_kernel_d_reg\(8),
      I1 => \genblk1[1].done_ref_kernel_d_reg\(6),
      I2 => \genblk1[1].done_ref_kernel_d_reg\(5),
      I3 => \genblk1[1].done_ref_kernel_d_reg\(7),
      I4 => \genblk1[1].done_ref_kernel_d_reg\(9),
      O => \genblk1[1].done_ref_kernel_d[9]_i_2_n_0\
    );
\genblk1[1].done_ref_kernel_d[9]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"7FFF8000"
    )
        port map (
      I0 => \genblk1[1].done_ref_kernel_d_reg\(8),
      I1 => \genblk1[1].done_ref_kernel_d_reg\(6),
      I2 => \genblk1[1].done_ref_kernel_d_reg\(5),
      I3 => \genblk1[1].done_ref_kernel_d_reg\(7),
      I4 => \genblk1[1].done_ref_kernel_d_reg\(9),
      O => \p_2_in__0\(4)
    );
\genblk1[1].done_ref_kernel_d_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => aclk_ctrl,
      CE => \genblk1[1].done_ref_kernel_d[9]_i_2_n_0\,
      D => \p_2_in__0\(0),
      Q => \genblk1[1].done_ref_kernel_d_reg\(5),
      R => \genblk1[1].done_ref_kernel_d[9]_i_1_n_0\
    );
\genblk1[1].done_ref_kernel_d_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => aclk_ctrl,
      CE => \genblk1[1].done_ref_kernel_d[9]_i_2_n_0\,
      D => \p_2_in__0\(1),
      Q => \genblk1[1].done_ref_kernel_d_reg\(6),
      R => \genblk1[1].done_ref_kernel_d[9]_i_1_n_0\
    );
\genblk1[1].done_ref_kernel_d_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => aclk_ctrl,
      CE => \genblk1[1].done_ref_kernel_d[9]_i_2_n_0\,
      D => \p_2_in__0\(2),
      Q => \genblk1[1].done_ref_kernel_d_reg\(7),
      R => \genblk1[1].done_ref_kernel_d[9]_i_1_n_0\
    );
\genblk1[1].done_ref_kernel_d_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => aclk_ctrl,
      CE => \genblk1[1].done_ref_kernel_d[9]_i_2_n_0\,
      D => \p_2_in__0\(3),
      Q => \genblk1[1].done_ref_kernel_d_reg\(8),
      R => \genblk1[1].done_ref_kernel_d[9]_i_1_n_0\
    );
\genblk1[1].done_ref_kernel_d_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => aclk_ctrl,
      CE => \genblk1[1].done_ref_kernel_d[9]_i_2_n_0\,
      D => \p_2_in__0\(4),
      Q => \genblk1[1].done_ref_kernel_d_reg\(9),
      R => \genblk1[1].done_ref_kernel_d[9]_i_1_n_0\
    );
\genblk1[1].done_test_kernel[1]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"C4"
    )
        port map (
      I0 => \genblk1[1].done_ref_kernel_d[9]_i_2_n_0\,
      I1 => done_ref_kernel_1,
      I2 => \genblk1[1].done_test_kernel_reg\,
      O => \genblk1[1].done_test_kernel[1]_i_1_n_0\
    );
\genblk1[1].done_test_kernel_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => aclk_ctrl,
      CE => '1',
      D => \genblk1[1].done_test_kernel[1]_i_1_n_0\,
      Q => \genblk1[1].done_test_kernel_reg\,
      R => clear
    );
\genblk1[1].frequency_counter_kernel_inst\: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_shell_utils_ucc_v1_0_0_frequency_counter
     port map (
      aclk_freerun => aclk_freerun,
      aclk_kernel_01 => \^aclk_kernel_01\,
      aclk_kernel_cont_01 => \^aclk_kernel_cont_01\,
      dest_arst => user_rst_kernel_fr_1,
      \rst_cnt_reg[0]_0\ => aresetn_aclk_freerun,
      src_in(64) => done_ref_kernel_fr_1,
      src_in(63 downto 48) => ref_clk_cntr_i_reg_9(15 downto 0),
      src_in(47) => \genblk1[1].frequency_counter_kernel_inst_n_17\,
      src_in(46 downto 24) => \test_clk_cntr_synced_i[0]_8\(22 downto 0),
      src_in(23) => \genblk1[1].frequency_counter_kernel_inst_n_41\,
      src_in(22 downto 0) => \test_clk_cntr_synced_i[1]_7\(22 downto 0)
    );
psreset_aclk_freerun: entity work.\decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__parameterized2\
     port map (
      dest_arst => aresetn_aclk_freerun,
      dest_clk => aclk_freerun,
      src_arst => aresetn_ctrl
    );
request_ack_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0100"
    )
        port map (
      I0 => s_axi_ctrl_mgmt_awaddr(12),
      I1 => request_ack_i_2_n_0,
      I2 => \Request_SW[15]_i_4_n_0\,
      I3 => \Request_SW[15]_i_5_n_0\,
      O => request_ack
    );
request_ack_i_2: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFFFE"
    )
        port map (
      I0 => s_axi_ctrl_mgmt_awaddr(8),
      I1 => s_axi_ctrl_mgmt_awaddr(9),
      I2 => s_axi_ctrl_mgmt_awaddr(2),
      I3 => \Request_SW[15]_i_2_n_0\,
      I4 => s_axi_ctrl_mgmt_awaddr(3),
      O => request_ack_i_2_n_0
    );
request_ack_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => request_ack,
      D => s_axi_ctrl_mgmt_wdata(16),
      Q => request_ack_reg_n_0,
      R => clear
    );
s_axi_ctrl_mgmt_arready_i_i_2: unisim.vcomponents.LUT4
    generic map(
      INIT => X"DD02"
    )
        port map (
      I0 => s_axi_ctrl_mgmt_arvalid,
      I1 => \^s_axi_ctrl_mgmt_rvalid\,
      I2 => s_axi_ctrl_mgmt_arready_i_i_3_n_0,
      I3 => \^s_axi_ctrl_mgmt_arready\,
      O => s_axi_ctrl_mgmt_arready_i_i_2_n_0
    );
s_axi_ctrl_mgmt_arready_i_i_3: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFFFE"
    )
        port map (
      I0 => p_0_in0,
      I1 => \user_rst_d_reg_n_0_[1]\,
      I2 => \user_rst_d_reg_n_0_[0]\,
      I3 => \user_rst_d_reg_n_0_[2]\,
      I4 => \user_rst_d_reg_n_0_[4]\,
      O => s_axi_ctrl_mgmt_arready_i_i_3_n_0
    );
s_axi_ctrl_mgmt_arready_i_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => s_axi_ctrl_mgmt_arready_i_i_2_n_0,
      Q => \^s_axi_ctrl_mgmt_arready\,
      R => clear
    );
s_axi_ctrl_mgmt_awready_i_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"9AAA8AAA"
    )
        port map (
      I0 => \^s_axi_ctrl_mgmt_awready\,
      I1 => \^s_axi_ctrl_mgmt_bvalid\,
      I2 => s_axi_ctrl_mgmt_awvalid,
      I3 => s_axi_ctrl_mgmt_wvalid,
      I4 => s_axi_ctrl_mgmt_awready_i0,
      O => s_axi_ctrl_mgmt_awready_i_i_1_n_0
    );
s_axi_ctrl_mgmt_awready_i_i_2: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000001"
    )
        port map (
      I0 => cmd_stall(3),
      I1 => cmd_stall(1),
      I2 => cmd_stall(0),
      I3 => cmd_stall(2),
      I4 => cmd_stall(4),
      O => s_axi_ctrl_mgmt_awready_i0
    );
s_axi_ctrl_mgmt_awready_i_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => s_axi_ctrl_mgmt_awready_i_i_1_n_0,
      Q => \^s_axi_ctrl_mgmt_awready\,
      R => clear
    );
s_axi_ctrl_mgmt_bvalid_i_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"74444444"
    )
        port map (
      I0 => s_axi_ctrl_mgmt_bready,
      I1 => \^s_axi_ctrl_mgmt_bvalid\,
      I2 => s_axi_ctrl_mgmt_awvalid,
      I3 => s_axi_ctrl_mgmt_wvalid,
      I4 => \^s_axi_ctrl_mgmt_awready\,
      O => s_axi_ctrl_mgmt_bvalid_i_i_1_n_0
    );
s_axi_ctrl_mgmt_bvalid_i_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => s_axi_ctrl_mgmt_bvalid_i_i_1_n_0,
      Q => \^s_axi_ctrl_mgmt_bvalid\,
      R => clear
    );
\s_axi_ctrl_mgmt_rdata_i[0]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => p_4_in(0),
      I1 => \s_axi_ctrl_mgmt_rdata_i[19]_i_7_n_0\,
      I2 => \s_axi_ctrl_mgmt_rdata_i[0]_i_5_n_0\,
      I3 => \s_axi_ctrl_mgmt_rdata_i[24]_i_3_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[0]_i_2_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[0]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFF888F888F888"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i[19]_i_4_n_0\,
      I1 => ref_cntr_aclk(0),
      I2 => \s_axi_ctrl_mgmt_rdata_i[31]_i_11_n_0\,
      I3 => ref_cntr_kernel(0),
      I4 => \s_axi_ctrl_mgmt_rdata_i[0]_i_8_n_0\,
      I5 => \s_axi_ctrl_mgmt_rdata_i[0]_i_9_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[0]_i_4_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[0]_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFF222F222F222"
    )
        port map (
      I0 => test_cntr0_aclk(0),
      I1 => s_axi_ctrl_mgmt_araddr(15),
      I2 => \s_axi_ctrl_mgmt_rdata_i[24]_i_6_n_0\,
      I3 => test_cntr0_kernel(0),
      I4 => test_cntr0_kernel(32),
      I5 => \s_axi_ctrl_mgmt_rdata_i[24]_i_7_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[0]_i_5_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[0]_i_6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"1F1F1F0F0F0F1F0F"
    )
        port map (
      I0 => s_axi_ctrl_mgmt_araddr(14),
      I1 => s_axi_ctrl_mgmt_araddr(13),
      I2 => s_axi_ctrl_mgmt_araddr(15),
      I3 => \user_rst_kernel_reg_n_0_[0]\,
      I4 => s_axi_ctrl_mgmt_araddr(12),
      I5 => \user_rst_kernel_reg_n_0_[1]\,
      O => \s_axi_ctrl_mgmt_rdata_i[0]_i_6_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[0]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFF222F222F222"
    )
        port map (
      I0 => cdc_freq_cntr_aclk_n_96,
      I1 => s_axi_ctrl_mgmt_araddr(15),
      I2 => \s_axi_ctrl_mgmt_rdata_i[24]_i_6_n_0\,
      I3 => test_cntr1_kernel(0),
      I4 => test_cntr1_kernel(32),
      I5 => \s_axi_ctrl_mgmt_rdata_i[24]_i_7_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[0]_i_8_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[0]_i_9\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => s_axi_ctrl_mgmt_araddr(2),
      I1 => s_axi_ctrl_mgmt_araddr(4),
      O => \s_axi_ctrl_mgmt_rdata_i[0]_i_9_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[10]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFFFE"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i[10]_i_2_n_0\,
      I1 => \s_axi_ctrl_mgmt_rdata_i[10]_i_3_n_0\,
      I2 => \s_axi_ctrl_mgmt_rdata_i[10]_i_4_n_0\,
      I3 => \s_axi_ctrl_mgmt_rdata_i[10]_i_5_n_0\,
      I4 => \s_axi_ctrl_mgmt_rdata_i[10]_i_6_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[10]_i_1_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[10]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => test_cntr1_kernel(42),
      I1 => \s_axi_ctrl_mgmt_rdata_i[22]_i_3_n_0\,
      I2 => test_cntr1_kernel(10),
      I3 => \s_axi_ctrl_mgmt_rdata_i[31]_i_8_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[10]_i_2_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[10]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0A0C0000"
    )
        port map (
      I0 => cdc_freq_cntr_aclk_n_86,
      I1 => test_cntr0_aclk(10),
      I2 => s_axi_ctrl_mgmt_araddr(15),
      I3 => s_axi_ctrl_mgmt_araddr(2),
      I4 => s_axi_ctrl_mgmt_araddr(4),
      O => \s_axi_ctrl_mgmt_rdata_i[10]_i_3_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[10]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF002000200020"
    )
        port map (
      I0 => ref_cntr_aclk(10),
      I1 => s_axi_ctrl_mgmt_araddr(15),
      I2 => s_axi_ctrl_mgmt_araddr(2),
      I3 => s_axi_ctrl_mgmt_araddr(4),
      I4 => \Request_SW_reg_n_0_[6]\,
      I5 => \s_axi_ctrl_mgmt_rdata_i[15]_i_7_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[10]_i_4_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[10]_i_5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => ref_cntr_kernel(42),
      I1 => \s_axi_ctrl_mgmt_rdata_i[31]_i_7_n_0\,
      I2 => ref_cntr_kernel(10),
      I3 => \s_axi_ctrl_mgmt_rdata_i[31]_i_11_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[10]_i_5_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[10]_i_6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F888F888F8880000"
    )
        port map (
      I0 => test_cntr0_kernel(42),
      I1 => \s_axi_ctrl_mgmt_rdata_i[22]_i_4_n_0\,
      I2 => test_cntr0_kernel(10),
      I3 => \s_axi_ctrl_mgmt_rdata_i[21]_i_4_n_0\,
      I4 => s_axi_ctrl_mgmt_araddr(4),
      I5 => s_axi_ctrl_mgmt_araddr(3),
      O => \s_axi_ctrl_mgmt_rdata_i[10]_i_6_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[11]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFFFE"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i[11]_i_2_n_0\,
      I1 => \s_axi_ctrl_mgmt_rdata_i[11]_i_3_n_0\,
      I2 => \s_axi_ctrl_mgmt_rdata_i[11]_i_4_n_0\,
      I3 => \s_axi_ctrl_mgmt_rdata_i[11]_i_5_n_0\,
      I4 => \s_axi_ctrl_mgmt_rdata_i[11]_i_6_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[11]_i_1_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[11]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => test_cntr1_kernel(43),
      I1 => \s_axi_ctrl_mgmt_rdata_i[22]_i_3_n_0\,
      I2 => test_cntr1_kernel(11),
      I3 => \s_axi_ctrl_mgmt_rdata_i[31]_i_8_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[11]_i_2_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[11]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0A0C0000"
    )
        port map (
      I0 => cdc_freq_cntr_aclk_n_85,
      I1 => test_cntr0_aclk(11),
      I2 => s_axi_ctrl_mgmt_araddr(15),
      I3 => s_axi_ctrl_mgmt_araddr(2),
      I4 => s_axi_ctrl_mgmt_araddr(4),
      O => \s_axi_ctrl_mgmt_rdata_i[11]_i_3_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[11]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF002000200020"
    )
        port map (
      I0 => ref_cntr_aclk(11),
      I1 => s_axi_ctrl_mgmt_araddr(15),
      I2 => s_axi_ctrl_mgmt_araddr(2),
      I3 => s_axi_ctrl_mgmt_araddr(4),
      I4 => \Request_SW_reg_n_0_[7]\,
      I5 => \s_axi_ctrl_mgmt_rdata_i[15]_i_7_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[11]_i_4_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[11]_i_5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => ref_cntr_kernel(43),
      I1 => \s_axi_ctrl_mgmt_rdata_i[31]_i_7_n_0\,
      I2 => ref_cntr_kernel(11),
      I3 => \s_axi_ctrl_mgmt_rdata_i[31]_i_11_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[11]_i_5_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[11]_i_6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F888F888F8880000"
    )
        port map (
      I0 => test_cntr0_kernel(43),
      I1 => \s_axi_ctrl_mgmt_rdata_i[22]_i_4_n_0\,
      I2 => test_cntr0_kernel(11),
      I3 => \s_axi_ctrl_mgmt_rdata_i[21]_i_4_n_0\,
      I4 => s_axi_ctrl_mgmt_araddr(4),
      I5 => s_axi_ctrl_mgmt_araddr(3),
      O => \s_axi_ctrl_mgmt_rdata_i[11]_i_6_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[12]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFFFE"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i[12]_i_2_n_0\,
      I1 => \s_axi_ctrl_mgmt_rdata_i[12]_i_3_n_0\,
      I2 => \s_axi_ctrl_mgmt_rdata_i[12]_i_4_n_0\,
      I3 => \s_axi_ctrl_mgmt_rdata_i[12]_i_5_n_0\,
      I4 => \s_axi_ctrl_mgmt_rdata_i[12]_i_6_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[12]_i_1_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[12]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => test_cntr1_kernel(44),
      I1 => \s_axi_ctrl_mgmt_rdata_i[22]_i_3_n_0\,
      I2 => test_cntr1_kernel(12),
      I3 => \s_axi_ctrl_mgmt_rdata_i[31]_i_8_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[12]_i_2_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[12]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0A0C0000"
    )
        port map (
      I0 => cdc_freq_cntr_aclk_n_84,
      I1 => test_cntr0_aclk(12),
      I2 => s_axi_ctrl_mgmt_araddr(15),
      I3 => s_axi_ctrl_mgmt_araddr(2),
      I4 => s_axi_ctrl_mgmt_araddr(4),
      O => \s_axi_ctrl_mgmt_rdata_i[12]_i_3_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[12]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF002000200020"
    )
        port map (
      I0 => ref_cntr_aclk(12),
      I1 => s_axi_ctrl_mgmt_araddr(15),
      I2 => s_axi_ctrl_mgmt_araddr(2),
      I3 => s_axi_ctrl_mgmt_araddr(4),
      I4 => \Request_SW_reg_n_0_[8]\,
      I5 => \s_axi_ctrl_mgmt_rdata_i[15]_i_7_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[12]_i_4_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[12]_i_5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => ref_cntr_kernel(44),
      I1 => \s_axi_ctrl_mgmt_rdata_i[31]_i_7_n_0\,
      I2 => ref_cntr_kernel(12),
      I3 => \s_axi_ctrl_mgmt_rdata_i[31]_i_11_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[12]_i_5_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[12]_i_6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F888F888F8880000"
    )
        port map (
      I0 => test_cntr0_kernel(44),
      I1 => \s_axi_ctrl_mgmt_rdata_i[22]_i_4_n_0\,
      I2 => test_cntr0_kernel(12),
      I3 => \s_axi_ctrl_mgmt_rdata_i[21]_i_4_n_0\,
      I4 => s_axi_ctrl_mgmt_araddr(4),
      I5 => s_axi_ctrl_mgmt_araddr(3),
      O => \s_axi_ctrl_mgmt_rdata_i[12]_i_6_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[13]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFFFE"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i[13]_i_2_n_0\,
      I1 => \s_axi_ctrl_mgmt_rdata_i[13]_i_3_n_0\,
      I2 => \s_axi_ctrl_mgmt_rdata_i[13]_i_4_n_0\,
      I3 => \s_axi_ctrl_mgmt_rdata_i[13]_i_5_n_0\,
      I4 => \s_axi_ctrl_mgmt_rdata_i[13]_i_6_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[13]_i_1_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[13]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => test_cntr1_kernel(45),
      I1 => \s_axi_ctrl_mgmt_rdata_i[22]_i_3_n_0\,
      I2 => test_cntr1_kernel(13),
      I3 => \s_axi_ctrl_mgmt_rdata_i[31]_i_8_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[13]_i_2_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[13]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0A0C0000"
    )
        port map (
      I0 => cdc_freq_cntr_aclk_n_83,
      I1 => test_cntr0_aclk(13),
      I2 => s_axi_ctrl_mgmt_araddr(15),
      I3 => s_axi_ctrl_mgmt_araddr(2),
      I4 => s_axi_ctrl_mgmt_araddr(4),
      O => \s_axi_ctrl_mgmt_rdata_i[13]_i_3_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[13]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF002000200020"
    )
        port map (
      I0 => ref_cntr_aclk(13),
      I1 => s_axi_ctrl_mgmt_araddr(15),
      I2 => s_axi_ctrl_mgmt_araddr(2),
      I3 => s_axi_ctrl_mgmt_araddr(4),
      I4 => \Request_SW_reg_n_0_[9]\,
      I5 => \s_axi_ctrl_mgmt_rdata_i[15]_i_7_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[13]_i_4_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[13]_i_5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => ref_cntr_kernel(45),
      I1 => \s_axi_ctrl_mgmt_rdata_i[31]_i_7_n_0\,
      I2 => ref_cntr_kernel(13),
      I3 => \s_axi_ctrl_mgmt_rdata_i[31]_i_11_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[13]_i_5_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[13]_i_6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F888F888F8880000"
    )
        port map (
      I0 => test_cntr0_kernel(45),
      I1 => \s_axi_ctrl_mgmt_rdata_i[22]_i_4_n_0\,
      I2 => test_cntr0_kernel(13),
      I3 => \s_axi_ctrl_mgmt_rdata_i[21]_i_4_n_0\,
      I4 => s_axi_ctrl_mgmt_araddr(4),
      I5 => s_axi_ctrl_mgmt_araddr(3),
      O => \s_axi_ctrl_mgmt_rdata_i[13]_i_6_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[14]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFFFE"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i[14]_i_2_n_0\,
      I1 => \s_axi_ctrl_mgmt_rdata_i[14]_i_3_n_0\,
      I2 => \s_axi_ctrl_mgmt_rdata_i[14]_i_4_n_0\,
      I3 => \s_axi_ctrl_mgmt_rdata_i[14]_i_5_n_0\,
      I4 => \s_axi_ctrl_mgmt_rdata_i[14]_i_6_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[14]_i_1_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[14]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => test_cntr1_kernel(46),
      I1 => \s_axi_ctrl_mgmt_rdata_i[22]_i_3_n_0\,
      I2 => test_cntr1_kernel(14),
      I3 => \s_axi_ctrl_mgmt_rdata_i[31]_i_8_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[14]_i_2_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[14]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0A0C0000"
    )
        port map (
      I0 => cdc_freq_cntr_aclk_n_82,
      I1 => test_cntr0_aclk(14),
      I2 => s_axi_ctrl_mgmt_araddr(15),
      I3 => s_axi_ctrl_mgmt_araddr(2),
      I4 => s_axi_ctrl_mgmt_araddr(4),
      O => \s_axi_ctrl_mgmt_rdata_i[14]_i_3_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[14]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF002000200020"
    )
        port map (
      I0 => ref_cntr_aclk(14),
      I1 => s_axi_ctrl_mgmt_araddr(15),
      I2 => s_axi_ctrl_mgmt_araddr(2),
      I3 => s_axi_ctrl_mgmt_araddr(4),
      I4 => \Request_SW_reg_n_0_[10]\,
      I5 => \s_axi_ctrl_mgmt_rdata_i[15]_i_7_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[14]_i_4_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[14]_i_5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => ref_cntr_kernel(46),
      I1 => \s_axi_ctrl_mgmt_rdata_i[31]_i_7_n_0\,
      I2 => ref_cntr_kernel(14),
      I3 => \s_axi_ctrl_mgmt_rdata_i[31]_i_11_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[14]_i_5_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[14]_i_6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F888F888F8880000"
    )
        port map (
      I0 => test_cntr0_kernel(46),
      I1 => \s_axi_ctrl_mgmt_rdata_i[22]_i_4_n_0\,
      I2 => test_cntr0_kernel(14),
      I3 => \s_axi_ctrl_mgmt_rdata_i[21]_i_4_n_0\,
      I4 => s_axi_ctrl_mgmt_araddr(4),
      I5 => s_axi_ctrl_mgmt_araddr(3),
      O => \s_axi_ctrl_mgmt_rdata_i[14]_i_6_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[15]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFFFE"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i[15]_i_2_n_0\,
      I1 => \s_axi_ctrl_mgmt_rdata_i[15]_i_3_n_0\,
      I2 => \s_axi_ctrl_mgmt_rdata_i[15]_i_4_n_0\,
      I3 => \s_axi_ctrl_mgmt_rdata_i[15]_i_5_n_0\,
      I4 => \s_axi_ctrl_mgmt_rdata_i[15]_i_6_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[15]_i_1_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[15]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => test_cntr1_kernel(47),
      I1 => \s_axi_ctrl_mgmt_rdata_i[22]_i_3_n_0\,
      I2 => test_cntr1_kernel(15),
      I3 => \s_axi_ctrl_mgmt_rdata_i[31]_i_8_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[15]_i_2_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[15]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0A0C0000"
    )
        port map (
      I0 => cdc_freq_cntr_aclk_n_81,
      I1 => test_cntr0_aclk(15),
      I2 => s_axi_ctrl_mgmt_araddr(15),
      I3 => s_axi_ctrl_mgmt_araddr(2),
      I4 => s_axi_ctrl_mgmt_araddr(4),
      O => \s_axi_ctrl_mgmt_rdata_i[15]_i_3_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[15]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF002000200020"
    )
        port map (
      I0 => ref_cntr_aclk(15),
      I1 => s_axi_ctrl_mgmt_araddr(15),
      I2 => s_axi_ctrl_mgmt_araddr(2),
      I3 => s_axi_ctrl_mgmt_araddr(4),
      I4 => \Request_SW_reg_n_0_[11]\,
      I5 => \s_axi_ctrl_mgmt_rdata_i[15]_i_7_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[15]_i_4_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[15]_i_5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => ref_cntr_kernel(47),
      I1 => \s_axi_ctrl_mgmt_rdata_i[31]_i_7_n_0\,
      I2 => ref_cntr_kernel(15),
      I3 => \s_axi_ctrl_mgmt_rdata_i[31]_i_11_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[15]_i_5_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[15]_i_6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F888F888F8880000"
    )
        port map (
      I0 => test_cntr0_kernel(47),
      I1 => \s_axi_ctrl_mgmt_rdata_i[22]_i_4_n_0\,
      I2 => test_cntr0_kernel(15),
      I3 => \s_axi_ctrl_mgmt_rdata_i[21]_i_4_n_0\,
      I4 => s_axi_ctrl_mgmt_araddr(4),
      I5 => s_axi_ctrl_mgmt_araddr(3),
      O => \s_axi_ctrl_mgmt_rdata_i[15]_i_6_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[15]_i_7\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0008"
    )
        port map (
      I0 => s_axi_ctrl_mgmt_araddr(12),
      I1 => s_axi_ctrl_mgmt_araddr(3),
      I2 => s_axi_ctrl_mgmt_araddr(4),
      I3 => s_axi_ctrl_mgmt_araddr(2),
      O => \s_axi_ctrl_mgmt_rdata_i[15]_i_7_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[16]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => test_cntr0_kernel(48),
      I1 => \s_axi_ctrl_mgmt_rdata_i[22]_i_4_n_0\,
      I2 => test_cntr1_kernel(16),
      I3 => \s_axi_ctrl_mgmt_rdata_i[31]_i_8_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[16]_i_2_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[16]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FEEE"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i[16]_i_7_n_0\,
      I1 => \s_axi_ctrl_mgmt_rdata_i[21]_i_3_n_0\,
      I2 => \s_axi_ctrl_mgmt_rdata_i[21]_i_4_n_0\,
      I3 => test_cntr0_kernel(16),
      O => \s_axi_ctrl_mgmt_rdata_i[16]_i_4_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[16]_i_5\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AABBAABA"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i[16]_i_8_n_0\,
      I1 => s_axi_ctrl_mgmt_araddr(12),
      I2 => request_ack_reg_n_0,
      I3 => \s_axi_ctrl_mgmt_rdata_i[31]_i_10_n_0\,
      I4 => s_axi_ctrl_mgmt_araddr(13),
      O => \s_axi_ctrl_mgmt_rdata_i[16]_i_5_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[16]_i_7\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => ref_cntr_kernel(48),
      I1 => \s_axi_ctrl_mgmt_rdata_i[31]_i_7_n_0\,
      I2 => ref_cntr_kernel(16),
      I3 => \s_axi_ctrl_mgmt_rdata_i[31]_i_11_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[16]_i_7_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[16]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"020002000F000200"
    )
        port map (
      I0 => test_cntr0_aclk(16),
      I1 => s_axi_ctrl_mgmt_araddr(2),
      I2 => s_axi_ctrl_mgmt_araddr(12),
      I3 => s_axi_ctrl_mgmt_araddr(13),
      I4 => ref_cntr_aclk(16),
      I5 => s_axi_ctrl_mgmt_araddr(4),
      O => \s_axi_ctrl_mgmt_rdata_i[16]_i_8_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[17]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => test_cntr1_kernel(49),
      I1 => \s_axi_ctrl_mgmt_rdata_i[22]_i_3_n_0\,
      I2 => test_cntr1_kernel(17),
      I3 => \s_axi_ctrl_mgmt_rdata_i[31]_i_8_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[17]_i_3_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[17]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AA80"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i[24]_i_3_n_0\,
      I1 => \s_axi_ctrl_mgmt_rdata_i[24]_i_7_n_0\,
      I2 => test_cntr0_kernel(49),
      I3 => \s_axi_ctrl_mgmt_rdata_i[17]_i_6_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[17]_i_4_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[17]_i_5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => ref_cntr_kernel(49),
      I1 => \s_axi_ctrl_mgmt_rdata_i[31]_i_7_n_0\,
      I2 => ref_cntr_kernel(17),
      I3 => \s_axi_ctrl_mgmt_rdata_i[31]_i_11_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[17]_i_5_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[17]_i_6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0002FFFF00020000"
    )
        port map (
      I0 => test_cntr0_kernel(17),
      I1 => s_axi_ctrl_mgmt_araddr(14),
      I2 => s_axi_ctrl_mgmt_araddr(13),
      I3 => s_axi_ctrl_mgmt_araddr(12),
      I4 => s_axi_ctrl_mgmt_araddr(15),
      I5 => test_cntr0_aclk(17),
      O => \s_axi_ctrl_mgmt_rdata_i[17]_i_6_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[18]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => test_cntr0_kernel(50),
      I1 => \s_axi_ctrl_mgmt_rdata_i[22]_i_4_n_0\,
      I2 => ref_cntr_kernel(50),
      I3 => \s_axi_ctrl_mgmt_rdata_i[31]_i_7_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[18]_i_2_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[18]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => test_cntr0_kernel(18),
      I1 => \s_axi_ctrl_mgmt_rdata_i[21]_i_4_n_0\,
      I2 => ref_cntr_kernel(18),
      I3 => \s_axi_ctrl_mgmt_rdata_i[31]_i_11_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[18]_i_4_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[18]_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF008000800080"
    )
        port map (
      I0 => s_axi_ctrl_mgmt_araddr(3),
      I1 => s_axi_ctrl_mgmt_araddr(12),
      I2 => \Request_SW_reg_n_0_[14]\,
      I3 => s_axi_ctrl_mgmt_araddr(15),
      I4 => test_cntr1_kernel(18),
      I5 => \s_axi_ctrl_mgmt_rdata_i[31]_i_8_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[18]_i_5_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[18]_i_6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CAFFCA0F"
    )
        port map (
      I0 => test_cntr0_aclk(18),
      I1 => cdc_freq_cntr_aclk_n_78,
      I2 => s_axi_ctrl_mgmt_araddr(2),
      I3 => s_axi_ctrl_mgmt_araddr(4),
      I4 => ref_cntr_aclk(18),
      O => \s_axi_ctrl_mgmt_rdata_i[18]_i_6_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[19]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => test_cntr1_kernel(51),
      I1 => \s_axi_ctrl_mgmt_rdata_i[22]_i_3_n_0\,
      I2 => test_cntr1_kernel(19),
      I3 => \s_axi_ctrl_mgmt_rdata_i[31]_i_8_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[19]_i_3_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[19]_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"04"
    )
        port map (
      I0 => s_axi_ctrl_mgmt_araddr(15),
      I1 => s_axi_ctrl_mgmt_araddr(2),
      I2 => s_axi_ctrl_mgmt_araddr(4),
      O => \s_axi_ctrl_mgmt_rdata_i[19]_i_4_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[19]_i_5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AA80"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i[24]_i_3_n_0\,
      I1 => \s_axi_ctrl_mgmt_rdata_i[24]_i_7_n_0\,
      I2 => test_cntr0_kernel(51),
      I3 => \s_axi_ctrl_mgmt_rdata_i[19]_i_8_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[19]_i_5_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[19]_i_6\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => ref_cntr_kernel(51),
      I1 => \s_axi_ctrl_mgmt_rdata_i[31]_i_7_n_0\,
      I2 => ref_cntr_kernel(19),
      I3 => \s_axi_ctrl_mgmt_rdata_i[31]_i_11_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[19]_i_6_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[19]_i_7\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"08"
    )
        port map (
      I0 => s_axi_ctrl_mgmt_araddr(12),
      I1 => s_axi_ctrl_mgmt_araddr(3),
      I2 => s_axi_ctrl_mgmt_araddr(2),
      O => \s_axi_ctrl_mgmt_rdata_i[19]_i_7_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[19]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0002FFFF00020000"
    )
        port map (
      I0 => test_cntr0_kernel(19),
      I1 => s_axi_ctrl_mgmt_araddr(14),
      I2 => s_axi_ctrl_mgmt_araddr(13),
      I3 => s_axi_ctrl_mgmt_araddr(12),
      I4 => s_axi_ctrl_mgmt_araddr(15),
      I5 => test_cntr0_aclk(19),
      O => \s_axi_ctrl_mgmt_rdata_i[19]_i_8_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFF08"
    )
        port map (
      I0 => test_cntr0_kernel(33),
      I1 => \s_axi_ctrl_mgmt_rdata_i[22]_i_4_n_0\,
      I2 => s_axi_ctrl_mgmt_araddr(3),
      I3 => \s_axi_ctrl_mgmt_rdata_i[1]_i_2_n_0\,
      I4 => \s_axi_ctrl_mgmt_rdata_i[1]_i_3_n_0\,
      I5 => \s_axi_ctrl_mgmt_rdata_i[1]_i_4_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[1]_i_1_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[1]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFF888"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i[31]_i_11_n_0\,
      I1 => ref_cntr_kernel(1),
      I2 => \s_axi_ctrl_mgmt_rdata_i[22]_i_3_n_0\,
      I3 => test_cntr1_kernel(33),
      I4 => \s_axi_ctrl_mgmt_rdata_i[1]_i_5_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[1]_i_2_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[1]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AAEA"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i[1]_i_6_n_0\,
      I1 => test_cntr0_kernel(1),
      I2 => \s_axi_ctrl_mgmt_rdata_i[21]_i_4_n_0\,
      I3 => s_axi_ctrl_mgmt_araddr(3),
      O => \s_axi_ctrl_mgmt_rdata_i[1]_i_3_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[1]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => cdc_freq_cntr_aclk_n_95,
      I1 => \s_axi_ctrl_mgmt_rdata_i[3]_i_2_n_0\,
      I2 => test_cntr1_kernel(1),
      I3 => \s_axi_ctrl_mgmt_rdata_i[31]_i_8_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[1]_i_4_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[1]_i_5\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"888888F8"
    )
        port map (
      I0 => ref_cntr_kernel(33),
      I1 => \s_axi_ctrl_mgmt_rdata_i[31]_i_7_n_0\,
      I2 => \s_axi_ctrl_mgmt_rdata_i[1]_i_7_n_0\,
      I3 => \s_axi_ctrl_mgmt_rdata_i[31]_i_10_n_0\,
      I4 => s_axi_ctrl_mgmt_araddr(3),
      O => \s_axi_ctrl_mgmt_rdata_i[1]_i_5_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[1]_i_6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000002200F00000"
    )
        port map (
      I0 => test_cntr0_aclk(1),
      I1 => s_axi_ctrl_mgmt_araddr(3),
      I2 => ref_cntr_aclk(1),
      I3 => s_axi_ctrl_mgmt_araddr(15),
      I4 => s_axi_ctrl_mgmt_araddr(2),
      I5 => s_axi_ctrl_mgmt_araddr(4),
      O => \s_axi_ctrl_mgmt_rdata_i[1]_i_6_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[1]_i_7\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFF888"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i[24]_i_6_n_0\,
      I1 => \genblk1[0].done_test_kernel_reg\,
      I2 => \s_axi_ctrl_mgmt_rdata_i[24]_i_7_n_0\,
      I3 => \genblk1[1].done_test_kernel_reg\,
      I4 => \s_axi_ctrl_mgmt_rdata_i[1]_i_8_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[1]_i_7_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[1]_i_8\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000B08"
    )
        port map (
      I0 => done_test_aclk_reg_n_0,
      I1 => s_axi_ctrl_mgmt_araddr(13),
      I2 => s_axi_ctrl_mgmt_araddr(15),
      I3 => p_6_in(1),
      I4 => s_axi_ctrl_mgmt_araddr(12),
      O => \s_axi_ctrl_mgmt_rdata_i[1]_i_8_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[20]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFF222F222F222"
    )
        port map (
      I0 => test_cntr0_aclk(20),
      I1 => s_axi_ctrl_mgmt_araddr(15),
      I2 => \s_axi_ctrl_mgmt_rdata_i[24]_i_6_n_0\,
      I3 => test_cntr0_kernel(20),
      I4 => test_cntr0_kernel(52),
      I5 => \s_axi_ctrl_mgmt_rdata_i[24]_i_7_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[20]_i_2_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[20]_i_4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFF888"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i[31]_i_11_n_0\,
      I1 => ref_cntr_kernel(20),
      I2 => \s_axi_ctrl_mgmt_rdata_i[31]_i_7_n_0\,
      I3 => ref_cntr_kernel(52),
      I4 => \s_axi_ctrl_mgmt_rdata_i[20]_i_5_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[20]_i_4_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[20]_i_5\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0A000C00"
    )
        port map (
      I0 => cdc_freq_cntr_aclk_n_76,
      I1 => ref_cntr_aclk(20),
      I2 => s_axi_ctrl_mgmt_araddr(15),
      I3 => s_axi_ctrl_mgmt_araddr(2),
      I4 => s_axi_ctrl_mgmt_araddr(4),
      O => \s_axi_ctrl_mgmt_rdata_i[20]_i_5_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[21]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => ref_cntr_kernel(53),
      I1 => \s_axi_ctrl_mgmt_rdata_i[31]_i_7_n_0\,
      I2 => ref_cntr_kernel(21),
      I3 => \s_axi_ctrl_mgmt_rdata_i[31]_i_11_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[21]_i_2_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[21]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0010"
    )
        port map (
      I0 => s_axi_ctrl_mgmt_araddr(14),
      I1 => s_axi_ctrl_mgmt_araddr(13),
      I2 => s_axi_ctrl_mgmt_araddr(15),
      I3 => \s_axi_ctrl_mgmt_rdata_i[31]_i_10_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[21]_i_3_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[21]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000200"
    )
        port map (
      I0 => s_axi_ctrl_mgmt_araddr(15),
      I1 => s_axi_ctrl_mgmt_araddr(13),
      I2 => s_axi_ctrl_mgmt_araddr(14),
      I3 => s_axi_ctrl_mgmt_araddr(4),
      I4 => s_axi_ctrl_mgmt_araddr(2),
      I5 => s_axi_ctrl_mgmt_araddr(12),
      O => \s_axi_ctrl_mgmt_rdata_i[21]_i_4_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[21]_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"3F3F0FFF5F5F0F0F"
    )
        port map (
      I0 => test_cntr0_aclk(21),
      I1 => cdc_freq_cntr_aclk_n_75,
      I2 => s_axi_ctrl_mgmt_araddr(13),
      I3 => ref_cntr_aclk(21),
      I4 => s_axi_ctrl_mgmt_araddr(4),
      I5 => s_axi_ctrl_mgmt_araddr(2),
      O => \s_axi_ctrl_mgmt_rdata_i[21]_i_7_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[22]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"11110000FF1FFF0F"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i[31]_i_4_n_0\,
      I1 => s_axi_ctrl_mgmt_araddr(9),
      I2 => s_axi_ctrl_mgmt_arvalid,
      I3 => \^s_axi_ctrl_mgmt_rvalid\,
      I4 => \s_axi_ctrl_mgmt_rdata_i[22]_i_6_n_0\,
      I5 => s_axi_ctrl_mgmt_araddr(3),
      O => \s_axi_ctrl_mgmt_rdata_i[22]_i_2_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[22]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0200000000000000"
    )
        port map (
      I0 => s_axi_ctrl_mgmt_araddr(4),
      I1 => s_axi_ctrl_mgmt_araddr(14),
      I2 => s_axi_ctrl_mgmt_araddr(13),
      I3 => s_axi_ctrl_mgmt_araddr(15),
      I4 => s_axi_ctrl_mgmt_araddr(2),
      I5 => s_axi_ctrl_mgmt_araddr(12),
      O => \s_axi_ctrl_mgmt_rdata_i[22]_i_3_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[22]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000020000000000"
    )
        port map (
      I0 => s_axi_ctrl_mgmt_araddr(15),
      I1 => s_axi_ctrl_mgmt_araddr(13),
      I2 => s_axi_ctrl_mgmt_araddr(14),
      I3 => s_axi_ctrl_mgmt_araddr(4),
      I4 => s_axi_ctrl_mgmt_araddr(2),
      I5 => s_axi_ctrl_mgmt_araddr(12),
      O => \s_axi_ctrl_mgmt_rdata_i[22]_i_4_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[22]_i_6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000015151015"
    )
        port map (
      I0 => s_axi_ctrl_mgmt_araddr(3),
      I1 => s_axi_ctrl_mgmt_araddr(12),
      I2 => s_axi_ctrl_mgmt_araddr(13),
      I3 => \s_axi_ctrl_mgmt_rdata_i[31]_i_10_n_0\,
      I4 => s_axi_ctrl_mgmt_araddr(15),
      I5 => s_axi_ctrl_mgmt_araddr(14),
      O => \s_axi_ctrl_mgmt_rdata_i[22]_i_6_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[22]_i_7\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => test_cntr0_kernel(22),
      I1 => \s_axi_ctrl_mgmt_rdata_i[21]_i_4_n_0\,
      I2 => ref_cntr_kernel(22),
      I3 => \s_axi_ctrl_mgmt_rdata_i[31]_i_11_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[22]_i_7_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[22]_i_9\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => s_axi_ctrl_mgmt_araddr(13),
      I1 => s_axi_ctrl_mgmt_araddr(12),
      I2 => s_axi_ctrl_mgmt_araddr(15),
      O => \s_axi_ctrl_mgmt_rdata_i[22]_i_9_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[23]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8888F888"
    )
        port map (
      I0 => test_cntr1_kernel(55),
      I1 => \s_axi_ctrl_mgmt_rdata_i[22]_i_3_n_0\,
      I2 => test_cntr0_kernel(55),
      I3 => \s_axi_ctrl_mgmt_rdata_i[22]_i_4_n_0\,
      I4 => s_axi_ctrl_mgmt_araddr(3),
      O => \s_axi_ctrl_mgmt_rdata_i[23]_i_2_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[23]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000A000AC00"
    )
        port map (
      I0 => cdc_freq_cntr_aclk_n_73,
      I1 => test_cntr0_aclk(23),
      I2 => s_axi_ctrl_mgmt_araddr(2),
      I3 => s_axi_ctrl_mgmt_araddr(4),
      I4 => s_axi_ctrl_mgmt_araddr(3),
      I5 => s_axi_ctrl_mgmt_araddr(15),
      O => \s_axi_ctrl_mgmt_rdata_i[23]_i_3_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[23]_i_5\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FF080808"
    )
        port map (
      I0 => test_cntr0_kernel(23),
      I1 => \s_axi_ctrl_mgmt_rdata_i[21]_i_4_n_0\,
      I2 => s_axi_ctrl_mgmt_araddr(3),
      I3 => ref_cntr_kernel(23),
      I4 => \s_axi_ctrl_mgmt_rdata_i[31]_i_11_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[23]_i_5_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[23]_i_6\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => ref_cntr_kernel(55),
      I1 => \s_axi_ctrl_mgmt_rdata_i[31]_i_7_n_0\,
      I2 => test_cntr1_kernel(23),
      I3 => \s_axi_ctrl_mgmt_rdata_i[31]_i_8_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[23]_i_6_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[24]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFF222F222F222"
    )
        port map (
      I0 => test_cntr0_aclk(24),
      I1 => s_axi_ctrl_mgmt_araddr(15),
      I2 => \s_axi_ctrl_mgmt_rdata_i[24]_i_6_n_0\,
      I3 => test_cntr0_kernel(24),
      I4 => test_cntr0_kernel(56),
      I5 => \s_axi_ctrl_mgmt_rdata_i[24]_i_7_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[24]_i_2_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[24]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"04"
    )
        port map (
      I0 => s_axi_ctrl_mgmt_araddr(2),
      I1 => s_axi_ctrl_mgmt_araddr(4),
      I2 => s_axi_ctrl_mgmt_araddr(3),
      O => \s_axi_ctrl_mgmt_rdata_i[24]_i_3_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[24]_i_5\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFF888"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i[31]_i_11_n_0\,
      I1 => ref_cntr_kernel(24),
      I2 => \s_axi_ctrl_mgmt_rdata_i[31]_i_7_n_0\,
      I3 => ref_cntr_kernel(56),
      I4 => \s_axi_ctrl_mgmt_rdata_i[24]_i_9_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[24]_i_5_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[24]_i_6\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0010"
    )
        port map (
      I0 => s_axi_ctrl_mgmt_araddr(14),
      I1 => s_axi_ctrl_mgmt_araddr(13),
      I2 => s_axi_ctrl_mgmt_araddr(15),
      I3 => s_axi_ctrl_mgmt_araddr(12),
      O => \s_axi_ctrl_mgmt_rdata_i[24]_i_6_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[24]_i_7\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"1000"
    )
        port map (
      I0 => s_axi_ctrl_mgmt_araddr(14),
      I1 => s_axi_ctrl_mgmt_araddr(13),
      I2 => s_axi_ctrl_mgmt_araddr(15),
      I3 => s_axi_ctrl_mgmt_araddr(12),
      O => \s_axi_ctrl_mgmt_rdata_i[24]_i_7_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[24]_i_9\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0A000C00"
    )
        port map (
      I0 => cdc_freq_cntr_aclk_n_72,
      I1 => ref_cntr_aclk(24),
      I2 => s_axi_ctrl_mgmt_araddr(15),
      I3 => s_axi_ctrl_mgmt_araddr(2),
      I4 => s_axi_ctrl_mgmt_araddr(4),
      O => \s_axi_ctrl_mgmt_rdata_i[24]_i_9_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[25]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8888F888"
    )
        port map (
      I0 => test_cntr1_kernel(57),
      I1 => \s_axi_ctrl_mgmt_rdata_i[22]_i_3_n_0\,
      I2 => test_cntr0_kernel(57),
      I3 => \s_axi_ctrl_mgmt_rdata_i[22]_i_4_n_0\,
      I4 => s_axi_ctrl_mgmt_araddr(3),
      O => \s_axi_ctrl_mgmt_rdata_i[25]_i_2_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[25]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000A000AC00"
    )
        port map (
      I0 => cdc_freq_cntr_aclk_n_71,
      I1 => test_cntr0_aclk(25),
      I2 => s_axi_ctrl_mgmt_araddr(2),
      I3 => s_axi_ctrl_mgmt_araddr(4),
      I4 => s_axi_ctrl_mgmt_araddr(3),
      I5 => s_axi_ctrl_mgmt_araddr(15),
      O => \s_axi_ctrl_mgmt_rdata_i[25]_i_3_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[25]_i_5\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FF080808"
    )
        port map (
      I0 => test_cntr0_kernel(25),
      I1 => \s_axi_ctrl_mgmt_rdata_i[21]_i_4_n_0\,
      I2 => s_axi_ctrl_mgmt_araddr(3),
      I3 => ref_cntr_kernel(25),
      I4 => \s_axi_ctrl_mgmt_rdata_i[31]_i_11_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[25]_i_5_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[25]_i_6\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => ref_cntr_kernel(57),
      I1 => \s_axi_ctrl_mgmt_rdata_i[31]_i_7_n_0\,
      I2 => test_cntr1_kernel(25),
      I3 => \s_axi_ctrl_mgmt_rdata_i[31]_i_8_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[25]_i_6_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[26]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8888F888"
    )
        port map (
      I0 => test_cntr1_kernel(58),
      I1 => \s_axi_ctrl_mgmt_rdata_i[22]_i_3_n_0\,
      I2 => test_cntr0_kernel(58),
      I3 => \s_axi_ctrl_mgmt_rdata_i[22]_i_4_n_0\,
      I4 => s_axi_ctrl_mgmt_araddr(3),
      O => \s_axi_ctrl_mgmt_rdata_i[26]_i_2_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[26]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000A000AC00"
    )
        port map (
      I0 => cdc_freq_cntr_aclk_n_70,
      I1 => test_cntr0_aclk(26),
      I2 => s_axi_ctrl_mgmt_araddr(2),
      I3 => s_axi_ctrl_mgmt_araddr(4),
      I4 => s_axi_ctrl_mgmt_araddr(3),
      I5 => s_axi_ctrl_mgmt_araddr(15),
      O => \s_axi_ctrl_mgmt_rdata_i[26]_i_3_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[26]_i_5\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FF080808"
    )
        port map (
      I0 => test_cntr0_kernel(26),
      I1 => \s_axi_ctrl_mgmt_rdata_i[21]_i_4_n_0\,
      I2 => s_axi_ctrl_mgmt_araddr(3),
      I3 => ref_cntr_kernel(26),
      I4 => \s_axi_ctrl_mgmt_rdata_i[31]_i_11_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[26]_i_5_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[26]_i_6\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => ref_cntr_kernel(58),
      I1 => \s_axi_ctrl_mgmt_rdata_i[31]_i_7_n_0\,
      I2 => test_cntr1_kernel(26),
      I3 => \s_axi_ctrl_mgmt_rdata_i[31]_i_8_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[26]_i_6_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[27]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8888F888"
    )
        port map (
      I0 => test_cntr1_kernel(59),
      I1 => \s_axi_ctrl_mgmt_rdata_i[22]_i_3_n_0\,
      I2 => test_cntr0_kernel(59),
      I3 => \s_axi_ctrl_mgmt_rdata_i[22]_i_4_n_0\,
      I4 => s_axi_ctrl_mgmt_araddr(3),
      O => \s_axi_ctrl_mgmt_rdata_i[27]_i_2_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[27]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000A000AC00"
    )
        port map (
      I0 => cdc_freq_cntr_aclk_n_69,
      I1 => test_cntr0_aclk(27),
      I2 => s_axi_ctrl_mgmt_araddr(2),
      I3 => s_axi_ctrl_mgmt_araddr(4),
      I4 => s_axi_ctrl_mgmt_araddr(3),
      I5 => s_axi_ctrl_mgmt_araddr(15),
      O => \s_axi_ctrl_mgmt_rdata_i[27]_i_3_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[27]_i_5\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FF080808"
    )
        port map (
      I0 => test_cntr0_kernel(27),
      I1 => \s_axi_ctrl_mgmt_rdata_i[21]_i_4_n_0\,
      I2 => s_axi_ctrl_mgmt_araddr(3),
      I3 => ref_cntr_kernel(27),
      I4 => \s_axi_ctrl_mgmt_rdata_i[31]_i_11_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[27]_i_5_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[27]_i_6\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => ref_cntr_kernel(59),
      I1 => \s_axi_ctrl_mgmt_rdata_i[31]_i_7_n_0\,
      I2 => test_cntr1_kernel(27),
      I3 => \s_axi_ctrl_mgmt_rdata_i[31]_i_8_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[27]_i_6_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[28]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8888F888"
    )
        port map (
      I0 => test_cntr1_kernel(60),
      I1 => \s_axi_ctrl_mgmt_rdata_i[22]_i_3_n_0\,
      I2 => test_cntr0_kernel(60),
      I3 => \s_axi_ctrl_mgmt_rdata_i[22]_i_4_n_0\,
      I4 => s_axi_ctrl_mgmt_araddr(3),
      O => \s_axi_ctrl_mgmt_rdata_i[28]_i_2_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[28]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000A000AC00"
    )
        port map (
      I0 => cdc_freq_cntr_aclk_n_68,
      I1 => test_cntr0_aclk(28),
      I2 => s_axi_ctrl_mgmt_araddr(2),
      I3 => s_axi_ctrl_mgmt_araddr(4),
      I4 => s_axi_ctrl_mgmt_araddr(3),
      I5 => s_axi_ctrl_mgmt_araddr(15),
      O => \s_axi_ctrl_mgmt_rdata_i[28]_i_3_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[28]_i_5\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FF080808"
    )
        port map (
      I0 => test_cntr0_kernel(28),
      I1 => \s_axi_ctrl_mgmt_rdata_i[21]_i_4_n_0\,
      I2 => s_axi_ctrl_mgmt_araddr(3),
      I3 => ref_cntr_kernel(28),
      I4 => \s_axi_ctrl_mgmt_rdata_i[31]_i_11_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[28]_i_5_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[28]_i_6\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => ref_cntr_kernel(60),
      I1 => \s_axi_ctrl_mgmt_rdata_i[31]_i_7_n_0\,
      I2 => test_cntr1_kernel(28),
      I3 => \s_axi_ctrl_mgmt_rdata_i[31]_i_8_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[28]_i_6_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[29]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8888F888"
    )
        port map (
      I0 => test_cntr1_kernel(61),
      I1 => \s_axi_ctrl_mgmt_rdata_i[22]_i_3_n_0\,
      I2 => test_cntr0_kernel(61),
      I3 => \s_axi_ctrl_mgmt_rdata_i[22]_i_4_n_0\,
      I4 => s_axi_ctrl_mgmt_araddr(3),
      O => \s_axi_ctrl_mgmt_rdata_i[29]_i_2_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[29]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000A000AC00"
    )
        port map (
      I0 => cdc_freq_cntr_aclk_n_67,
      I1 => test_cntr0_aclk(29),
      I2 => s_axi_ctrl_mgmt_araddr(2),
      I3 => s_axi_ctrl_mgmt_araddr(4),
      I4 => s_axi_ctrl_mgmt_araddr(3),
      I5 => s_axi_ctrl_mgmt_araddr(15),
      O => \s_axi_ctrl_mgmt_rdata_i[29]_i_3_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[29]_i_5\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FF080808"
    )
        port map (
      I0 => test_cntr0_kernel(29),
      I1 => \s_axi_ctrl_mgmt_rdata_i[21]_i_4_n_0\,
      I2 => s_axi_ctrl_mgmt_araddr(3),
      I3 => ref_cntr_kernel(29),
      I4 => \s_axi_ctrl_mgmt_rdata_i[31]_i_11_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[29]_i_5_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[29]_i_6\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => ref_cntr_kernel(61),
      I1 => \s_axi_ctrl_mgmt_rdata_i[31]_i_7_n_0\,
      I2 => test_cntr1_kernel(29),
      I3 => \s_axi_ctrl_mgmt_rdata_i[31]_i_8_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[29]_i_6_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[29]_i_7\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00010000"
    )
        port map (
      I0 => s_axi_ctrl_mgmt_araddr(2),
      I1 => s_axi_ctrl_mgmt_araddr(4),
      I2 => s_axi_ctrl_mgmt_araddr(15),
      I3 => s_axi_ctrl_mgmt_araddr(3),
      I4 => s_axi_ctrl_mgmt_araddr(12),
      O => \s_axi_ctrl_mgmt_rdata_i[29]_i_7_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFFF8"
    )
        port map (
      I0 => cdc_freq_cntr_aclk_n_94,
      I1 => \s_axi_ctrl_mgmt_rdata_i[3]_i_2_n_0\,
      I2 => \s_axi_ctrl_mgmt_rdata_i[2]_i_2_n_0\,
      I3 => \s_axi_ctrl_mgmt_rdata_i[2]_i_3_n_0\,
      I4 => \s_axi_ctrl_mgmt_rdata_i[2]_i_4_n_0\,
      I5 => \s_axi_ctrl_mgmt_rdata_i[2]_i_5_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[2]_i_1_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[2]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AA80"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i[24]_i_3_n_0\,
      I1 => \s_axi_ctrl_mgmt_rdata_i[24]_i_7_n_0\,
      I2 => test_cntr0_kernel(34),
      I3 => \s_axi_ctrl_mgmt_rdata_i[2]_i_6_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[2]_i_2_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[2]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => test_cntr1_kernel(34),
      I1 => \s_axi_ctrl_mgmt_rdata_i[22]_i_3_n_0\,
      I2 => test_cntr1_kernel(2),
      I3 => \s_axi_ctrl_mgmt_rdata_i[31]_i_8_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[2]_i_3_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[2]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF002000200020"
    )
        port map (
      I0 => ref_cntr_aclk(2),
      I1 => s_axi_ctrl_mgmt_araddr(15),
      I2 => s_axi_ctrl_mgmt_araddr(2),
      I3 => s_axi_ctrl_mgmt_araddr(4),
      I4 => p_6_in(2),
      I5 => \s_axi_ctrl_mgmt_rdata_i[7]_i_6_n_1\,
      O => \s_axi_ctrl_mgmt_rdata_i[2]_i_4_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[2]_i_5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => ref_cntr_kernel(34),
      I1 => \s_axi_ctrl_mgmt_rdata_i[31]_i_7_n_0\,
      I2 => ref_cntr_kernel(2),
      I3 => \s_axi_ctrl_mgmt_rdata_i[31]_i_11_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[2]_i_5_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[2]_i_6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0002FFFF00020000"
    )
        port map (
      I0 => test_cntr0_kernel(2),
      I1 => s_axi_ctrl_mgmt_araddr(14),
      I2 => s_axi_ctrl_mgmt_araddr(13),
      I3 => s_axi_ctrl_mgmt_araddr(12),
      I4 => s_axi_ctrl_mgmt_araddr(15),
      I5 => test_cntr0_aclk(2),
      O => \s_axi_ctrl_mgmt_rdata_i[2]_i_6_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[30]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFEAEAEA"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i[30]_i_2_n_0\,
      I1 => ref_cntr_kernel(62),
      I2 => \s_axi_ctrl_mgmt_rdata_i[31]_i_7_n_0\,
      I3 => test_cntr1_kernel(30),
      I4 => \s_axi_ctrl_mgmt_rdata_i[31]_i_8_n_0\,
      I5 => \s_axi_ctrl_mgmt_rdata_i[30]_i_3_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[30]_i_1_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[30]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => test_cntr0_kernel(30),
      I1 => \s_axi_ctrl_mgmt_rdata_i[21]_i_4_n_0\,
      I2 => ref_cntr_kernel(30),
      I3 => \s_axi_ctrl_mgmt_rdata_i[31]_i_11_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[30]_i_2_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[30]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFF8F8F8"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i[22]_i_4_n_0\,
      I1 => test_cntr0_kernel(62),
      I2 => \s_axi_ctrl_mgmt_rdata_i[30]_i_4_n_0\,
      I3 => test_cntr1_kernel(62),
      I4 => \s_axi_ctrl_mgmt_rdata_i[22]_i_3_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[30]_i_3_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[30]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00F000CC00AA0000"
    )
        port map (
      I0 => ref_cntr_aclk(30),
      I1 => test_cntr0_aclk(30),
      I2 => cdc_freq_cntr_aclk_n_66,
      I3 => s_axi_ctrl_mgmt_araddr(15),
      I4 => s_axi_ctrl_mgmt_araddr(2),
      I5 => s_axi_ctrl_mgmt_araddr(4),
      O => \s_axi_ctrl_mgmt_rdata_i[30]_i_4_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[31]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"22202222"
    )
        port map (
      I0 => s_axi_ctrl_mgmt_arvalid,
      I1 => \^s_axi_ctrl_mgmt_rvalid\,
      I2 => \s_axi_ctrl_mgmt_rdata_i[31]_i_4_n_0\,
      I3 => s_axi_ctrl_mgmt_araddr(9),
      I4 => \s_axi_ctrl_mgmt_rdata_i[31]_i_5_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[31]_i_1_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[31]_i_10\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => s_axi_ctrl_mgmt_araddr(2),
      I1 => s_axi_ctrl_mgmt_araddr(4),
      O => \s_axi_ctrl_mgmt_rdata_i[31]_i_10_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[31]_i_11\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000001000000"
    )
        port map (
      I0 => s_axi_ctrl_mgmt_araddr(4),
      I1 => s_axi_ctrl_mgmt_araddr(14),
      I2 => s_axi_ctrl_mgmt_araddr(13),
      I3 => s_axi_ctrl_mgmt_araddr(15),
      I4 => s_axi_ctrl_mgmt_araddr(2),
      I5 => s_axi_ctrl_mgmt_araddr(12),
      O => \s_axi_ctrl_mgmt_rdata_i[31]_i_11_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[31]_i_12\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00F000CC00AA0000"
    )
        port map (
      I0 => ref_cntr_aclk(31),
      I1 => test_cntr0_aclk(31),
      I2 => cdc_freq_cntr_aclk_n_65,
      I3 => s_axi_ctrl_mgmt_araddr(15),
      I4 => s_axi_ctrl_mgmt_araddr(2),
      I5 => s_axi_ctrl_mgmt_araddr(4),
      O => \s_axi_ctrl_mgmt_rdata_i[31]_i_12_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[31]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => s_axi_ctrl_mgmt_arvalid,
      I1 => \^s_axi_ctrl_mgmt_rvalid\,
      O => \s_axi_ctrl_mgmt_rdata_i[31]_i_2_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[31]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFEAEAEA"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i[31]_i_6_n_0\,
      I1 => ref_cntr_kernel(63),
      I2 => \s_axi_ctrl_mgmt_rdata_i[31]_i_7_n_0\,
      I3 => test_cntr1_kernel(31),
      I4 => \s_axi_ctrl_mgmt_rdata_i[31]_i_8_n_0\,
      I5 => \s_axi_ctrl_mgmt_rdata_i[31]_i_9_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[31]_i_3_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[31]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFFFE"
    )
        port map (
      I0 => s_axi_ctrl_mgmt_araddr(10),
      I1 => s_axi_ctrl_mgmt_araddr(11),
      I2 => s_axi_ctrl_mgmt_araddr(8),
      I3 => s_axi_ctrl_mgmt_araddr(7),
      I4 => s_axi_ctrl_mgmt_araddr(5),
      I5 => s_axi_ctrl_mgmt_araddr(6),
      O => \s_axi_ctrl_mgmt_rdata_i[31]_i_4_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[31]_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000001515101F"
    )
        port map (
      I0 => s_axi_ctrl_mgmt_araddr(3),
      I1 => s_axi_ctrl_mgmt_araddr(12),
      I2 => s_axi_ctrl_mgmt_araddr(13),
      I3 => \s_axi_ctrl_mgmt_rdata_i[31]_i_10_n_0\,
      I4 => s_axi_ctrl_mgmt_araddr(15),
      I5 => s_axi_ctrl_mgmt_araddr(14),
      O => \s_axi_ctrl_mgmt_rdata_i[31]_i_5_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[31]_i_6\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => test_cntr0_kernel(31),
      I1 => \s_axi_ctrl_mgmt_rdata_i[21]_i_4_n_0\,
      I2 => ref_cntr_kernel(31),
      I3 => \s_axi_ctrl_mgmt_rdata_i[31]_i_11_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[31]_i_6_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[31]_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0100000000000000"
    )
        port map (
      I0 => s_axi_ctrl_mgmt_araddr(4),
      I1 => s_axi_ctrl_mgmt_araddr(14),
      I2 => s_axi_ctrl_mgmt_araddr(13),
      I3 => s_axi_ctrl_mgmt_araddr(15),
      I4 => s_axi_ctrl_mgmt_araddr(2),
      I5 => s_axi_ctrl_mgmt_araddr(12),
      O => \s_axi_ctrl_mgmt_rdata_i[31]_i_7_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[31]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000002000000"
    )
        port map (
      I0 => s_axi_ctrl_mgmt_araddr(4),
      I1 => s_axi_ctrl_mgmt_araddr(14),
      I2 => s_axi_ctrl_mgmt_araddr(13),
      I3 => s_axi_ctrl_mgmt_araddr(15),
      I4 => s_axi_ctrl_mgmt_araddr(2),
      I5 => s_axi_ctrl_mgmt_araddr(12),
      O => \s_axi_ctrl_mgmt_rdata_i[31]_i_8_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[31]_i_9\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFF8F8F8"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i[22]_i_4_n_0\,
      I1 => test_cntr0_kernel(63),
      I2 => \s_axi_ctrl_mgmt_rdata_i[31]_i_12_n_0\,
      I3 => test_cntr1_kernel(63),
      I4 => \s_axi_ctrl_mgmt_rdata_i[22]_i_3_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[31]_i_9_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFFF8"
    )
        port map (
      I0 => cdc_freq_cntr_aclk_n_93,
      I1 => \s_axi_ctrl_mgmt_rdata_i[3]_i_2_n_0\,
      I2 => \s_axi_ctrl_mgmt_rdata_i[3]_i_3_n_0\,
      I3 => \s_axi_ctrl_mgmt_rdata_i[3]_i_4_n_0\,
      I4 => \s_axi_ctrl_mgmt_rdata_i[3]_i_5_n_0\,
      I5 => \s_axi_ctrl_mgmt_rdata_i[3]_i_6_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[3]_i_1_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[3]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"40"
    )
        port map (
      I0 => s_axi_ctrl_mgmt_araddr(15),
      I1 => s_axi_ctrl_mgmt_araddr(2),
      I2 => s_axi_ctrl_mgmt_araddr(4),
      O => \s_axi_ctrl_mgmt_rdata_i[3]_i_2_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[3]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AA80"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i[24]_i_3_n_0\,
      I1 => \s_axi_ctrl_mgmt_rdata_i[24]_i_7_n_0\,
      I2 => test_cntr0_kernel(35),
      I3 => \s_axi_ctrl_mgmt_rdata_i[3]_i_7_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[3]_i_3_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[3]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => test_cntr1_kernel(35),
      I1 => \s_axi_ctrl_mgmt_rdata_i[22]_i_3_n_0\,
      I2 => test_cntr1_kernel(3),
      I3 => \s_axi_ctrl_mgmt_rdata_i[31]_i_8_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[3]_i_4_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[3]_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF002000200020"
    )
        port map (
      I0 => ref_cntr_aclk(3),
      I1 => s_axi_ctrl_mgmt_araddr(15),
      I2 => s_axi_ctrl_mgmt_araddr(2),
      I3 => s_axi_ctrl_mgmt_araddr(4),
      I4 => p_6_in(3),
      I5 => \s_axi_ctrl_mgmt_rdata_i[7]_i_6_n_1\,
      O => \s_axi_ctrl_mgmt_rdata_i[3]_i_5_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[3]_i_6\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => ref_cntr_kernel(35),
      I1 => \s_axi_ctrl_mgmt_rdata_i[31]_i_7_n_0\,
      I2 => ref_cntr_kernel(3),
      I3 => \s_axi_ctrl_mgmt_rdata_i[31]_i_11_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[3]_i_6_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[3]_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0002FFFF00020000"
    )
        port map (
      I0 => test_cntr0_kernel(3),
      I1 => s_axi_ctrl_mgmt_araddr(14),
      I2 => s_axi_ctrl_mgmt_araddr(13),
      I3 => s_axi_ctrl_mgmt_araddr(12),
      I4 => s_axi_ctrl_mgmt_araddr(15),
      I5 => test_cntr0_aclk(3),
      O => \s_axi_ctrl_mgmt_rdata_i[3]_i_7_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFEEE"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i[4]_i_2_n_0\,
      I1 => \s_axi_ctrl_mgmt_rdata_i[4]_i_3_n_0\,
      I2 => ref_cntr_aclk(4),
      I3 => \s_axi_ctrl_mgmt_rdata_i[19]_i_4_n_0\,
      I4 => \s_axi_ctrl_mgmt_rdata_i[4]_i_4_n_0\,
      I5 => \s_axi_ctrl_mgmt_rdata_i[4]_i_5_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[4]_i_1_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[4]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFF888F888F888"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i[7]_i_6_n_1\,
      I1 => p_6_in(4),
      I2 => \s_axi_ctrl_mgmt_rdata_i[19]_i_7_n_0\,
      I3 => \Request_SW_reg_n_0_[0]\,
      I4 => cdc_freq_cntr_aclk_n_92,
      I5 => \s_axi_ctrl_mgmt_rdata_i[3]_i_2_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[4]_i_2_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[4]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => test_cntr1_kernel(36),
      I1 => \s_axi_ctrl_mgmt_rdata_i[22]_i_3_n_0\,
      I2 => test_cntr1_kernel(4),
      I3 => \s_axi_ctrl_mgmt_rdata_i[31]_i_8_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[4]_i_3_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[4]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AA80"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i[24]_i_3_n_0\,
      I1 => \s_axi_ctrl_mgmt_rdata_i[24]_i_7_n_0\,
      I2 => test_cntr0_kernel(36),
      I3 => \s_axi_ctrl_mgmt_rdata_i[4]_i_6_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[4]_i_4_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[4]_i_5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => ref_cntr_kernel(36),
      I1 => \s_axi_ctrl_mgmt_rdata_i[31]_i_7_n_0\,
      I2 => ref_cntr_kernel(4),
      I3 => \s_axi_ctrl_mgmt_rdata_i[31]_i_11_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[4]_i_5_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[4]_i_6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0002FFFF00020000"
    )
        port map (
      I0 => test_cntr0_kernel(4),
      I1 => s_axi_ctrl_mgmt_araddr(14),
      I2 => s_axi_ctrl_mgmt_araddr(13),
      I3 => s_axi_ctrl_mgmt_araddr(12),
      I4 => s_axi_ctrl_mgmt_araddr(15),
      I5 => test_cntr0_aclk(4),
      O => \s_axi_ctrl_mgmt_rdata_i[4]_i_6_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFEEE"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i[5]_i_2_n_0\,
      I1 => \s_axi_ctrl_mgmt_rdata_i[5]_i_3_n_0\,
      I2 => ref_cntr_aclk(5),
      I3 => \s_axi_ctrl_mgmt_rdata_i[19]_i_4_n_0\,
      I4 => \s_axi_ctrl_mgmt_rdata_i[5]_i_4_n_0\,
      I5 => \s_axi_ctrl_mgmt_rdata_i[5]_i_5_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[5]_i_1_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[5]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFF888F888F888"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i[7]_i_6_n_1\,
      I1 => p_6_in(5),
      I2 => \s_axi_ctrl_mgmt_rdata_i[19]_i_7_n_0\,
      I3 => \Request_SW_reg_n_0_[1]\,
      I4 => cdc_freq_cntr_aclk_n_91,
      I5 => \s_axi_ctrl_mgmt_rdata_i[3]_i_2_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[5]_i_2_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[5]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => test_cntr1_kernel(37),
      I1 => \s_axi_ctrl_mgmt_rdata_i[22]_i_3_n_0\,
      I2 => test_cntr1_kernel(5),
      I3 => \s_axi_ctrl_mgmt_rdata_i[31]_i_8_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[5]_i_3_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[5]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AA80"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i[24]_i_3_n_0\,
      I1 => \s_axi_ctrl_mgmt_rdata_i[24]_i_7_n_0\,
      I2 => test_cntr0_kernel(37),
      I3 => \s_axi_ctrl_mgmt_rdata_i[5]_i_6_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[5]_i_4_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[5]_i_5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => ref_cntr_kernel(37),
      I1 => \s_axi_ctrl_mgmt_rdata_i[31]_i_7_n_0\,
      I2 => ref_cntr_kernel(5),
      I3 => \s_axi_ctrl_mgmt_rdata_i[31]_i_11_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[5]_i_5_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[5]_i_6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0002FFFF00020000"
    )
        port map (
      I0 => test_cntr0_kernel(5),
      I1 => s_axi_ctrl_mgmt_araddr(14),
      I2 => s_axi_ctrl_mgmt_araddr(13),
      I3 => s_axi_ctrl_mgmt_araddr(12),
      I4 => s_axi_ctrl_mgmt_araddr(15),
      I5 => test_cntr0_aclk(5),
      O => \s_axi_ctrl_mgmt_rdata_i[5]_i_6_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[6]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFEEE"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i[6]_i_2_n_0\,
      I1 => \s_axi_ctrl_mgmt_rdata_i[6]_i_3_n_0\,
      I2 => ref_cntr_aclk(6),
      I3 => \s_axi_ctrl_mgmt_rdata_i[19]_i_4_n_0\,
      I4 => \s_axi_ctrl_mgmt_rdata_i[6]_i_4_n_0\,
      I5 => \s_axi_ctrl_mgmt_rdata_i[6]_i_5_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[6]_i_1_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[6]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFF888F888F888"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i[7]_i_6_n_1\,
      I1 => p_6_in(6),
      I2 => \s_axi_ctrl_mgmt_rdata_i[19]_i_7_n_0\,
      I3 => \Request_SW_reg_n_0_[2]\,
      I4 => cdc_freq_cntr_aclk_n_90,
      I5 => \s_axi_ctrl_mgmt_rdata_i[3]_i_2_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[6]_i_2_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[6]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => test_cntr1_kernel(38),
      I1 => \s_axi_ctrl_mgmt_rdata_i[22]_i_3_n_0\,
      I2 => test_cntr1_kernel(6),
      I3 => \s_axi_ctrl_mgmt_rdata_i[31]_i_8_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[6]_i_3_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[6]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AA80"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i[24]_i_3_n_0\,
      I1 => \s_axi_ctrl_mgmt_rdata_i[24]_i_7_n_0\,
      I2 => test_cntr0_kernel(38),
      I3 => \s_axi_ctrl_mgmt_rdata_i[6]_i_6_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[6]_i_4_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[6]_i_5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => ref_cntr_kernel(38),
      I1 => \s_axi_ctrl_mgmt_rdata_i[31]_i_7_n_0\,
      I2 => ref_cntr_kernel(6),
      I3 => \s_axi_ctrl_mgmt_rdata_i[31]_i_11_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[6]_i_5_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[6]_i_6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0002FFFF00020000"
    )
        port map (
      I0 => test_cntr0_kernel(6),
      I1 => s_axi_ctrl_mgmt_araddr(14),
      I2 => s_axi_ctrl_mgmt_araddr(13),
      I3 => s_axi_ctrl_mgmt_araddr(12),
      I4 => s_axi_ctrl_mgmt_araddr(15),
      I5 => test_cntr0_aclk(6),
      O => \s_axi_ctrl_mgmt_rdata_i[6]_i_6_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[7]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFEEE"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i[7]_i_2_n_0\,
      I1 => \s_axi_ctrl_mgmt_rdata_i[7]_i_3_n_0\,
      I2 => ref_cntr_aclk(7),
      I3 => \s_axi_ctrl_mgmt_rdata_i[19]_i_4_n_0\,
      I4 => \s_axi_ctrl_mgmt_rdata_i[7]_i_4_n_0\,
      I5 => \s_axi_ctrl_mgmt_rdata_i[7]_i_5_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[7]_i_1_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[7]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFF888F888F888"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i[7]_i_6_n_1\,
      I1 => p_6_in(7),
      I2 => \s_axi_ctrl_mgmt_rdata_i[19]_i_7_n_0\,
      I3 => \Request_SW_reg_n_0_[3]\,
      I4 => cdc_freq_cntr_aclk_n_89,
      I5 => \s_axi_ctrl_mgmt_rdata_i[3]_i_2_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[7]_i_2_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[7]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => test_cntr1_kernel(39),
      I1 => \s_axi_ctrl_mgmt_rdata_i[22]_i_3_n_0\,
      I2 => test_cntr1_kernel(7),
      I3 => \s_axi_ctrl_mgmt_rdata_i[31]_i_8_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[7]_i_3_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[7]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AA80"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i[24]_i_3_n_0\,
      I1 => \s_axi_ctrl_mgmt_rdata_i[24]_i_7_n_0\,
      I2 => test_cntr0_kernel(39),
      I3 => \s_axi_ctrl_mgmt_rdata_i[7]_i_7_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[7]_i_4_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[7]_i_5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => ref_cntr_kernel(39),
      I1 => \s_axi_ctrl_mgmt_rdata_i[31]_i_7_n_0\,
      I2 => ref_cntr_kernel(7),
      I3 => \s_axi_ctrl_mgmt_rdata_i[31]_i_11_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[7]_i_5_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[7]_i_6\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"0000000000000001"
    )
        port map (
      I0 => s_axi_ctrl_mgmt_araddr(2),
      I1 => s_axi_ctrl_mgmt_araddr(4),
      I2 => s_axi_ctrl_mgmt_araddr(15),
      I3 => s_axi_ctrl_mgmt_araddr(3),
      I4 => s_axi_ctrl_mgmt_araddr(13),
      I5 => s_axi_ctrl_mgmt_araddr(12),
      O5 => \s_axi_ctrl_mgmt_rdata_i[7]_i_6_n_0\,
      O6 => \s_axi_ctrl_mgmt_rdata_i[7]_i_6_n_1\
    );
\s_axi_ctrl_mgmt_rdata_i[7]_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0002FFFF00020000"
    )
        port map (
      I0 => test_cntr0_kernel(7),
      I1 => s_axi_ctrl_mgmt_araddr(14),
      I2 => s_axi_ctrl_mgmt_araddr(13),
      I3 => s_axi_ctrl_mgmt_araddr(12),
      I4 => s_axi_ctrl_mgmt_araddr(15),
      I5 => test_cntr0_aclk(7),
      O => \s_axi_ctrl_mgmt_rdata_i[7]_i_7_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[8]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFFFE"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i[8]_i_2_n_0\,
      I1 => \s_axi_ctrl_mgmt_rdata_i[8]_i_3_n_0\,
      I2 => \s_axi_ctrl_mgmt_rdata_i[8]_i_4_n_0\,
      I3 => \s_axi_ctrl_mgmt_rdata_i[8]_i_5_n_0\,
      I4 => \s_axi_ctrl_mgmt_rdata_i[8]_i_6_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[8]_i_1_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[8]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => test_cntr1_kernel(40),
      I1 => \s_axi_ctrl_mgmt_rdata_i[22]_i_3_n_0\,
      I2 => test_cntr1_kernel(8),
      I3 => \s_axi_ctrl_mgmt_rdata_i[31]_i_8_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[8]_i_2_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[8]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0A0C0000"
    )
        port map (
      I0 => cdc_freq_cntr_aclk_n_88,
      I1 => test_cntr0_aclk(8),
      I2 => s_axi_ctrl_mgmt_araddr(15),
      I3 => s_axi_ctrl_mgmt_araddr(2),
      I4 => s_axi_ctrl_mgmt_araddr(4),
      O => \s_axi_ctrl_mgmt_rdata_i[8]_i_3_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[8]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF002000200020"
    )
        port map (
      I0 => ref_cntr_aclk(8),
      I1 => s_axi_ctrl_mgmt_araddr(15),
      I2 => s_axi_ctrl_mgmt_araddr(2),
      I3 => s_axi_ctrl_mgmt_araddr(4),
      I4 => \Request_SW_reg_n_0_[4]\,
      I5 => \s_axi_ctrl_mgmt_rdata_i[15]_i_7_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[8]_i_4_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[8]_i_5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => ref_cntr_kernel(40),
      I1 => \s_axi_ctrl_mgmt_rdata_i[31]_i_7_n_0\,
      I2 => ref_cntr_kernel(8),
      I3 => \s_axi_ctrl_mgmt_rdata_i[31]_i_11_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[8]_i_5_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[8]_i_6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F888F888F8880000"
    )
        port map (
      I0 => test_cntr0_kernel(40),
      I1 => \s_axi_ctrl_mgmt_rdata_i[22]_i_4_n_0\,
      I2 => test_cntr0_kernel(8),
      I3 => \s_axi_ctrl_mgmt_rdata_i[21]_i_4_n_0\,
      I4 => s_axi_ctrl_mgmt_araddr(4),
      I5 => s_axi_ctrl_mgmt_araddr(3),
      O => \s_axi_ctrl_mgmt_rdata_i[8]_i_6_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[9]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFFFE"
    )
        port map (
      I0 => \s_axi_ctrl_mgmt_rdata_i[9]_i_2_n_0\,
      I1 => \s_axi_ctrl_mgmt_rdata_i[9]_i_3_n_0\,
      I2 => \s_axi_ctrl_mgmt_rdata_i[9]_i_4_n_0\,
      I3 => \s_axi_ctrl_mgmt_rdata_i[9]_i_5_n_0\,
      I4 => \s_axi_ctrl_mgmt_rdata_i[9]_i_6_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[9]_i_1_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[9]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => test_cntr1_kernel(41),
      I1 => \s_axi_ctrl_mgmt_rdata_i[22]_i_3_n_0\,
      I2 => test_cntr1_kernel(9),
      I3 => \s_axi_ctrl_mgmt_rdata_i[31]_i_8_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[9]_i_2_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[9]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0A0C0000"
    )
        port map (
      I0 => cdc_freq_cntr_aclk_n_87,
      I1 => test_cntr0_aclk(9),
      I2 => s_axi_ctrl_mgmt_araddr(15),
      I3 => s_axi_ctrl_mgmt_araddr(2),
      I4 => s_axi_ctrl_mgmt_araddr(4),
      O => \s_axi_ctrl_mgmt_rdata_i[9]_i_3_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[9]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF002000200020"
    )
        port map (
      I0 => ref_cntr_aclk(9),
      I1 => s_axi_ctrl_mgmt_araddr(15),
      I2 => s_axi_ctrl_mgmt_araddr(2),
      I3 => s_axi_ctrl_mgmt_araddr(4),
      I4 => \Request_SW_reg_n_0_[5]\,
      I5 => \s_axi_ctrl_mgmt_rdata_i[15]_i_7_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[9]_i_4_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[9]_i_5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => ref_cntr_kernel(41),
      I1 => \s_axi_ctrl_mgmt_rdata_i[31]_i_7_n_0\,
      I2 => ref_cntr_kernel(9),
      I3 => \s_axi_ctrl_mgmt_rdata_i[31]_i_11_n_0\,
      O => \s_axi_ctrl_mgmt_rdata_i[9]_i_5_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i[9]_i_6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F888F888F8880000"
    )
        port map (
      I0 => test_cntr0_kernel(41),
      I1 => \s_axi_ctrl_mgmt_rdata_i[22]_i_4_n_0\,
      I2 => test_cntr0_kernel(9),
      I3 => \s_axi_ctrl_mgmt_rdata_i[21]_i_4_n_0\,
      I4 => s_axi_ctrl_mgmt_araddr(4),
      I5 => s_axi_ctrl_mgmt_araddr(3),
      O => \s_axi_ctrl_mgmt_rdata_i[9]_i_6_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => aclk_ctrl,
      CE => \s_axi_ctrl_mgmt_rdata_i[31]_i_2_n_0\,
      D => clock_shutdown_latch_n_4,
      Q => s_axi_ctrl_mgmt_rdata(0),
      R => \s_axi_ctrl_mgmt_rdata_i[31]_i_1_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => aclk_ctrl,
      CE => \s_axi_ctrl_mgmt_rdata_i[31]_i_2_n_0\,
      D => \s_axi_ctrl_mgmt_rdata_i[10]_i_1_n_0\,
      Q => s_axi_ctrl_mgmt_rdata(10),
      R => \s_axi_ctrl_mgmt_rdata_i[31]_i_1_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => aclk_ctrl,
      CE => \s_axi_ctrl_mgmt_rdata_i[31]_i_2_n_0\,
      D => \s_axi_ctrl_mgmt_rdata_i[11]_i_1_n_0\,
      Q => s_axi_ctrl_mgmt_rdata(11),
      R => \s_axi_ctrl_mgmt_rdata_i[31]_i_1_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => aclk_ctrl,
      CE => \s_axi_ctrl_mgmt_rdata_i[31]_i_2_n_0\,
      D => \s_axi_ctrl_mgmt_rdata_i[12]_i_1_n_0\,
      Q => s_axi_ctrl_mgmt_rdata(12),
      R => \s_axi_ctrl_mgmt_rdata_i[31]_i_1_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => aclk_ctrl,
      CE => \s_axi_ctrl_mgmt_rdata_i[31]_i_2_n_0\,
      D => \s_axi_ctrl_mgmt_rdata_i[13]_i_1_n_0\,
      Q => s_axi_ctrl_mgmt_rdata(13),
      R => \s_axi_ctrl_mgmt_rdata_i[31]_i_1_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => aclk_ctrl,
      CE => \s_axi_ctrl_mgmt_rdata_i[31]_i_2_n_0\,
      D => \s_axi_ctrl_mgmt_rdata_i[14]_i_1_n_0\,
      Q => s_axi_ctrl_mgmt_rdata(14),
      R => \s_axi_ctrl_mgmt_rdata_i[31]_i_1_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => aclk_ctrl,
      CE => \s_axi_ctrl_mgmt_rdata_i[31]_i_2_n_0\,
      D => \s_axi_ctrl_mgmt_rdata_i[15]_i_1_n_0\,
      Q => s_axi_ctrl_mgmt_rdata(15),
      R => \s_axi_ctrl_mgmt_rdata_i[31]_i_1_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => aclk_ctrl,
      CE => \s_axi_ctrl_mgmt_rdata_i[31]_i_2_n_0\,
      D => clock_throttling_avg_n_2,
      Q => s_axi_ctrl_mgmt_rdata(16),
      R => \s_axi_ctrl_mgmt_rdata_i[31]_i_1_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => aclk_ctrl,
      CE => \s_axi_ctrl_mgmt_rdata_i[31]_i_2_n_0\,
      D => clock_throttling_avg_n_3,
      Q => s_axi_ctrl_mgmt_rdata(17),
      R => \s_axi_ctrl_mgmt_rdata_i[31]_i_1_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => aclk_ctrl,
      CE => \s_axi_ctrl_mgmt_rdata_i[31]_i_2_n_0\,
      D => clock_throttling_avg_n_4,
      Q => s_axi_ctrl_mgmt_rdata(18),
      R => \s_axi_ctrl_mgmt_rdata_i[31]_i_1_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => aclk_ctrl,
      CE => \s_axi_ctrl_mgmt_rdata_i[31]_i_2_n_0\,
      D => clock_throttling_avg_n_5,
      Q => s_axi_ctrl_mgmt_rdata(19),
      R => \s_axi_ctrl_mgmt_rdata_i[31]_i_1_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => aclk_ctrl,
      CE => \s_axi_ctrl_mgmt_rdata_i[31]_i_2_n_0\,
      D => \s_axi_ctrl_mgmt_rdata_i[1]_i_1_n_0\,
      Q => s_axi_ctrl_mgmt_rdata(1),
      R => \s_axi_ctrl_mgmt_rdata_i[31]_i_1_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => aclk_ctrl,
      CE => \s_axi_ctrl_mgmt_rdata_i[31]_i_2_n_0\,
      D => clock_throttling_avg_n_6,
      Q => s_axi_ctrl_mgmt_rdata(20),
      R => \s_axi_ctrl_mgmt_rdata_i[31]_i_1_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => aclk_ctrl,
      CE => \s_axi_ctrl_mgmt_rdata_i[31]_i_2_n_0\,
      D => clock_throttling_avg_n_1,
      Q => s_axi_ctrl_mgmt_rdata(21),
      R => '0'
    );
\s_axi_ctrl_mgmt_rdata_i_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => aclk_ctrl,
      CE => \s_axi_ctrl_mgmt_rdata_i[31]_i_2_n_0\,
      D => clock_throttling_avg_n_0,
      Q => s_axi_ctrl_mgmt_rdata(22),
      R => '0'
    );
\s_axi_ctrl_mgmt_rdata_i_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => aclk_ctrl,
      CE => \s_axi_ctrl_mgmt_rdata_i[31]_i_2_n_0\,
      D => clock_throttling_avg_n_7,
      Q => s_axi_ctrl_mgmt_rdata(23),
      R => \s_axi_ctrl_mgmt_rdata_i[31]_i_1_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => aclk_ctrl,
      CE => \s_axi_ctrl_mgmt_rdata_i[31]_i_2_n_0\,
      D => clock_throttling_avg_n_8,
      Q => s_axi_ctrl_mgmt_rdata(24),
      R => \s_axi_ctrl_mgmt_rdata_i[31]_i_1_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => aclk_ctrl,
      CE => \s_axi_ctrl_mgmt_rdata_i[31]_i_2_n_0\,
      D => clock_throttling_avg_n_9,
      Q => s_axi_ctrl_mgmt_rdata(25),
      R => \s_axi_ctrl_mgmt_rdata_i[31]_i_1_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => aclk_ctrl,
      CE => \s_axi_ctrl_mgmt_rdata_i[31]_i_2_n_0\,
      D => clock_throttling_avg_n_10,
      Q => s_axi_ctrl_mgmt_rdata(26),
      R => \s_axi_ctrl_mgmt_rdata_i[31]_i_1_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => aclk_ctrl,
      CE => \s_axi_ctrl_mgmt_rdata_i[31]_i_2_n_0\,
      D => clock_throttling_avg_n_11,
      Q => s_axi_ctrl_mgmt_rdata(27),
      R => \s_axi_ctrl_mgmt_rdata_i[31]_i_1_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => aclk_ctrl,
      CE => \s_axi_ctrl_mgmt_rdata_i[31]_i_2_n_0\,
      D => clock_throttling_avg_n_12,
      Q => s_axi_ctrl_mgmt_rdata(28),
      R => \s_axi_ctrl_mgmt_rdata_i[31]_i_1_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => aclk_ctrl,
      CE => \s_axi_ctrl_mgmt_rdata_i[31]_i_2_n_0\,
      D => clock_throttling_avg_n_13,
      Q => s_axi_ctrl_mgmt_rdata(29),
      R => \s_axi_ctrl_mgmt_rdata_i[31]_i_1_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => aclk_ctrl,
      CE => \s_axi_ctrl_mgmt_rdata_i[31]_i_2_n_0\,
      D => \s_axi_ctrl_mgmt_rdata_i[2]_i_1_n_0\,
      Q => s_axi_ctrl_mgmt_rdata(2),
      R => \s_axi_ctrl_mgmt_rdata_i[31]_i_1_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => aclk_ctrl,
      CE => \s_axi_ctrl_mgmt_rdata_i[31]_i_2_n_0\,
      D => \s_axi_ctrl_mgmt_rdata_i[30]_i_1_n_0\,
      Q => s_axi_ctrl_mgmt_rdata(30),
      R => \s_axi_ctrl_mgmt_rdata_i[31]_i_1_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => aclk_ctrl,
      CE => \s_axi_ctrl_mgmt_rdata_i[31]_i_2_n_0\,
      D => \s_axi_ctrl_mgmt_rdata_i[31]_i_3_n_0\,
      Q => s_axi_ctrl_mgmt_rdata(31),
      R => \s_axi_ctrl_mgmt_rdata_i[31]_i_1_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => aclk_ctrl,
      CE => \s_axi_ctrl_mgmt_rdata_i[31]_i_2_n_0\,
      D => \s_axi_ctrl_mgmt_rdata_i[3]_i_1_n_0\,
      Q => s_axi_ctrl_mgmt_rdata(3),
      R => \s_axi_ctrl_mgmt_rdata_i[31]_i_1_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => aclk_ctrl,
      CE => \s_axi_ctrl_mgmt_rdata_i[31]_i_2_n_0\,
      D => \s_axi_ctrl_mgmt_rdata_i[4]_i_1_n_0\,
      Q => s_axi_ctrl_mgmt_rdata(4),
      R => \s_axi_ctrl_mgmt_rdata_i[31]_i_1_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => aclk_ctrl,
      CE => \s_axi_ctrl_mgmt_rdata_i[31]_i_2_n_0\,
      D => \s_axi_ctrl_mgmt_rdata_i[5]_i_1_n_0\,
      Q => s_axi_ctrl_mgmt_rdata(5),
      R => \s_axi_ctrl_mgmt_rdata_i[31]_i_1_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => aclk_ctrl,
      CE => \s_axi_ctrl_mgmt_rdata_i[31]_i_2_n_0\,
      D => \s_axi_ctrl_mgmt_rdata_i[6]_i_1_n_0\,
      Q => s_axi_ctrl_mgmt_rdata(6),
      R => \s_axi_ctrl_mgmt_rdata_i[31]_i_1_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => aclk_ctrl,
      CE => \s_axi_ctrl_mgmt_rdata_i[31]_i_2_n_0\,
      D => \s_axi_ctrl_mgmt_rdata_i[7]_i_1_n_0\,
      Q => s_axi_ctrl_mgmt_rdata(7),
      R => \s_axi_ctrl_mgmt_rdata_i[31]_i_1_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => aclk_ctrl,
      CE => \s_axi_ctrl_mgmt_rdata_i[31]_i_2_n_0\,
      D => \s_axi_ctrl_mgmt_rdata_i[8]_i_1_n_0\,
      Q => s_axi_ctrl_mgmt_rdata(8),
      R => \s_axi_ctrl_mgmt_rdata_i[31]_i_1_n_0\
    );
\s_axi_ctrl_mgmt_rdata_i_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => aclk_ctrl,
      CE => \s_axi_ctrl_mgmt_rdata_i[31]_i_2_n_0\,
      D => \s_axi_ctrl_mgmt_rdata_i[9]_i_1_n_0\,
      Q => s_axi_ctrl_mgmt_rdata(9),
      R => \s_axi_ctrl_mgmt_rdata_i[31]_i_1_n_0\
    );
s_axi_ctrl_mgmt_rvalid_i_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7444"
    )
        port map (
      I0 => s_axi_ctrl_mgmt_rready,
      I1 => \^s_axi_ctrl_mgmt_rvalid\,
      I2 => s_axi_ctrl_mgmt_arvalid,
      I3 => \^s_axi_ctrl_mgmt_arready\,
      O => s_axi_ctrl_mgmt_rvalid_i_i_1_n_0
    );
s_axi_ctrl_mgmt_rvalid_i_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => s_axi_ctrl_mgmt_rvalid_i_i_1_n_0,
      Q => \^s_axi_ctrl_mgmt_rvalid\,
      R => clear
    );
startup_done_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => Request_SW,
      D => s_axi_ctrl_mgmt_wdata(0),
      Q => p_4_in(0),
      R => clear
    );
throttling_enabled_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => request_ack,
      D => s_axi_ctrl_mgmt_wdata(20),
      Q => p_6_in(20),
      R => clear
    );
user_rst_aclk_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFF000FE00F000"
    )
        port map (
      I0 => \user_rst_kernel[1]_i_7_n_0\,
      I1 => \user_rst_kernel[1]_i_3_n_0\,
      I2 => s_axi_ctrl_mgmt_wdata(0),
      I3 => user_rst_aclk_i_2_n_0,
      I4 => p_0_in0,
      I5 => p_3_in(0),
      O => user_rst_aclk_i_1_n_0
    );
user_rst_aclk_i_2: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \user_rst_kernel[1]_i_5_n_0\,
      I1 => \Request_SW[15]_i_4_n_0\,
      O => user_rst_aclk_i_2_n_0
    );
user_rst_aclk_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => '1',
      D => user_rst_aclk_i_1_n_0,
      Q => p_3_in(0),
      R => clear
    );
\user_rst_d[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"55550100FFFFFFFF"
    )
        port map (
      I0 => \Request_SW[15]_i_4_n_0\,
      I1 => request_ack_i_2_n_0,
      I2 => s_axi_ctrl_mgmt_awaddr(12),
      I3 => \user_rst_d[4]_i_3_n_0\,
      I4 => \user_rst_kernel[1]_i_3_n_0\,
      I5 => \user_rst_d_reg_n_0_[0]\,
      O => p_0_in(0)
    );
\user_rst_d[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9F9F9F9F9F999999"
    )
        port map (
      I0 => \user_rst_d_reg_n_0_[0]\,
      I1 => \user_rst_d_reg_n_0_[1]\,
      I2 => \Request_SW[15]_i_4_n_0\,
      I3 => \user_rst_d[4]_i_5_n_0\,
      I4 => \user_rst_d[4]_i_3_n_0\,
      I5 => \user_rst_kernel[1]_i_3_n_0\,
      O => p_0_in(1)
    );
\user_rst_d[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9F9F9F9F9F999999"
    )
        port map (
      I0 => \user_rst_d[2]_i_2_n_0\,
      I1 => \user_rst_d_reg_n_0_[2]\,
      I2 => \Request_SW[15]_i_4_n_0\,
      I3 => \user_rst_d[4]_i_5_n_0\,
      I4 => \user_rst_d[4]_i_3_n_0\,
      I5 => \user_rst_kernel[1]_i_3_n_0\,
      O => p_0_in(2)
    );
\user_rst_d[2]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \user_rst_d_reg_n_0_[0]\,
      I1 => \user_rst_d_reg_n_0_[1]\,
      O => \user_rst_d[2]_i_2_n_0\
    );
\user_rst_d[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9F9F9F9F9F999999"
    )
        port map (
      I0 => \user_rst_d[3]_i_2_n_0\,
      I1 => p_0_in0,
      I2 => \Request_SW[15]_i_4_n_0\,
      I3 => \user_rst_d[4]_i_5_n_0\,
      I4 => \user_rst_d[4]_i_3_n_0\,
      I5 => \user_rst_kernel[1]_i_3_n_0\,
      O => p_0_in(3)
    );
\user_rst_d[3]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => \user_rst_d_reg_n_0_[1]\,
      I1 => \user_rst_d_reg_n_0_[0]\,
      I2 => \user_rst_d_reg_n_0_[2]\,
      O => \user_rst_d[3]_i_2_n_0\
    );
\user_rst_d[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBBAAABAAAA"
    )
        port map (
      I0 => s_axi_ctrl_mgmt_arready_i_i_3_n_0,
      I1 => \Request_SW[15]_i_4_n_0\,
      I2 => request_ack_i_2_n_0,
      I3 => s_axi_ctrl_mgmt_awaddr(12),
      I4 => \user_rst_d[4]_i_3_n_0\,
      I5 => \user_rst_kernel[1]_i_3_n_0\,
      O => \user_rst_d[4]_i_1_n_0\
    );
\user_rst_d[4]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9F9F9F9F9F999999"
    )
        port map (
      I0 => \user_rst_d[4]_i_4_n_0\,
      I1 => \user_rst_d_reg_n_0_[4]\,
      I2 => \Request_SW[15]_i_4_n_0\,
      I3 => \user_rst_d[4]_i_5_n_0\,
      I4 => \user_rst_d[4]_i_3_n_0\,
      I5 => \user_rst_kernel[1]_i_3_n_0\,
      O => p_0_in(4)
    );
\user_rst_d[4]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0004"
    )
        port map (
      I0 => s_axi_ctrl_mgmt_awaddr(14),
      I1 => s_axi_ctrl_mgmt_awaddr(13),
      I2 => s_axi_ctrl_mgmt_awaddr(10),
      I3 => s_axi_ctrl_mgmt_awaddr(11),
      O => \user_rst_d[4]_i_3_n_0\
    );
\user_rst_d[4]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => \user_rst_d_reg_n_0_[2]\,
      I1 => \user_rst_d_reg_n_0_[0]\,
      I2 => \user_rst_d_reg_n_0_[1]\,
      I3 => p_0_in0,
      O => \user_rst_d[4]_i_4_n_0\
    );
\user_rst_d[4]_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000001"
    )
        port map (
      I0 => s_axi_ctrl_mgmt_awaddr(3),
      I1 => \Request_SW[15]_i_2_n_0\,
      I2 => s_axi_ctrl_mgmt_awaddr(2),
      I3 => s_axi_ctrl_mgmt_awaddr(9),
      I4 => s_axi_ctrl_mgmt_awaddr(8),
      I5 => s_axi_ctrl_mgmt_awaddr(12),
      O => \user_rst_d[4]_i_5_n_0\
    );
\user_rst_d_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \user_rst_d[4]_i_1_n_0\,
      D => p_0_in(0),
      Q => \user_rst_d_reg_n_0_[0]\,
      R => clear
    );
\user_rst_d_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \user_rst_d[4]_i_1_n_0\,
      D => p_0_in(1),
      Q => \user_rst_d_reg_n_0_[1]\,
      R => clear
    );
\user_rst_d_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \user_rst_d[4]_i_1_n_0\,
      D => p_0_in(2),
      Q => \user_rst_d_reg_n_0_[2]\,
      R => clear
    );
\user_rst_d_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \user_rst_d[4]_i_1_n_0\,
      D => p_0_in(3),
      Q => p_0_in0,
      R => clear
    );
\user_rst_d_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \user_rst_d[4]_i_1_n_0\,
      D => p_0_in(4),
      Q => \user_rst_d_reg_n_0_[4]\,
      R => clear
    );
\user_rst_kernel[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0F0F4F4F0F0F4E4"
    )
        port map (
      I0 => \Request_SW[15]_i_4_n_0\,
      I1 => \user_rst_kernel[0]_i_2_n_0\,
      I2 => p_0_in0,
      I3 => \user_rst_kernel[1]_i_5_n_0\,
      I4 => \user_rst_kernel[1]_i_6_n_0\,
      I5 => \user_rst_kernel[1]_i_7_n_0\,
      O => \user_rst_kernel[0]_i_1_n_0\
    );
\user_rst_kernel[0]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0004"
    )
        port map (
      I0 => s_axi_ctrl_mgmt_awaddr(12),
      I1 => s_axi_ctrl_mgmt_wdata(0),
      I2 => s_axi_ctrl_mgmt_awaddr(14),
      I3 => s_axi_ctrl_mgmt_awaddr(13),
      O => \user_rst_kernel[0]_i_2_n_0\
    );
\user_rst_kernel[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"01050000FFFFFFFF"
    )
        port map (
      I0 => \Request_SW[15]_i_4_n_0\,
      I1 => s_axi_ctrl_mgmt_awaddr(13),
      I2 => s_axi_ctrl_mgmt_awaddr(14),
      I3 => s_axi_ctrl_mgmt_awaddr(12),
      I4 => \user_rst_kernel[1]_i_3_n_0\,
      I5 => p_0_in0,
      O => \user_rst_kernel[1]_i_1_n_0\
    );
\user_rst_kernel[1]_i_10\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => s_axi_ctrl_mgmt_awaddr(11),
      I1 => s_axi_ctrl_mgmt_awaddr(10),
      O => \user_rst_kernel[1]_i_10_n_0\
    );
\user_rst_kernel[1]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0F0F4F4F0F0F4E4"
    )
        port map (
      I0 => \Request_SW[15]_i_4_n_0\,
      I1 => \user_rst_kernel[1]_i_4_n_0\,
      I2 => p_0_in0,
      I3 => \user_rst_kernel[1]_i_5_n_0\,
      I4 => \user_rst_kernel[1]_i_6_n_0\,
      I5 => \user_rst_kernel[1]_i_7_n_0\,
      O => \user_rst_kernel[1]_i_2_n_0\
    );
\user_rst_kernel[1]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000002"
    )
        port map (
      I0 => s_axi_ctrl_mgmt_awaddr(15),
      I1 => s_axi_ctrl_mgmt_awaddr(11),
      I2 => s_axi_ctrl_mgmt_awaddr(10),
      I3 => s_axi_ctrl_mgmt_awaddr(3),
      I4 => \Request_SW[15]_i_2_n_0\,
      I5 => \Request_SW[15]_i_3_n_0\,
      O => \user_rst_kernel[1]_i_3_n_0\
    );
\user_rst_kernel[1]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0008"
    )
        port map (
      I0 => s_axi_ctrl_mgmt_awaddr(12),
      I1 => s_axi_ctrl_mgmt_wdata(0),
      I2 => s_axi_ctrl_mgmt_awaddr(14),
      I3 => s_axi_ctrl_mgmt_awaddr(13),
      O => \user_rst_kernel[1]_i_4_n_0\
    );
\user_rst_kernel[1]_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000002"
    )
        port map (
      I0 => \user_rst_kernel[1]_i_8_n_0\,
      I1 => s_axi_ctrl_mgmt_awaddr(3),
      I2 => \Request_SW[15]_i_2_n_0\,
      I3 => s_axi_ctrl_mgmt_awaddr(2),
      I4 => s_axi_ctrl_mgmt_awaddr(9),
      I5 => s_axi_ctrl_mgmt_awaddr(8),
      O => \user_rst_kernel[1]_i_5_n_0\
    );
\user_rst_kernel[1]_i_6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFDFFFFFFFFFFFF"
    )
        port map (
      I0 => \user_rst_kernel[1]_i_9_n_0\,
      I1 => \Request_SW[15]_i_3_n_0\,
      I2 => \Request_SW[15]_i_2_n_0\,
      I3 => s_axi_ctrl_mgmt_awaddr(3),
      I4 => \user_rst_kernel[1]_i_10_n_0\,
      I5 => s_axi_ctrl_mgmt_awaddr(15),
      O => \user_rst_kernel[1]_i_6_n_0\
    );
\user_rst_kernel[1]_i_7\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"10010000"
    )
        port map (
      I0 => \Request_SW[15]_i_2_n_0\,
      I1 => \Request_SW[15]_i_3_n_0\,
      I2 => s_axi_ctrl_mgmt_awaddr(12),
      I3 => s_axi_ctrl_mgmt_awaddr(3),
      I4 => \Request_SW[15]_i_5_n_0\,
      O => \user_rst_kernel[1]_i_7_n_0\
    );
\user_rst_kernel[1]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000004"
    )
        port map (
      I0 => s_axi_ctrl_mgmt_awaddr(12),
      I1 => s_axi_ctrl_mgmt_awaddr(13),
      I2 => s_axi_ctrl_mgmt_awaddr(14),
      I3 => s_axi_ctrl_mgmt_awaddr(15),
      I4 => s_axi_ctrl_mgmt_awaddr(11),
      I5 => s_axi_ctrl_mgmt_awaddr(10),
      O => \user_rst_kernel[1]_i_8_n_0\
    );
\user_rst_kernel[1]_i_9\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"13"
    )
        port map (
      I0 => s_axi_ctrl_mgmt_awaddr(12),
      I1 => s_axi_ctrl_mgmt_awaddr(14),
      I2 => s_axi_ctrl_mgmt_awaddr(13),
      O => \user_rst_kernel[1]_i_9_n_0\
    );
\user_rst_kernel_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \user_rst_kernel[1]_i_1_n_0\,
      D => \user_rst_kernel[0]_i_1_n_0\,
      Q => \user_rst_kernel_reg_n_0_[0]\,
      R => clear
    );
\user_rst_kernel_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => aclk_ctrl,
      CE => \user_rst_kernel[1]_i_1_n_0\,
      D => \user_rst_kernel[1]_i_2_n_0\,
      Q => \user_rst_kernel_reg_n_0_[1]\,
      R => clear
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix is
  port (
    aclk_ctrl : in STD_LOGIC;
    aclk_freerun : in STD_LOGIC;
    aclk_pcie : in STD_LOGIC;
    aresetn_ctrl : in STD_LOGIC;
    aclk_kernel_00 : out STD_LOGIC;
    aclk_kernel_01 : out STD_LOGIC;
    aclk_kernel_cont_00 : out STD_LOGIC;
    aclk_kernel_cont_01 : out STD_LOGIC;
    aclk_ext_tog_kernel_00 : out STD_LOGIC;
    aclk_ext_tog_kernel_01 : out STD_LOGIC;
    clk_in_kernel_00 : in STD_LOGIC;
    clk_in_kernel_01 : in STD_LOGIC;
    clk_kernel_00_locked : in STD_LOGIC;
    clk_kernel_01_locked : in STD_LOGIC;
    ext_tog_ctrl_kernel_00_enable : in STD_LOGIC;
    ext_tog_ctrl_kernel_01_enable : in STD_LOGIC;
    ext_tog_ctrl_kernel_00_in : in STD_LOGIC;
    ext_tog_ctrl_kernel_01_in : in STD_LOGIC;
    ext_tog_ctrl_kernel_00_out : out STD_LOGIC;
    ext_tog_ctrl_kernel_01_out : out STD_LOGIC;
    rst_async_kernel_00 : out STD_LOGIC;
    rst_async_kernel_01 : out STD_LOGIC;
    power_down : out STD_LOGIC;
    shutdown_clocks : in STD_LOGIC;
    s_axi_ctrl_mgmt_araddr : in STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_ctrl_mgmt_arready : out STD_LOGIC;
    s_axi_ctrl_mgmt_arvalid : in STD_LOGIC;
    s_axi_ctrl_mgmt_awaddr : in STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_ctrl_mgmt_awready : out STD_LOGIC;
    s_axi_ctrl_mgmt_awvalid : in STD_LOGIC;
    s_axi_ctrl_mgmt_bready : in STD_LOGIC;
    s_axi_ctrl_mgmt_bresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_ctrl_mgmt_bvalid : out STD_LOGIC;
    s_axi_ctrl_mgmt_rdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_ctrl_mgmt_rready : in STD_LOGIC;
    s_axi_ctrl_mgmt_rresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_ctrl_mgmt_rvalid : out STD_LOGIC;
    s_axi_ctrl_mgmt_wdata : in STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_ctrl_mgmt_wready : out STD_LOGIC;
    s_axi_ctrl_mgmt_wstrb : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_ctrl_mgmt_wvalid : in STD_LOGIC
  );
  attribute NotValidForBitStream : boolean;
  attribute NotValidForBitStream of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix : entity is true;
  attribute CHECK_LICENSE_TYPE : string;
  attribute CHECK_LICENSE_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix : entity is "top_shell_utils_ucc_0,shell_utils_ucc_v1_0_0_top,{}";
  attribute DowngradeIPIdentifiedWarnings : string;
  attribute DowngradeIPIdentifiedWarnings of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix : entity is "yes";
  attribute X_CORE_INFO : string;
  attribute X_CORE_INFO of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix : entity is "shell_utils_ucc_v1_0_0_top,Vivado 2022.2";
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix is
  signal \<const0>\ : STD_LOGIC;
  signal NLW_inst_aclk_ext_tog_kernel_02_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_aclk_ext_tog_kernel_03_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_aclk_ext_tog_kernel_04_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_aclk_ext_tog_kernel_05_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_aclk_kernel_02_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_aclk_kernel_03_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_aclk_kernel_04_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_aclk_kernel_05_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_aclk_kernel_cont_02_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_aclk_kernel_cont_03_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_aclk_kernel_cont_04_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_aclk_kernel_cont_05_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_ext_tog_ctrl_kernel_02_out_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_ext_tog_ctrl_kernel_03_out_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_ext_tog_ctrl_kernel_04_out_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_ext_tog_ctrl_kernel_05_out_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_rst_async_kernel_02_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_rst_async_kernel_03_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_rst_async_kernel_04_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_rst_async_kernel_05_UNCONNECTED : STD_LOGIC;
  signal NLW_inst_s_axi_ctrl_mgmt_bresp_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_inst_s_axi_ctrl_mgmt_rresp_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute C_EXT_TOG_ENABLE : integer;
  attribute C_EXT_TOG_ENABLE of inst : label is 1;
  attribute C_FREQ_CNT_REF_CLK_HZ : integer;
  attribute C_FREQ_CNT_REF_CLK_HZ of inst : label is 33333;
  attribute C_NUM_CLOCKS : integer;
  attribute C_NUM_CLOCKS of inst : label is 2;
  attribute X_INTERFACE_INFO : string;
  attribute X_INTERFACE_INFO of aclk_ctrl : signal is "xilinx.com:signal:clock:1.0 CLK_CTRL CLK";
  attribute X_INTERFACE_PARAMETER : string;
  attribute X_INTERFACE_PARAMETER of aclk_ctrl : signal is "XIL_INTERFACENAME CLK_CTRL, ASSOCIATED_BUSIF S_AXI_CTRL_MGMT, ASSOCIATED_RESET aresetn_ctrl, FREQ_HZ 99999992, FREQ_TOLERANCE_HZ 0, PHASE 0.0, CLK_DOMAIN bd_4885_pspmc_0_0_pl0_ref_clk, INSERT_VIP 0";
  attribute X_INTERFACE_INFO of aclk_ext_tog_kernel_00 : signal is "xilinx.com:signal:clock:1.0 CLK_EXT_TOG_KERNEL_00 CLK";
  attribute X_INTERFACE_PARAMETER of aclk_ext_tog_kernel_00 : signal is "XIL_INTERFACENAME CLK_EXT_TOG_KERNEL_00, CLK_DOMAIN cd_aclk_ext_tog_kernel_00, FREQ_HZ 299996999, FREQ_TOLERANCE_HZ 0, PHASE 0.0, INSERT_VIP 0";
  attribute X_INTERFACE_INFO of aclk_ext_tog_kernel_01 : signal is "xilinx.com:signal:clock:1.0 CLK_EXT_TOG_KERNEL_01 CLK";
  attribute X_INTERFACE_PARAMETER of aclk_ext_tog_kernel_01 : signal is "XIL_INTERFACENAME CLK_EXT_TOG_KERNEL_01, CLK_DOMAIN cd_aclk_ext_tog_kernel_01, FREQ_HZ 499994999, FREQ_TOLERANCE_HZ 0, PHASE 0.0, INSERT_VIP 0";
  attribute X_INTERFACE_INFO of aclk_freerun : signal is "xilinx.com:signal:clock:1.0 CLK_FREE CLK";
  attribute X_INTERFACE_PARAMETER of aclk_freerun : signal is "XIL_INTERFACENAME CLK_FREE, FREQ_HZ 33333332, FREQ_TOLERANCE_HZ 0, PHASE 0.0, CLK_DOMAIN bd_4885_pspmc_0_0_pl1_ref_clk, INSERT_VIP 0";
  attribute X_INTERFACE_INFO of aclk_kernel_00 : signal is "xilinx.com:signal:clock:1.0 CLK_KERNEL_00 CLK";
  attribute X_INTERFACE_PARAMETER of aclk_kernel_00 : signal is "XIL_INTERFACENAME CLK_KERNEL_00, CLK_DOMAIN cd_aclk_kernel_00, FREQ_HZ 299996999, FREQ_TOLERANCE_HZ 0, PHASE 0.0, INSERT_VIP 0";
  attribute X_INTERFACE_INFO of aclk_kernel_01 : signal is "xilinx.com:signal:clock:1.0 CLK_KERNEL_01 CLK";
  attribute X_INTERFACE_PARAMETER of aclk_kernel_01 : signal is "XIL_INTERFACENAME CLK_KERNEL_01, CLK_DOMAIN cd_aclk_kernel_01, FREQ_HZ 499994999, FREQ_TOLERANCE_HZ 0, PHASE 0.0, INSERT_VIP 0";
  attribute X_INTERFACE_INFO of aclk_kernel_cont_00 : signal is "xilinx.com:signal:clock:1.0 CLK_KERNEL_CONT_00 CLK";
  attribute X_INTERFACE_PARAMETER of aclk_kernel_cont_00 : signal is "XIL_INTERFACENAME CLK_KERNEL_CONT_00, CLK_DOMAIN cd_aclk_kernel_00, FREQ_HZ 299996999, FREQ_TOLERANCE_HZ 0, PHASE 0.0, INSERT_VIP 0";
  attribute X_INTERFACE_INFO of aclk_kernel_cont_01 : signal is "xilinx.com:signal:clock:1.0 CLK_KERNEL_CONT_01 CLK";
  attribute X_INTERFACE_PARAMETER of aclk_kernel_cont_01 : signal is "XIL_INTERFACENAME CLK_KERNEL_CONT_01, CLK_DOMAIN cd_aclk_kernel_01, FREQ_HZ 499994999, FREQ_TOLERANCE_HZ 0, PHASE 0.0, INSERT_VIP 0";
  attribute X_INTERFACE_INFO of aclk_pcie : signal is "xilinx.com:signal:clock:1.0 CLK_PCIE CLK";
  attribute X_INTERFACE_PARAMETER of aclk_pcie : signal is "XIL_INTERFACENAME CLK_PCIE, FREQ_HZ 249999985, FREQ_TOLERANCE_HZ 0, PHASE 0.0, CLK_DOMAIN bd_4885_pspmc_0_0_pl2_ref_clk, INSERT_VIP 0";
  attribute X_INTERFACE_INFO of aresetn_ctrl : signal is "xilinx.com:signal:reset:1.0 RST_CTRL RST";
  attribute X_INTERFACE_PARAMETER of aresetn_ctrl : signal is "XIL_INTERFACENAME RST_CTRL, POLARITY ACTIVE_LOW, INSERT_VIP 0";
  attribute X_INTERFACE_INFO of clk_in_kernel_00 : signal is "xilinx.com:signal:clock:1.0 CLK_IN_00 CLK";
  attribute X_INTERFACE_PARAMETER of clk_in_kernel_00 : signal is "XIL_INTERFACENAME CLK_IN_00, FREQ_HZ 299996999, FREQ_TOLERANCE_HZ 0, PHASE 0.0, CLK_DOMAIN top_clkwiz_aclk_kernel_00_0_clk_out1, INSERT_VIP 0";
  attribute X_INTERFACE_INFO of clk_in_kernel_01 : signal is "xilinx.com:signal:clock:1.0 CLK_IN_01 CLK";
  attribute X_INTERFACE_PARAMETER of clk_in_kernel_01 : signal is "XIL_INTERFACENAME CLK_IN_01, FREQ_HZ 499994999, FREQ_TOLERANCE_HZ 0, PHASE 0.0, CLK_DOMAIN top_clkwiz_aclk_kernel_01_0_clk_out1, INSERT_VIP 0";
  attribute X_INTERFACE_INFO of rst_async_kernel_00 : signal is "xilinx.com:signal:reset:1.0 RST_ASYNC_KERNEL_00 RST";
  attribute X_INTERFACE_PARAMETER of rst_async_kernel_00 : signal is "XIL_INTERFACENAME RST_ASYNC_KERNEL_00, POLARITY ACTIVE_LOW, INSERT_VIP 0";
  attribute X_INTERFACE_INFO of rst_async_kernel_01 : signal is "xilinx.com:signal:reset:1.0 RST_ASYNC_KERNEL_01 RST";
  attribute X_INTERFACE_PARAMETER of rst_async_kernel_01 : signal is "XIL_INTERFACENAME RST_ASYNC_KERNEL_01, POLARITY ACTIVE_LOW, INSERT_VIP 0";
  attribute X_INTERFACE_INFO of s_axi_ctrl_mgmt_arready : signal is "xilinx.com:interface:aximm:1.0 S_AXI_CTRL_MGMT ARREADY";
  attribute X_INTERFACE_INFO of s_axi_ctrl_mgmt_arvalid : signal is "xilinx.com:interface:aximm:1.0 S_AXI_CTRL_MGMT ARVALID";
  attribute X_INTERFACE_INFO of s_axi_ctrl_mgmt_awready : signal is "xilinx.com:interface:aximm:1.0 S_AXI_CTRL_MGMT AWREADY";
  attribute X_INTERFACE_INFO of s_axi_ctrl_mgmt_awvalid : signal is "xilinx.com:interface:aximm:1.0 S_AXI_CTRL_MGMT AWVALID";
  attribute X_INTERFACE_INFO of s_axi_ctrl_mgmt_bready : signal is "xilinx.com:interface:aximm:1.0 S_AXI_CTRL_MGMT BREADY";
  attribute X_INTERFACE_INFO of s_axi_ctrl_mgmt_bvalid : signal is "xilinx.com:interface:aximm:1.0 S_AXI_CTRL_MGMT BVALID";
  attribute X_INTERFACE_INFO of s_axi_ctrl_mgmt_rready : signal is "xilinx.com:interface:aximm:1.0 S_AXI_CTRL_MGMT RREADY";
  attribute X_INTERFACE_INFO of s_axi_ctrl_mgmt_rvalid : signal is "xilinx.com:interface:aximm:1.0 S_AXI_CTRL_MGMT RVALID";
  attribute X_INTERFACE_INFO of s_axi_ctrl_mgmt_wready : signal is "xilinx.com:interface:aximm:1.0 S_AXI_CTRL_MGMT WREADY";
  attribute X_INTERFACE_INFO of s_axi_ctrl_mgmt_wvalid : signal is "xilinx.com:interface:aximm:1.0 S_AXI_CTRL_MGMT WVALID";
  attribute X_INTERFACE_PARAMETER of s_axi_ctrl_mgmt_wvalid : signal is "XIL_INTERFACENAME S_AXI_CTRL_MGMT, DATA_WIDTH 32, PROTOCOL AXI4LITE, FREQ_HZ 99999992, ID_WIDTH 0, ADDR_WIDTH 32, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 0, HAS_LOCK 0, HAS_PROT 0, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 0, NUM_READ_OUTSTANDING 2, NUM_WRITE_OUTSTANDING 2, MAX_BURST_LENGTH 1, PHASE 0.0, CLK_DOMAIN bd_4885_pspmc_0_0_pl0_ref_clk, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0";
  attribute X_INTERFACE_INFO of s_axi_ctrl_mgmt_araddr : signal is "xilinx.com:interface:aximm:1.0 S_AXI_CTRL_MGMT ARADDR";
  attribute X_INTERFACE_INFO of s_axi_ctrl_mgmt_awaddr : signal is "xilinx.com:interface:aximm:1.0 S_AXI_CTRL_MGMT AWADDR";
  attribute X_INTERFACE_INFO of s_axi_ctrl_mgmt_bresp : signal is "xilinx.com:interface:aximm:1.0 S_AXI_CTRL_MGMT BRESP";
  attribute X_INTERFACE_INFO of s_axi_ctrl_mgmt_rdata : signal is "xilinx.com:interface:aximm:1.0 S_AXI_CTRL_MGMT RDATA";
  attribute X_INTERFACE_INFO of s_axi_ctrl_mgmt_rresp : signal is "xilinx.com:interface:aximm:1.0 S_AXI_CTRL_MGMT RRESP";
  attribute X_INTERFACE_INFO of s_axi_ctrl_mgmt_wdata : signal is "xilinx.com:interface:aximm:1.0 S_AXI_CTRL_MGMT WDATA";
  attribute X_INTERFACE_INFO of s_axi_ctrl_mgmt_wstrb : signal is "xilinx.com:interface:aximm:1.0 S_AXI_CTRL_MGMT WSTRB";
begin
  s_axi_ctrl_mgmt_bresp(1) <= \<const0>\;
  s_axi_ctrl_mgmt_bresp(0) <= \<const0>\;
  s_axi_ctrl_mgmt_rresp(1) <= \<const0>\;
  s_axi_ctrl_mgmt_rresp(0) <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
inst: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_shell_utils_ucc_v1_0_0_top
     port map (
      aclk_ctrl => aclk_ctrl,
      aclk_ext_tog_kernel_00 => aclk_ext_tog_kernel_00,
      aclk_ext_tog_kernel_01 => aclk_ext_tog_kernel_01,
      aclk_ext_tog_kernel_02 => NLW_inst_aclk_ext_tog_kernel_02_UNCONNECTED,
      aclk_ext_tog_kernel_03 => NLW_inst_aclk_ext_tog_kernel_03_UNCONNECTED,
      aclk_ext_tog_kernel_04 => NLW_inst_aclk_ext_tog_kernel_04_UNCONNECTED,
      aclk_ext_tog_kernel_05 => NLW_inst_aclk_ext_tog_kernel_05_UNCONNECTED,
      aclk_freerun => aclk_freerun,
      aclk_kernel_00 => aclk_kernel_00,
      aclk_kernel_01 => aclk_kernel_01,
      aclk_kernel_02 => NLW_inst_aclk_kernel_02_UNCONNECTED,
      aclk_kernel_03 => NLW_inst_aclk_kernel_03_UNCONNECTED,
      aclk_kernel_04 => NLW_inst_aclk_kernel_04_UNCONNECTED,
      aclk_kernel_05 => NLW_inst_aclk_kernel_05_UNCONNECTED,
      aclk_kernel_cont_00 => aclk_kernel_cont_00,
      aclk_kernel_cont_01 => aclk_kernel_cont_01,
      aclk_kernel_cont_02 => NLW_inst_aclk_kernel_cont_02_UNCONNECTED,
      aclk_kernel_cont_03 => NLW_inst_aclk_kernel_cont_03_UNCONNECTED,
      aclk_kernel_cont_04 => NLW_inst_aclk_kernel_cont_04_UNCONNECTED,
      aclk_kernel_cont_05 => NLW_inst_aclk_kernel_cont_05_UNCONNECTED,
      aclk_pcie => aclk_pcie,
      aresetn_ctrl => aresetn_ctrl,
      clk_in_kernel_00 => clk_in_kernel_00,
      clk_in_kernel_01 => clk_in_kernel_01,
      clk_in_kernel_02 => '0',
      clk_in_kernel_03 => '0',
      clk_in_kernel_04 => '0',
      clk_in_kernel_05 => '0',
      clk_kernel_00_locked => clk_kernel_00_locked,
      clk_kernel_01_locked => clk_kernel_01_locked,
      clk_kernel_02_locked => '1',
      clk_kernel_03_locked => '1',
      clk_kernel_04_locked => '1',
      clk_kernel_05_locked => '1',
      ext_tog_ctrl_kernel_00_enable => ext_tog_ctrl_kernel_00_enable,
      ext_tog_ctrl_kernel_00_in => ext_tog_ctrl_kernel_00_in,
      ext_tog_ctrl_kernel_00_out => ext_tog_ctrl_kernel_00_out,
      ext_tog_ctrl_kernel_01_enable => ext_tog_ctrl_kernel_01_enable,
      ext_tog_ctrl_kernel_01_in => ext_tog_ctrl_kernel_01_in,
      ext_tog_ctrl_kernel_01_out => ext_tog_ctrl_kernel_01_out,
      ext_tog_ctrl_kernel_02_enable => '0',
      ext_tog_ctrl_kernel_02_in => '0',
      ext_tog_ctrl_kernel_02_out => NLW_inst_ext_tog_ctrl_kernel_02_out_UNCONNECTED,
      ext_tog_ctrl_kernel_03_enable => '0',
      ext_tog_ctrl_kernel_03_in => '0',
      ext_tog_ctrl_kernel_03_out => NLW_inst_ext_tog_ctrl_kernel_03_out_UNCONNECTED,
      ext_tog_ctrl_kernel_04_enable => '0',
      ext_tog_ctrl_kernel_04_in => '0',
      ext_tog_ctrl_kernel_04_out => NLW_inst_ext_tog_ctrl_kernel_04_out_UNCONNECTED,
      ext_tog_ctrl_kernel_05_enable => '0',
      ext_tog_ctrl_kernel_05_in => '0',
      ext_tog_ctrl_kernel_05_out => NLW_inst_ext_tog_ctrl_kernel_05_out_UNCONNECTED,
      power_down => power_down,
      rst_async_kernel_00 => rst_async_kernel_00,
      rst_async_kernel_01 => rst_async_kernel_01,
      rst_async_kernel_02 => NLW_inst_rst_async_kernel_02_UNCONNECTED,
      rst_async_kernel_03 => NLW_inst_rst_async_kernel_03_UNCONNECTED,
      rst_async_kernel_04 => NLW_inst_rst_async_kernel_04_UNCONNECTED,
      rst_async_kernel_05 => NLW_inst_rst_async_kernel_05_UNCONNECTED,
      s_axi_ctrl_mgmt_araddr(31 downto 16) => B"0000000000000000",
      s_axi_ctrl_mgmt_araddr(15 downto 2) => s_axi_ctrl_mgmt_araddr(15 downto 2),
      s_axi_ctrl_mgmt_araddr(1 downto 0) => B"00",
      s_axi_ctrl_mgmt_arready => s_axi_ctrl_mgmt_arready,
      s_axi_ctrl_mgmt_arvalid => s_axi_ctrl_mgmt_arvalid,
      s_axi_ctrl_mgmt_awaddr(31 downto 16) => B"0000000000000000",
      s_axi_ctrl_mgmt_awaddr(15 downto 2) => s_axi_ctrl_mgmt_awaddr(15 downto 2),
      s_axi_ctrl_mgmt_awaddr(1 downto 0) => B"00",
      s_axi_ctrl_mgmt_awready => s_axi_ctrl_mgmt_awready,
      s_axi_ctrl_mgmt_awvalid => s_axi_ctrl_mgmt_awvalid,
      s_axi_ctrl_mgmt_bready => s_axi_ctrl_mgmt_bready,
      s_axi_ctrl_mgmt_bresp(1 downto 0) => NLW_inst_s_axi_ctrl_mgmt_bresp_UNCONNECTED(1 downto 0),
      s_axi_ctrl_mgmt_bvalid => s_axi_ctrl_mgmt_bvalid,
      s_axi_ctrl_mgmt_rdata(31 downto 0) => s_axi_ctrl_mgmt_rdata(31 downto 0),
      s_axi_ctrl_mgmt_rready => s_axi_ctrl_mgmt_rready,
      s_axi_ctrl_mgmt_rresp(1 downto 0) => NLW_inst_s_axi_ctrl_mgmt_rresp_UNCONNECTED(1 downto 0),
      s_axi_ctrl_mgmt_rvalid => s_axi_ctrl_mgmt_rvalid,
      s_axi_ctrl_mgmt_wdata(31 downto 25) => B"0000000",
      s_axi_ctrl_mgmt_wdata(24) => s_axi_ctrl_mgmt_wdata(24),
      s_axi_ctrl_mgmt_wdata(23 downto 21) => B"000",
      s_axi_ctrl_mgmt_wdata(20 downto 0) => s_axi_ctrl_mgmt_wdata(20 downto 0),
      s_axi_ctrl_mgmt_wready => s_axi_ctrl_mgmt_wready,
      s_axi_ctrl_mgmt_wstrb(3 downto 0) => B"0000",
      s_axi_ctrl_mgmt_wvalid => s_axi_ctrl_mgmt_wvalid,
      shutdown_clocks => shutdown_clocks
    );
end STRUCTURE;
